




/*
     FILE ARCHIVED ON 7:12:34 Jan 7, 2014 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 2:58:08 Jun 2, 2015.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
// Do not edit this file - Generated by Perlito5 9.0
//
// lib/Perlito5/Javascript2/Runtime.js
//
// Runtime for "Perlito" Perl5-in-Javascript2
//
// AUTHORS
//
// Flavio Soibelmann Glock  fglock@gmail.com
//
// COPYRIGHT
//
// Copyright 2009, 2010, 2011, 2012 by Flavio Soibelmann Glock and others.
//
// This program is free software; you can redistribute it and/or modify it
// under the same terms as Perl itself.
//
// See /web/20140107071234/http://www.perl.com/perl/misc/Artistic.html

var isNode = typeof require != "undefined";

if (typeof p5pkg !== "object") {
    p5pkg = {};
    p5LOCAL = [];

    var universal = function () {};
    p5pkg.UNIVERSAL = new universal();
    p5pkg.UNIVERSAL._ref_ = "UNIVERSAL";
    p5pkg.UNIVERSAL.isa = function (List__) {
        // TODO - use @ISA
        return List__[0]._class_._ref_ == List__[1]
    };
    p5pkg.UNIVERSAL.can = function (List__) {
        var o = List__[0];
        var s = List__[1];
        if ( s.indexOf("::") == -1 ) {
            return p5method_lookup(s, o._class_._ref__, {})
        }
        var c = s.split("::");
        s = c.pop(); 
        return p5method_lookup(s, c.join("::"), {});
    };
    p5pkg.UNIVERSAL.DOES = p5pkg.UNIVERSAL.can;

    var core = function () {};
    p5pkg["CORE"] = new core();
    p5pkg["CORE"]._ref_ = "CORE";

    var core_global = function () {};
    core_global.prototype = p5pkg.CORE;
    p5pkg["CORE::GLOBAL"] = new core_global();
    p5pkg["CORE::GLOBAL"]._ref_ = "CORE::GLOBAL";

    p5_error = function (type, v) {
        this.type = type;
        this.v = v;
        this.toString = function(){
            if (this.type == 'break') {
                return 'Can\'t "break" outside a given block'
            }
            if (this.type == 'next' || this.type == 'last' || this.type == 'redo') {
                if (this.v == "") { return 'Can\'t "' + this.type + '" outside a loop block' }
                return 'Label not found for "' + this.type + ' ' + this.v + '"';
            }
            return this.v;
        };
    };
    p5_error.prototype = Error.prototype;
}

function p5make_package(pkg_name) {
    if (!p5pkg.hasOwnProperty(pkg_name)) {
        var tmp = function () {};
        tmp.prototype = p5pkg["CORE::GLOBAL"];
        p5pkg[pkg_name] = new tmp();
        p5pkg[pkg_name]._ref_ = pkg_name;
        p5pkg[pkg_name]._class_ = p5pkg[pkg_name];  // XXX memory leak
        p5pkg[pkg_name]._is_package_ = 1;

        // TODO - add the other package global variables
        p5pkg[pkg_name]["List_ISA"] = [];
        p5pkg[pkg_name]["v_a"] = null;
        p5pkg[pkg_name]["v_b"] = null;
        p5pkg[pkg_name]["v__"] = null;
        p5pkg[pkg_name]["v_AUTOLOAD"] = null;
    }
    return p5pkg[pkg_name];
}

function p5code_lookup_by_name(package_name, sub_name) {
    // sub_name can be a function already
    if (typeof sub_name === "function") {
        return sub_name;
    }
    // sub_name can have an optional namespace
    var parts = sub_name.split(/::/);
    if (parts.length > 1) {
        sub_name = parts.pop();
        package_name = parts.join("::");
    }
    if (p5pkg.hasOwnProperty(package_name)) {
        var c = p5pkg[package_name];
        if ( c.hasOwnProperty(sub_name) ) {
            return c[sub_name]
        }
    }
    return null;
}

function p5get_class_for_method(method, class_name, seen) {
    // default mro
    // TODO - cache the methods that were already looked up
    if ( p5pkg[class_name].hasOwnProperty(method) ) {
        return class_name
    }
    var isa = p5pkg[class_name].List_ISA;
    if (isa) {
        for (var i = 0; i < isa.length; i++) {
            if (!seen[isa[i]]) {
                var m = p5get_class_for_method(method, isa[i], seen);
                if (m) {
                    return m 
                }
                seen[isa[i]]++;
            }
        }
    }
}

function p5method_lookup(method, class_name, seen) {
    var c = p5get_class_for_method(method, class_name, seen);
    if (c) {
        return p5pkg[c][method]
    }
    if ( p5pkg.UNIVERSAL.hasOwnProperty(method) ) {
        return p5pkg.UNIVERSAL[method]
    }
}

function p5call(invocant, method, list, p5want) {

    if (typeof invocant === "string") {
        list.unshift(invocant);
        invocant = p5make_package(invocant);
    }
    else if ( invocant.hasOwnProperty("_is_package_") ) {
        list.unshift(invocant._ref_);   // invocant is a "package" object
    }
    else {
        list.unshift(invocant);
    }

    if ( invocant.hasOwnProperty("_class_") ) {

        if ( invocant._class_.hasOwnProperty(method) ) {
            return invocant._class_[method](list, p5want)
        }
        var m = p5method_lookup(method, invocant._class_._ref_, {});
        if (m) {
            return m(list, p5want)
        }

        // method can have an optional namespace
        var pkg_name = method.split(/::/);
        if (pkg_name.length > 1) {
            var name = pkg_name.pop();
            pkg_name = pkg_name.join("::");
            m = p5method_lookup(name, pkg_name, {});
            if (m) {
                return m(list, p5want)
            }
            p5pkg.CORE.die(["method not found: ", name, " in class ", pkg_name]);
        }

        pkg_name = p5get_class_for_method('AUTOLOAD', invocant._class_._ref_, {}) || p5get_class_for_method('AUTOLOAD', "UNIVERSAL", {});
        if (pkg_name) {
            p5pkg[pkg_name]["v_AUTOLOAD"] = invocant._class_._ref_ + "::" + method;
            return p5pkg[pkg_name]["AUTOLOAD"](list, p5want);
        }

        p5pkg.CORE.die(["method not found: ", method, " in class ", invocant._class_._ref_]);

    }

    p5pkg.CORE.die(["Can't call method ", method, " on unblessed reference"]);

}

function p5call_sub(namespace, name, list, p5want) {
    if(p5pkg[namespace].hasOwnProperty(name)) {
        return p5pkg[namespace][name](list, p5want)
    }
    if(p5pkg[namespace].hasOwnProperty("AUTOLOAD")) {
        p5pkg[namespace]["v_AUTOLOAD"] = namespace + "::" + name;
        return p5pkg[namespace]["AUTOLOAD"](list, p5want)
    }
    p5pkg.CORE.die(["Undefined subroutine &" + namespace + "::" + name]);
}

function p5sub(fun, prot) {
    fun._prototype_ = prot;
    return fun;
}

function p5sub_exists(name, current_pkg_name) {
    var v = name;
    var pkg_name = v.split(/::/);
    if (pkg_name.length > 1) {
        v = pkg_name.pop();
        pkg_name = pkg_name.join("::");
    }
    else {
        pkg_name = current_pkg_name;
    }
    var c = v.charCodeAt(0);
    if (c < 27) {
        v = String.fromCharCode(c + 64) + v.substr(1);
        pkg_name = 'main';
    }
    return p5pkg[pkg_name].hasOwnProperty(v) 
}

function p5sub_prototype(name, current_pkg_name) {
    if (typeof name === "function") {
        return name._prototype_;
    }
    var v = name;
    var pkg_name = v.split(/::/);
    if (pkg_name.length > 1) {
        v = pkg_name.pop();
        pkg_name = pkg_name.join("::");
    }
    else {
        pkg_name = current_pkg_name;
    }
    var c = v.charCodeAt(0);
    if (c < 27) {
        v = String.fromCharCode(c + 64) + v.substr(1);
        pkg_name = 'main';
    }
    if (p5pkg[pkg_name].hasOwnProperty(v)) {
        return p5pkg[pkg_name][v]._prototype_
    }
    return p5pkg["Perlito5"].v_PROTO._hash_[name] || p5pkg["Perlito5"].v_CORE_PROTO._hash_[name]
}

function p5scalar_deref(v, current_pkg_name) {
    if (typeof v === "string") {
        var pkg_name = v.split(/::/);
        if (pkg_name.length > 1) {
            v = pkg_name.pop();
            pkg_name = pkg_name.join("::");
        }
        else {
            pkg_name = current_pkg_name;
        }
        var c = v.charCodeAt(0);
        if (c < 27) {
            v = String.fromCharCode(c + 64) + v.substr(1);
            pkg_name = 'main';
        }
        return p5make_package(pkg_name)["v_"+v];
    }
    return v._scalar_;
}

function p5scalar_deref_set(v, n, current_pkg_name) {
    if (typeof v === "string") {
        var pkg_name = v.split(/::/);
        if (pkg_name.length > 1) {
            v = pkg_name.pop();
            pkg_name = pkg_name.join("::");
        }
        else {
            pkg_name = current_pkg_name;
        }
        var c = v.charCodeAt(0);
        if (c < 27) {
            v = String.fromCharCode(c + 64) + v.substr(1);
            pkg_name = 'main';
        }
        p5make_package(pkg_name)["v_"+v] = n;
        return p5pkg[pkg_name]["v_"+v];
    }
    v._scalar_ = n;
    return v._scalar_;
}

function p5global_array(pkg_name, name) {
    v = "List_"+name;
    if (!p5make_package(pkg_name).hasOwnProperty(v)) {
        p5pkg[pkg_name][v] = [];
    }
    return p5pkg[pkg_name][v];
}

function p5global_hash(pkg_name, name) {
    v = "Hash_"+name;
    if (!p5make_package(pkg_name).hasOwnProperty(v)) {
        p5pkg[pkg_name][v] = {};
    }
    return p5pkg[pkg_name][v];
}

p5make_package("main");
p5make_package("Perlito5");
p5pkg["Perlito5"].v_PKG_NAME = "main";
p5pkg["main"]["v_@"] = [];      // $@
p5pkg["main"]["v_|"] = 0;       // $|
p5pkg["main"]["v_/"] = "\n";    // $/
p5pkg["main"]['v_"'] = " ";     // $"
p5pkg["main"]["List_#"] = [];   // @#
p5scalar_deref_set(String.fromCharCode(15), isNode ? "node.js" : "javascript2");  // $^O
p5pkg["main"]["List_INC"] = [];
p5pkg["main"]["Hash_INC"] = {};
p5pkg["main"]["List_ARGV"] = [];
p5pkg["main"]["Hash_ENV"] = {};
if (isNode) {
    p5pkg["main"]["List_ARGV"] = process.argv.splice(2);

    p5pkg["main"]["Hash_ENV"] = {};
    for (e in process.env) p5pkg["main"]["Hash_ENV"][e] = process.env[e];

    p5pkg["main"]["v_$"]       = process.pid;
} else if (typeof arguments === "object") {
    p5pkg["main"]["List_ARGV"] = arguments;
}

p5make_package("Perlito5::IO");
p5make_package("Perlito5::Runtime");
p5make_package("Perlito5::Grammar");

var sigils = { '@' : 'List_', '%' : 'Hash_', '$' : 'v_', '&' : '' };

function p5typeglob_set(namespace, name, obj) {
    p5make_package(namespace);
    if ( obj.hasOwnProperty("_ref_") ) {
        if ( obj._ref_ == "HASH" ) {
            p5pkg[namespace][sigils['%'] + name] = obj._hash_;
        }
        else if ( obj._ref_ == "ARRAY" ) {
            p5pkg[namespace][sigils['@'] + name] = obj._array_;
        }
        else if ( obj._ref_ == "SCALAR" ) {
            p5pkg[namespace][sigils['$'] + name] = obj._scalar_;
        }
        else if ( obj._ref_ == "CODE" ) {
            p5pkg[namespace][sigils['&'] + name] = obj._code_;
        }
        else if ( obj._ref_ == "GLOB" ) {
            // TODO
            p5pkg[namespace][name] = obj;
        }
    }
    else {
        p5pkg[namespace][name] = obj;   // native CODE
        // TODO - non-reference
    }
    return p5pkg[namespace][name];  // TODO - return GLOB
}

function p5typeglob_deref_set(v, obj, current_pkg_name) {
    if (typeof v === "string") {
        var pkg_name = v.split(/::/);
        if (pkg_name.length > 1) {
            v = pkg_name.pop();
            pkg_name = pkg_name.join("::");
        }
        else {
            pkg_name = current_pkg_name;
        }
        return p5typeglob_set(pkg_name, v, obj);
    }
    CORE.die(["TODO: can't p5typeglob_deref_set()"]);
}

function p5set_local(namespace, name, sigil) {
    var vname = sigils[sigil] + name;
    p5LOCAL.push([namespace, vname, namespace[vname]]);

    if (sigil == '$') {
        namespace[vname] = null;
    }
    else if (sigil == '@') {
        namespace[vname] = new p5Array([]);
    }
    else if (sigil == '%') {
        namespace[vname] = new p5Hash({});
    }
    return namespace[vname];
}

function p5cleanup_local(idx, value) {
    while (p5LOCAL.length > idx) {
        l = p5LOCAL.pop();
        l[0][l[1]] = l[2];
    }
    return value;
}

//-------- Reference

var p5id = Math.floor(Math.random() * 1000000000) + 1000000000;

function p5HashRef(o) {
    this._hash_ = o;
    this._ref_ = "HASH";
    this.bool = function() { return 1 };
}

function p5ArrayRef(o) {
    this._array_ = o;
    this._ref_ = "ARRAY";
    this.bool = function() { return 1 };
}

function p5ScalarRef(o) {
    this._scalar_ = o;
    this._ref_ = "SCALAR";
    this.bool = function() { return 1 };
}

function p5GlobRef(o) {
    this._scalar_ = o;
    this._ref_ = "GLOB";
    this.bool = function() { return 1 };
}

function p5CodeRef(o) {
    this._code_ = o;
    this._ref_ = "CODE";
    this.bool = function() { return 1 };
}

//-------- Hash 

Object.defineProperty( Object.prototype, "p5hget", {
    enumerable : false,
    value : function (i) { return this[i] }
});
Object.defineProperty( Object.prototype, "p5hset", {
    enumerable : false,
    value : function (i, v) { this[i] = v; return this[i] }
});

Object.defineProperty( Object.prototype, "p5incr", {
    enumerable : false,
    value : function (i) {
        this[i] = p5incr_(this[i]);
        return this[i];
    }
});
Object.defineProperty( Object.prototype, "p5postincr", {
    enumerable : false,
    value : function (i) {
        var v = this[i];
        this[i] = p5incr_(this[i]);
        return v;
    }
});
Object.defineProperty( Object.prototype, "p5decr", {
    enumerable : false,
    value : function (i) {
        this[i] = p5decr_(this[i]);
        return this[i];
    }
});
Object.defineProperty( Object.prototype, "p5postdecr", {
    enumerable : false,
    value : function (i) {
        var v = this[i];
        this[i] = p5decr_(this[i]);
        return v;
    }
});

Object.defineProperty( Object.prototype, "p5hget_array", {
    enumerable : false,
    value : function (i) {
        if (this[i] == null) { this[i] = new p5ArrayRef([]) }
        return this[i]
    }
});
Object.defineProperty( Object.prototype, "p5hget_hash", {
    enumerable : false,
    value : function (i) {
        if (this[i] == null) { this[i] = new p5HashRef({}) }
        return this[i]
    }
});

//-------


p5context = function(List__, p5want) {
    if (p5want) {
        return p5list_to_a.apply(null, List__);
    }
    // scalar: return the last value
    var o = List__;
    while (o instanceof Array) {
        o =   o.length
            ? o[o.length-1]
            : null;
    }
    return o;
}

p5list_to_a = function() {
    var res = [];
    for (i = 0; i < arguments.length; i++) {
        var o = arguments[i];
        if  (  o == null
            || o._class_    // perl5 blessed reference
            || o._ref_      // perl5 un-blessed reference
            )
        {
            res.push(o);
        }
        else if (o instanceof Array) {
            // perl5 array
            for (j = 0; j < o.length; j++) {
                res.push(o[j]);
            }
        }
        else if (typeof o === "object") {
            // perl5 hash
            for(var j in o) {
                if (o.hasOwnProperty(j)) {
                    res.push(j);
                    res.push(o[j]);
                }
            }
        }
        else {
            // non-ref
            res.push(o);
        }
    }
    return res;
};

p5a_to_h = function(a) {
    var res = {};
    for (i = 0; i < a.length; i+=2) {
        res[p5str(a[i])] = a[i+1];
    }
    return res;
};

p5idx = function(a, i) {
    return i >= 0 ? i : a.length + i
};

p5str = function(o) {
    if (o == null) {
        return "";
    }
    if (typeof o === "object") {
        if (o instanceof Array) {
            return CORE.join(["", o]);
        }
        if ( o.hasOwnProperty("_ref_") ) {
            var class_name = '';
            if (o._class_ && typeof o._class_._ref_ === "string") {
                // blessed reference
                class_name = o._class_._ref_ + '=';
            }
            if (!o._id_) { o._id_ = p5id++ }
            return [class_name, o._ref_, '(0x', o._id_.toString( 16 ), ')'].join('');
        }
    }
    if (typeof o === "function") {
        var class_name = '';
        if (o._class_ && typeof o._class_._ref_ === "string") {
            // blessed reference
            class_name = o._class_._ref_ + '=';
        }
        if (!o._id_) { o._id_ = p5id++ }
        return [class_name, 'CODE(0x', o._id_.toString( 16 ), ')'].join('');
    }
    if (typeof o == "number" && Math.abs(o) < 0.0001 && o != 0) {
        return o.toExponential().replace(/e-(\d)$/,"e-0$1");
    }
    if (typeof o === "boolean") {
        return o ? "1" : "";
    }
    if (typeof o !== "string") {
        return "" + o;
    }
    return o;
};

p5num = function(o) {
    if (o == null) {
        return 0;
    }
    if (typeof o === "object" && (o instanceof Array)) {
        return o.length;
    }
    if (typeof o !== "number") {
        var s = p5str(o).trim();
        var s1 = s.substr(0, 3).toUpperCase();
        if ( s1 == "NAN" ) { return NaN };
        if ( s1 == "INF" ) { return Infinity };
        s1 = s.substr(0, 4).toUpperCase();
        if ( s1 == "-NAN" ) { return NaN };
        if ( s1 == "-INF" ) { return -Infinity };
        s1 = parseFloat(s);
        if ( isNaN(s1) ) { return 0 };
        return s1;
    }
    return o;
};

p5bool = function(o) {
    if (o) {
        if (typeof o === "boolean") {
            return o;
        }
        if (typeof o === "number") {
            return o;
        }
        if (typeof o === "string") {
            return o != "" && o != "0";
        }
        if (typeof o.length === "number") {
            return o.length;
        }
        if (o instanceof Error) {
            return true;
        }
        for (var i in o) {
            return true;
        }
    }
    return false;
};

p5incr_ = function(o) {
    if (typeof o === "number") {
        return o + 1;
    }
    return p5str_inc(p5str(o));
};

p5decr_ = function(o) {
    if (typeof o === "number") {
        return o - 1;
    }
    return p5num(o) - 1;
};

p5modulo = function(o, k) {
    var m = o % k;
    if ( k < 0 && m > 0 ) {
        m = m + k;
    }
    else if ( k > 0 && m < 0 ) {
        m = m + k;
    }
    return m;
};

p5shift_left = function(o, k) {
    return k < 31 ? o << k : o * Math.pow(2, k);
};

p5and = function(a, fb) {
    if (p5bool(a)) {
        return fb();
    }
    return a;
};

p5or = function(a, fb) {
    if (p5bool(a)) {
        return a;
    }
    return fb();
};

p5defined_or = function(a, fb) {
    if (a == null) {
        return fb();
    }
    return a;
};

p5cmp = function(a, b) {
    return a > b ? 1 : a < b ? -1 : 0 
};

p5complement = function(a) {
    return a < 0 ? ~a : 4294967295 - a
    // return a < 0 ? ~a : 18446744073709551615 - a
};

p5str_replicate = function(o, n) {
    n = p5num(n);
    return n ? Array(n + 1).join(o) : "";
};

p5list_replicate = function(o, n) {
    o = p5list_to_a(o);
    n = p5num(n);
    var out = [];
    for(var i = 0; i < n; i++) {
        for(var j = 0; j < o.length; j++) {
            out.push(o[j]);
        }
    }
    return out;
};

p5str_inc = function(s) {
    s = p5str(s);
    if (s.length < 2) {
        if (s.match(/[012345678ABCDEFGHIJKLMNOPQRSTUVWXYabcdefghijklmnopqrstuvwxy]/)) {
            return String.fromCharCode(s.charCodeAt(0) + 1);
        }
        if (s == "9") {
            return "10";
        }
        if (s == "Z") {
            return "AA";
        }
        if (s == "z") {
            return "aa";
        }
        return "1";
    }
    var c = p5str_inc(s.substr(s.length-1, 1));
    if (c.length == 1) {
        return s.substr(0, s.length-1) + c;
    }
    return p5str_inc(s.substr(0, s.length-1)) + c.substr(c.length-1, 1);
};

p5negative = function(o) {
    if (o == null) {
        return '-0';
    }
    if (typeof o === "object" && (o instanceof Array)) {
        return -(o.length);
    }
    if (typeof o !== "number") {
        var s = p5str(o);
        s1 = parseFloat(s.trim());
        if ( isNaN(s1) ) {
            var c = s.substr(0, 1);
            if ( c == '+' ) { s = s.substr(1); return '-' + s }
            if ( c == '-' ) { s = s.substr(1); return '+' + s }
            if ( c.length && !c.match(/[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]/) ) {
                if ( s.trim().substr(0,1) == "-" ) { return 0 };
                return '-0';
            };
            return '-' + s
        };
        return -s1;
    }
    return -o;
};

p5for = function(namespace, var_name, func, args, cont, label) {
    var _redo = false;
    var v_old = namespace[var_name];
    for(var i = 0; i < args.length; i++) {
        namespace[var_name] = args[i];
        try {
            func()
        }
        catch(err) {
            if (err instanceof p5_error && err.v == label) {
                if (err.type == 'last') { return }
                else if (err.type == 'redo') { i--; _redo = true }
                else if (err.type != 'next') { throw(err) }
            }
            else {
                throw(err)
            }
        }
        if (cont) {
            try {
                if (!_redo) { cont() }
            }
            catch(err) {
                if (err instanceof p5_error && err.v == label) {
                    if (err.type == 'last') { return }
                    else if (err.type == 'redo') { _redo = true }
                    else if (err.type != 'next') { throw(err) }
                }            
                else {
                    throw(err)
                }
            }
       }
   }
    namespace[var_name] = v_old;
};

p5for_lex = function(func, args, cont, label) {
    var _redo = false;
    for(var i = 0; i < args.length; i++) {
        try {
            func(args[i])
        }
        catch(err) {
            if (err instanceof p5_error && err.v == label) {
                if (err.type == 'last') { return }
                else if (err.type == 'redo') { i--; _redo = true }
                else if (err.type != 'next') { throw(err) }
            }            
            else {
                throw(err)
            }
        }
        if (cont) {
            try {
                if (!_redo) { cont() }
            }
            catch(err) {
                if (err instanceof p5_error && err.v == label) {
                    if (err.type == 'last') { return }
                    else if (err.type == 'redo') { _redo = true }
                    else if (err.type != 'next') { throw(err) }
                }            
                else {
                    throw(err)
                }
            }
        }
    }
};

p5while = function(func, cond, cont, label) {
    var _redo = false;
    while (_redo || p5bool(cond())) {
        _redo = false;
        try {
            func()
        }
        catch(err) {
            if (err instanceof p5_error && err.v == label) {
                if (err.type == 'last') { return }
                else if (err.type == 'redo') { _redo = true }
                else if (err.type != 'next') { throw(err) }
            }            
            else {
                throw(err)
            }
        }
        if (cont) {
            try {
                if (!_redo) { cont() }
            }
            catch(err) {
                if (err instanceof p5_error && err.v == label) {
                    if (err.type == 'last') { return }
                    else if (err.type == 'redo') { _redo = true }
                    else if (err.type != 'next') { throw(err) }
                }            
                else {
                    throw(err)
                }
            }
        }
    }
};

p5map = function(namespace, func, args) {
    var v_old = namespace["v__"];
    var out = [];
    for(var i = 0; i < args.length; i++) {
        namespace["v__"] = args[i];
        var o = p5list_to_a(func(1));
        for(var j = 0; j < o.length; j++) {
            out.push(o[j]);
        }
    }
    namespace["v__"] = v_old;
    return out;
};

p5grep = function(namespace, func, args) {
    var v_old = namespace["v__"];
    var out = [];
    for(var i = 0; i < args.length; i++) {
        namespace["v__"] = args[i];
        if (p5bool(func(0))) {
            out.push(args[i])
        }
    }
    namespace["v__"] = v_old;
    return out;
};

p5sort = function(namespace, func, args) {
    var a_old = namespace["v_a"];
    var b_old = namespace["v_b"];
    var out = 
        func == null
        ? args.sort()
        : args.sort(
            function(a, b) {
                namespace["v_a"] = a;
                namespace["v_b"] = b;
                return func(0);
            }
        );
    namespace["v_a"] = a_old;
    namespace["v_b"] = b_old;
    return out;
};

//
// lib/Perlito5/Javascript2/Runtime.js
//
// Runtime for "Perlito" Perl5-in-Javascript2
//
// AUTHORS
//
// Flavio Soibelmann Glock  fglock@gmail.com
//
// COPYRIGHT
//
// Copyright 2009, 2010, 2011, 2012 by Flavio Soibelmann Glock and others.
//
// This program is free software; you can redistribute it and/or modify it
// under the same terms as Perl itself.
//
// See /web/20140107071234/http://www.perl.com/perl/misc/Artistic.html

//-------- Array 

Object.defineProperty( Array.prototype, "p5aget", {
    enumerable : false,
    value : function (i) {
        if (i < 0) { i =  this.length + i };
        return this[i] 
    }
});
Object.defineProperty( Array.prototype, "p5aset", {
    enumerable : false,
    value : function (i, v) {
        if (i < 0) { i =  this.length + i };
        this[i] = v;
        return this[i]
    }
});

Object.defineProperty( Array.prototype, "p5incr", {
    enumerable : false,
    value : function (i) {
        if (i < 0) { i =  this.length + i };
        this[i] = p5incr_(this[i]);
        return this[i];
    }
});
Object.defineProperty( Array.prototype, "p5postincr", {
    enumerable : false,
    value : function (i) {
        if (i < 0) { i =  this.length + i };
        var v = this[i];
        this[i] = p5incr_(this[i]);
        return v;
    }
});
Object.defineProperty( Array.prototype, "p5decr", {
    enumerable : false,
    value : function (i) {
        if (i < 0) { i =  this.length + i };
        this[i] = p5decr_(this[i]);
        return this[i];
    }
});
Object.defineProperty( Array.prototype, "p5postdecr", {
    enumerable : false,
    value : function (i) {
        if (i < 0) { i =  this.length + i };
        var v = this[i];
        this[i] = p5decr_(this[i]);
        return v;
    }
});

Object.defineProperty( Array.prototype, "p5aget_array", {
    enumerable : false,
    value : function (i) {
        if (i < 0) { i =  this.length + i };
        if (this[i] == null) { this[i] = new p5ArrayRef([]) }
        return this[i]
    }
});
Object.defineProperty( Array.prototype, "p5aget_hash", {
    enumerable : false,
    value : function (i) {
        if (i < 0) { i =  this.length + i };
        if (this[i] == null) { this[i] = new p5HashRef({}) }
        return this[i]
    }
});
Object.defineProperty( Array.prototype, "p5unshift", {
    enumerable : false,
    configurable : true,
    value : function (args) { 
        for(var i = args.length-1; i >= 0; i--) {
            this.unshift(args[i]);
        }
        return this.length; 
    }
});
Object.defineProperty( Array.prototype, "p5push", {
    enumerable : false,
    configurable : true,
    value : function (args) { 
        for(var i = 0; i < args.length; i++) {
            this.push(args[i]);
        }
        return this.length; 
    }
});

p5tie_array = function(v, List__) {
    var pkg_name = p5str(List__.shift());

    var res = p5call(pkg_name, 'TIEARRAY', List__, null);
    
    // TODO
    
    //  A class implementing an ordinary array should have the following methods:
    //      TIEARRAY pkg_name, LIST
    //      FETCH this, key
    //      STORE this, key, value
    //      FETCHSIZE this
    //      STORESIZE this, count
    //      CLEAR this
    //      PUSH this, LIST
    //      POP this
    //      SHIFT this
    //      UNSHIFT this, LIST
    //      SPLICE this, offset, length, LIST
    //      EXTEND this, count
    //      DESTROY this
    //      UNTIE this
    
    Object.defineProperty( v, "p5aget", {
        enumerable : false,
        configurable : true,
        value : function (i) {
            return p5call(res, 'FETCH', [i]);
        }
    });
    Object.defineProperty( v, "p5aset", {
        enumerable : false,
        configurable : true,
        value : function (i, value) {
            p5call(res, 'STORE', [i, value]);
            return value;
        }
    });
    Object.defineProperty( v, "p5incr", {
        enumerable : false,
        configurable : true,
        value : function (i) {
            var value = p5incr_(p5call(res, 'FETCH', [i]));
            p5call(res, 'STORE', [i, value]);
            return value;
        }
    });
    Object.defineProperty( v, "p5postincr", {
        enumerable : false,
        configurable : true,
        value : function (i) {
            var value = p5call(res, 'FETCH', [i]);
            p5call(res, 'STORE', [i, p5incr_(value)]);
            return value;
        }
    });
    Object.defineProperty( v, "p5decr", {
        enumerable : false,
        configurable : true,
        value : function (i) {
            var value = p5decr_(p5call(res, 'FETCH', [i]));
            p5call(res, 'STORE', [i, value]);
            return value;
        }
    });
    Object.defineProperty( v, "p5postdecr", {
        enumerable : false,
        configurable : true,
        value : function (i) {
            var value = p5call(res, 'FETCH', [i]);
            p5call(res, 'STORE', [i, p5decr_(value)]);
            return value;
        }
    });
    
    Object.defineProperty( v, "p5aget_array", {
        enumerable : false,
        configurable : true,
        value : function (i) {
            var value = p5call(res, 'FETCH', [i]);
            if (value == null) {
                value = new p5ArrayRef([]);
                p5call(res, 'STORE', [i, value]);
            }
            return value;
        }
    });
    Object.defineProperty( v, "p5aget_hash", {
        enumerable : false,
        configurable : true,
        value : function (i) {
            var value = p5call(res, 'FETCH', [i]);
            if (value == null) {
                value = new p5HashRef({});
                p5call(res, 'STORE', [i, value]);
            }
            return value;
        }
    });
    Object.defineProperty( v, "p5untie", {
        enumerable : false,
        configurable : true,
        value : function (i) { return p5call(res, 'UNTIE', []) }
    });
    Object.defineProperty( v, "shift", {
        enumerable : false,
        configurable : true,
        value : function () { return p5call(res, 'SHIFT', []) }
    });
    Object.defineProperty( v, "pop", {
        enumerable : false,
        configurable : true,
        value : function () { return p5call(res, 'POP', []) }
    });
    Object.defineProperty( v, "p5unshift", {
        enumerable : false,
        configurable : true,
        value : function (args) { 
            for(var i = args.length-1; i >= 0; i--) {
                p5call(res, 'UNSHIFT', [args[i]]);
            }
            return p5call(res, 'FETCHSIZE', []); 
        }
    });
    Object.defineProperty( v, "p5push", {
        enumerable : false,
        configurable : true,
        value : function (args) { 
            for(var i = 0; i < args.length; i++) {
                p5call(res, 'PUSH', [args[i]]);
            }
            return p5call(res, 'FETCHSIZE', []); 
        }
    });

    return res;
};

p5untie_array = function(v) {
    if (v.hasOwnProperty('p5untie')) {
        var res = v.p5untie();  // call UNTIE
        delete v.p5aget;
        delete v.p5aset;
        delete v.p5incr;
        delete v.p5postincr;
        delete v.p5decr;
        delete v.p5postdecr;
        delete v.p5aget_array;
        delete v.p5aget_hash;
        delete v.p5untie;
        delete v.shift;
        delete v.pop;
        delete v.p5unshift;
        delete v.p5push;
        return res;
    }
    else {
        return null;
    }
};


function p5ArrayOfAlias(o) {

    // this is the structure that represents @_
    // _array = [ ref, index,
    //            ref, index,
    //            ...
    //          ]

    // TODO - autovivify array cells

    this._array_ = o;

    this.p5aget = function (i) {
        if (i < 0) { i =  this.length + i };
        return this._array_[i+i][this._array_[i+i+1]]; 
    }
    this.p5aset = function (i, v) {
        if (i < 0) { i =  this.length + i };
        this._array_[i+i][this._array_[i+i+1]] = v;
        return this._array_[i+i][this._array_[i+i+1]]
    }
    this.p5incr = function (i) {
        if (i < 0) { i =  this.length + i };
        this._array_[i+i][this._array_[i+i+1]] = p5incr_(this._array_[i+i][this._array_[i+i+1]]);
        return this._array_[i+i][this._array_[i+i+1]];
    }
    this.p5postincr = function (i) {
        if (i < 0) { i =  this.length + i };
        var v = this._array_[i+i][this._array_[i+i+1]];
        this._array_[i+i][this._array_[i+i+1]] = p5incr_(this._array_[i+i][this._array_[i+i+1]]);
        return v;
    }
    this.p5decr = function (i) {
        if (i < 0) { i =  this.length + i };
        this._array_[i+i][this._array_[i+i+1]] = p5decr_(this._array_[i+i][this._array_[i+i+1]]);
        return this._array_[i+i][this._array_[i+i+1]];
    }
    this.p5postdecr = function (i) {
        if (i < 0) { i =  this.length + i };
        var v = this._array_[i+i][this._array_[i+i+1]];
        this._array_[i+i][this._array_[i+i+1]] = p5decr_(this._array_[i+i][this._array_[i+i+1]]);
        return v;
    }
    this.p5aget_array = function (i) {
        if (i < 0) { i =  this.length + i };
        if (this._array_[i+i][this._array_[i+i+1]] == null) {
            this._array_[i+i][this._array_[i+i+1]] = new p5ArrayRef([])
        }
        return this._array_[i+i][this._array_[i+i+1]]
    }
    this.p5aget_hash = function (i) {
        if (i < 0) { i =  this.length + i };
        if (this._array_[i+i][this._array_[i+i+1]] == null) {
            this._array_[i+i][this._array_[i+i+1]] = new p5HashRef({})
        }
        return this._array_[i+i][this._array_[i+i+1]]
    }
    this.p5unshift = function (args) { 
        for(var i = args.length-1; i >= 0; i--) {
            this.unshift(0);
            this.unshift([args[i]]);
        }
        return this._array_.length / 2; 
    }
    this.p5push = function (args) { 
        for(var i = 0; i < args.length; i++) {
            this.push([args[i]]);
            this.push(0);
        }
        return this._array_.length / 2; 
    }
    this.shift = function () { 
        var v0 = this._array_.shift();
        return v0[this._array_.shift()];
    }
    this.pop = function () { 
        var v1 = this._array_.pop();
        var v0 = this._array_.pop();
        return v0[v1];
    }
}


//
//
// lib/Perlito5/Javascript2/CORE.js
//
// CORE functions for "Perlito" Perl5-in-Javascript2
//
// AUTHORS
//
// Flavio Soibelmann Glock  fglock@gmail.com
//
// COPYRIGHT
//
// Copyright 2009, 2010, 2011, 2012 by Flavio Soibelmann Glock and others.
//
// This program is free software; you can redistribute it and/or modify it
// under the same terms as Perl itself.
//
// See /web/20140107071234/http://www.perl.com/perl/misc/Artistic.html

var CORE = p5pkg.CORE;

var isNode = typeof require != "undefined";

CORE.bless = function(List__) {
    var o        = List__[0];
    var pkg_name = List__[1];
    if (typeof pkg_name === "object") {
        // bless {}, Class
        o._class_ = pkg_name;
        return o;
    }
    if (!p5pkg.hasOwnProperty(pkg_name)) {
        p5make_package(pkg_name);
    }
    o._class_ = p5pkg[pkg_name];
    return o;
};

CORE.caller = function(List__, want) {
    return p5pkg["Perlito5"].v_CALLER._array_ ?
           p5pkg["Perlito5"].v_CALLER._array_[0]._array_ :
           p5context([], want);
};

CORE.chr = function(List__) {
    var v = p5num(List__[0]);
    return String.fromCharCode(v >= 0 ? v : 65533);
};

CORE.ord = function(List__) {
    return p5str(List__[0]).charCodeAt(0);
};

CORE.oct = function(List__) {
    var v = List__[0];
    var b = v.substr(0,2);
    v = v.replace("_", "");
    if (b == "0b" || b == "0B") { return parseInt(v.substr(2), 2)  }
    if (b == "0x" || b == "0X") { return parseInt(v.substr(2), 16) }
    return parseInt(v, 8);
};

CORE.abs   = function(List__) { return Math.abs(List__[0]) };
CORE.exp   = function(List__) { return Math.exp(List__[0]) };
CORE.log   = function(List__) { return Math.log(List__[0]) };
CORE.cos   = function(List__) { return Math.cos(List__[0]) };
CORE.sin   = function(List__) { return Math.sin(List__[0]) };
CORE.sqrt  = function(List__) { return Math.sqrt(List__[0]) };
CORE.atan2 = function(List__) { return Math.atan2(List__[0], List__[1]) };
CORE.int   = function(List__) { return List__[0] > 0 ? Math.floor(List__[0]) : Math.ceil(List__[0]) };

CORE.rand = function(List__) {
    var v = p5num(List__[0]) || 1;
    return Math.random() * v;
};

CORE.lc      = function(List__) { return p5str(List__[0]).toLowerCase() };
CORE.uc      = function(List__) { return p5str(List__[0]).toUpperCase() };

CORE.lcfirst = function(List__) {
    var s = p5str(List__[0]);
    var c = s.length > 0 ? s.slice(0,1).toLowerCase() : "";
    s = s.length > 1 ? s.substr(1) : "";
    return c + s
};

CORE.ucfirst = function(List__) {
    var s = p5str(List__[0]);
    var c = s.length > 0 ? s.slice(0,1).toUpperCase() : "";
    s = s.length > 1 ? s.substr(1) : "";
    return c + s
};

CORE.quotemeta = function(List__) {
    var s = p5str(List__[0]);
    var out = [];
    for(var i = 0; i < s.length; i++) {
        if (s.substr(i, 1).match(/[^0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz]/)) {
            out.push(String.fromCharCode(92));
        }
        out.push(s.substr(i, 1));
    }
    return out.join("");       
};

CORE.substr = function(List__) {
    var expr        = List__[0];
    var offset      = List__[1];
    var length      = List__[2];
    var replacement = List__[3];
    if (length < 0) {
        var s = p5str(expr);
        length = s.length - offset + length;
    } 
    return p5str(expr).substr(offset, length);
};

CORE.values = function(List__, p5want) {
    var o = List__[0];
    delete o["_each_"];
    if (p5want) {
        if (o == null) {
            return [];
        };
        if (typeof o.values === "function") {
            return o.values();
        }
        var out = [];
        for (var i in o) {
            out.push(o[i]);
        }
        return out;
    }
    return CORE.keys(List__, p5want);
};

CORE.keys = function(List__, p5want) {
    var o = List__[0];
    delete o["_each_"];
    if (p5want) {
        if (o == null) {
            return [];
        }
        if (typeof o.keys === "function") {
            return o.keys();
        }
        var out = [];
        for (var i in o) {
            out.push(i);
        }
        return out;
    }
    else {
        if (o == null) {
            return 0;
        }
        if (typeof o.keys === "function") {
            return CORE.scalar([o.keys()]);
        }
        var out = 0;
        for (var i in o) {
            out++;
        }
        return out;
    }
};

CORE.each = function(List__, p5want) {
    var o = List__[0];
    if (o.hasOwnProperty("_each_")) {
        return o._each_(p5want)
    }
    var keys = CORE.keys([o], 1);
    var i = 0;
    o._each_ = function () {
        if (i < keys.length) {
            i++;
            return p5want ? [keys[i-1], o[keys[i-1]]] : keys[i-1];
        }
        i = 0;
        return p5want ? [] : null;
    };
    return o._each_(p5want);
};

CORE.reverse = function(List__) {
    var o = List__[0];
    if (o == null) {
        return "";
    }
    if (typeof o === "string") {
        return o.split("").reverse().join("")
    }
    var out = [];
    for(var i = 0; i < o.length; i++) {
        out.unshift(o[i]);
    }
    return out;
};

CORE.splice = function(List__, p5want) {
    var array  = List__.shift();
    // CORE.say([ array ]);
    var offset = p5num(List__.shift());
    var limit  = List__.length ? p5num(List__.shift()) : (array.length + 1);

    if (limit < 0) {
        limit = array.length + limit - 1;
    }

    var list = [offset, limit];
    for(var i = 0; i < List__.length; i++) {
        list = p5list_to_a( list, List__[i]);
    }

    out = array.splice.apply(array, list);
    // CORE.say([ CORE.join([":",array]), " ofs=", offset, " lim=", limit, " list=", list, " out=", CORE.join([":",out])  ]);
    return p5want ? out : out.pop();
};

CORE.join = function(List__) {
    var s = List__[0];
    var o = List__[1];
    return o.join(s);
};

CORE.index = function(List__) {
    var o = List__[0];
    var s = List__[1];
    try {
        return o.indexOf(s, p5num(List__[2]));
    }
    catch(err) {
        return -1;
    }
};
CORE.rindex = function(List__) {
    var o = List__[0];
    var s = List__[1];
    try {
        if (List__.length > 2) {
            var i = p5num(List__[2]);
            if (i < 0) {
                if (s.length == 0) {
                    return 0;
                }
                return -1;
            }
            return o.lastIndexOf(s, i);
        }
        return o.lastIndexOf(s);
    }
    catch(err) {
        return -1;
    }
};

CORE.length = function(List__) {
    return p5str(List__[0]).length;
};

CORE.pack    = function(List__) { CORE.warn([ "CORE::pack not implemented" ]) };
CORE.unpack  = function(List__) { CORE.warn([ "CORE::unpack not implemented" ]) };

CORE.ref = function(List__) {
    var o = List__[0];
    if (o == null) {
        return "";
    }
    if (o._class_ && typeof o._class_._ref_ === "string") {
        // blessed reference
        return o._class_._ref_;
    }
    if (typeof o._ref_ === "string") {
        // un-blessed reference
        return o._ref_;
    }
    if (typeof o === "function") {
        return "CODE";
    }
    return "";
};

CORE.split = function(List__) {
    var pattern = List__[0];
    var s       = List__[1];
    var limit   = List__[2];
    if (typeof pattern === "string") {
        if (pattern == " ") {
            var res = [];
            for (var i_ = 0, a_ = s.split(/(?: |\n)+/); i_ < a_.length ; i_++) {
                if (a_[i_] != "") {
                    res.push(a_[i_])
                }
            }
            return res;
        }
        return s.split(pattern);
    }
    CORE.die(["not implemented"]);
};


//
//
// lib/Perlito5/Javascript2/IO.js
//
// I/O functions for "Perlito" Perl5-in-Javascript2
//
// AUTHORS
//
// Flavio Soibelmann Glock  fglock@gmail.com
//
// COPYRIGHT
//
// Copyright 2009, 2010, 2011, 2012 by Flavio Soibelmann Glock and others.
//
// This program is free software; you can redistribute it and/or modify it
// under the same terms as Perl itself.
//
// See /web/20140107071234/http://www.perl.com/perl/misc/Artistic.html

var isNode = typeof require != "undefined";
if (isNode) {

    var fs = require("fs");

    p5typeglob_set("Perlito5::IO", "print", function (List__, p5want) {
        var i;
        List__.shift(); // TODO - use IO::FILE
        for (i = 0; i < List__.length; i++) {
            process.stdout.write(p5str(List__[i]));
        }
        return 1;
    } );

    p5atime = function(s) {
        try {
            var stat = fs.statSync(s); return stat["atime"];
        }
        catch(err) {
            return '';
        }
    };
    p5mtime = function(s) {
        try {
            var stat = fs.statSync(s); return stat["mtime"];
        }
        catch(err) {
            return '';
        }
    };
    p5ctime = function(s) {
        try {
            var stat = fs.statSync(s); return stat["ctime"];
        }
        catch(err) {
            return '';
        }
    };
    p5size = function(s) {
        try {
            var stat = fs.statSync(s); return stat["size"];
        }
        catch(err) {
            return '';
        }
    };
    p5is_file = function(s) {
        try {
            var stat = fs.statSync(s); return stat.isFile() ? 1 : 0;
        }
        catch(err) {
            return '';
        }
    };
    p5is_directory = function(s) {
        try {
            var stat = fs.statSync(s); return stat.isDirectory() ? 1 : 0;
        }
        catch(err) {
            return '';
        }
    };
    p5file_exists = function(s) {
        return p5is_file(s) || p5is_directory(s);
    };

    CORE.chdir = function(List__) {
        try {
            process.chdir(p5str(List__[0]));
            return 1;
        }
        catch(err) {
            return '';
        }
    };

    CORE.close = function(List__) {
        try {
            fs.closeSync(p5str(List__[0]));
            return 1;
        }
        catch(err) {
            p5pkg["main"]["v_!"] = err;
            return '';
        }
    };

    CORE.exit = function(List__) {
        process.exit(List__[0]);
    };

    CORE.rename = function(List__) {
        try {
            fs.renameSync(p5str(List__[0]), p5str(List__[1]));
            return 1;
        }
        catch(err) {
            p5pkg["main"]["v_!"] = err;
            return '';
        }
    };

    CORE.unlink = function(List__) {
        var count = 0;
        try {
            for(var i = 0; i < List__.length; i++) {
                fs.unlinkSync(p5str(List__[i]));
                count++;
            }
            return count;
        }
        catch(err) {
            p5pkg["main"]["v_!"] = err;
            return count;
        }
    };

    p5typeglob_set("Perlito5::IO", "slurp", function(List__) {
        return fs.readFileSync(List__[0],"utf8");
    });

} else {
    // not running in node.js
    p5typeglob_set("Perlito5::IO", "print", function (List__, p5want) {
        var i;
        List__.shift(); // TODO - use IO::FILE
        for (i = 0; i < List__.length; i++) {
            write(p5str(List__[i]));
        }
        return 1;
    });
    p5typeglob_set("Perlito5::IO", "slurp", function(List__) {
        var filename = List__[0];
        if (typeof readFile == "function") {
            return readFile(filename);
        }
        if (typeof read == "function") {
            // v8
            return read(filename);
        }
        p5pkg.CORE.die(["Perlito5::IO::slurp() not implemented"]);
    });
}

CORE.die = function(List__) {
    var i;
    var s = "";
    for (i = 0; i < List__.length; i++) {
        s = s + p5str(List__[i]);
    }
    try {
        s = s + "\n" + new Error().stack;
    }
    catch(err) { }
    p5pkg["main"]["v_@"] = "Died: " + s;
    throw(new p5_error("die", "Died: " + s));
};

CORE.say = function(List__) {
    CORE.print(List__);
    return CORE.print(["\n"]);
};

CORE.print = function(List__) {
    var i;
    for (i = 0; i < List__.length; i++) {
        p5pkg['Perlito5::IO'].print([ 'STDOUT', List__[i] ]);
    }
    return 1;
};

CORE.warn = function(List__) {
    var i;
    var s = "";
    for (i = 0; i < List__.length; i++) {
        s = s + p5str(List__[i]);
    }
    try {
        s = s + "\n" + new Error().stack;
    }
    catch(err) { }
    p5pkg['Perlito5::IO'].print([ 'STDERR', "Warning: " + s + "\n"]);
};


/**
 * Copyright (c) 2010 Jakob Westhoff
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

CORE.sprintf = function(List__) {
    var format = List__[0];
    var list = List__[1];

    // Check for format definition
    if ( typeof format != 'string' ) {
        CORE.die(["sprintf: The first arguments need to be a valid format string."]);
    }
    
    /**
     * Define the regex to match a formating string
     * The regex consists of the following parts:
     * percent sign to indicate the start
     * (optional) sign specifier
     * (optional) padding specifier
     * (optional) alignment specifier
     * (optional) width specifier
     * (optional) precision specifier
     * type specifier:
     *  % - literal percent sign
     *  b - binary number
     *  c - ASCII character represented by the given value
     *  d - signed decimal number
     *  f - floating point value
     *  o - octal number
     *  s - string
     *  x - hexadecimal number (lowercase characters)
     *  X - hexadecimal number (uppercase characters)
     */
    var r = new RegExp( /%(\+)?([0 ]|'(.))?(-)?([0-9]+)?(\.([0-9]+))?([%bcdfosxX])/g );

    /**
     * Each format string is splitted into the following parts:
     * 0: Full format string
     * 1: sign specifier (+)
     * 2: padding specifier (0/<space>/'<any char>)
     * 3: if the padding character starts with a ' this will be the real 
     *    padding character
     * 4: alignment specifier
     * 5: width specifier
     * 6: precision specifier including the dot
     * 7: precision specifier without the dot
     * 8: type specifier
     */
    var parts      = [];
    var paramIndex = 0;
    while ( part = r.exec( format ) ) {
        // Check if an input value has been provided, for the current
        // format string
        if ( paramIndex >= list.length ) {
            CORE.die(["sprintf: At least one argument was missing."]);
        }

        parts[parts.length] = {
            /* beginning of the part in the string */
            begin: part.index,
            /* end of the part in the string */
            end: part.index + part[0].length,
            /* force sign */
            sign: ( part[1] == '+' ),
            /* is the given data negative */
            negative: ( parseInt( list[paramIndex] ) < 0 ) ? true : false,
            /* padding character (default: <space>) */
            padding: ( part[2] == undefined )
                     ? ( ' ' ) /* default */
                     : ( ( part[2].substring( 0, 1 ) == "'" ) 
                         ? ( part[3] ) /* use special char */
                         : ( part[2] ) /* use normal <space> or zero */
                       ),
            /* should the output be aligned left?*/
            alignLeft: ( part[4] == '-' ),
            /* width specifier (number or false) */
            width: ( part[5] != undefined ) ? part[5] : false,
            /* precision specifier (number or false) */
            precision: ( part[7] != undefined ) ? part[7] : false,
            /* type specifier */
            type: part[8],
            /* the given data associated with this part converted to a string */
            data: ( part[8] != '%' ) ? String ( list[paramIndex++] ) : false
        };
    }

    var newString = "";
    var start = 0;
    // Generate our new formated string
    for( var i=0; i<parts.length; ++i ) {
        // Add first unformated string part
        newString += format.substring( start, parts[i].begin );
        
        // Mark the new string start
        start = parts[i].end;

        // Create the appropriate preformat substitution
        // This substitution is only the correct type conversion. All the
        // different options and flags haven't been applied to it at this
        // point
        var preSubstitution = "";
        switch ( parts[i].type ) {
            case '%':
                preSubstitution = "%";
            break;
            case 'b':
                preSubstitution = Math.abs( parseInt( parts[i].data ) ).toString( 2 );
            break;
            case 'c':
                preSubstitution = String.fromCharCode( Math.abs( parseInt( parts[i].data ) ) );
            break;
            case 'd':
                preSubstitution = String( Math.abs( parseInt( parts[i].data ) ) );
            break;
            case 'f':
                preSubstitution = ( parts[i].precision == false )
                                  ? ( String( ( Math.abs( parseFloat( parts[i].data ) ) ) ) )
                                  : ( Math.abs( parseFloat( parts[i].data ) ).toFixed( parts[i].precision ) );
            break;
            case 'o':
                preSubstitution = Math.abs( parseInt( parts[i].data ) ).toString( 8 );
            break;
            case 's':
                preSubstitution = parts[i].data.substring( 0, parts[i].precision ? parts[i].precision : parts[i].data.length ); /* Cut if precision is defined */
            break;
            case 'x':
                preSubstitution = Math.abs( parseInt( parts[i].data ) ).toString( 16 ).toLowerCase();
            break;
            case 'X':
                preSubstitution = Math.abs( parseInt( parts[i].data ) ).toString( 16 ).toUpperCase();
            break;
            default:
                throw 'sprintf: Unknown type "' + parts[i].type + '" detected. This should never happen. Maybe the regex is wrong.';
        }

        // The % character is a special type and does not need further processing
        if ( parts[i].type ==  "%" ) {
            newString += preSubstitution;
            continue;
        }

        // Modify the preSubstitution by taking sign, padding and width
        // into account

        // Pad the string based on the given width
        if ( parts[i].width != false ) {
            // Padding needed?
            if ( parts[i].width > preSubstitution.length ) 
            {
                var origLength = preSubstitution.length;
                for( var j = 0; j < parts[i].width - origLength; ++j ) 
                {
                    preSubstitution = ( parts[i].alignLeft == true ) 
                                      ? ( preSubstitution + parts[i].padding )
                                      : ( parts[i].padding + preSubstitution );
                }
            }
        }

        // Add a sign symbol if neccessary or enforced, but only if we are
        // not handling a string
        if ( parts[i].type == 'b' 
          || parts[i].type == 'd' 
          || parts[i].type == 'o' 
          || parts[i].type == 'f' 
          || parts[i].type == 'x' 
          || parts[i].type == 'X' ) {
            if ( parts[i].negative == true ) {
                preSubstitution = "-" + preSubstitution;
            }
            else if ( parts[i].sign == true ) {
                preSubstitution = "+" + preSubstitution;
            }
        }

        // Add the substitution to the new string
        newString += preSubstitution;
    }

    // Add the last part of the given format string, which may still be there
    newString += format.substring( start, format.length );

    return newString;
};

CORE.printf = function(List__) {
    return CORE.print([ CORE.sprintf(List__) ]);
};

var p5want;
var List__ = [];
var p5100 = p5pkg['main'];
(function () {
	p5make_package("Perlito5");
	// use strict
;
	// use warnings
;
	(function () {
		null;
		p5make_package("Perlito5::Match");
		p5typeglob_set("Perlito5::Match", "flat", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			return (( ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('capture') != null) ? (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('capture') : p5pkg["Perlito5::Match"].substr([(v_self || (v_self = new p5HashRef({})))._hash_.p5hget('str'), (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('from'), p5context([(p5num((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('to')) - p5num((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('from')))], 0)], p5want)));
		}, null));
		1;
	})()
;
	// use Perlito5::Match
;
	(function () {
		p5make_package("Perlito5::Grammar::Precedence");
		// use feature
;
		p5typeglob_set("Perlito5::Grammar::Precedence", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::Grammar::Precedence"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		var v_Operator;
		v_Operator = ((new p5HashRef({})));
		var v_Precedence;
		v_Precedence = ((new p5HashRef({})));
		var v_PrefixPrecedence;
		v_PrefixPrecedence = ((new p5HashRef({})));
		var v_Assoc;
		v_Assoc = ((new p5HashRef({})));
		p5typeglob_set("Perlito5::Grammar::Precedence", "is_assoc_type", p5sub(function (List__, p5want) {
			var v_assoc_type;
			v_assoc_type = (List__.shift());
			var v_op_name;
			v_op_name = (List__.shift());
			return ((v_Assoc || (v_Assoc = new p5HashRef({})))._hash_.p5hget_hash(p5str(v_assoc_type))._hash_.p5hget(p5str(v_op_name)));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Precedence", "is_fixity_type", p5sub(function (List__, p5want) {
			var v_fixity_type;
			v_fixity_type = (List__.shift());
			var v_op_name;
			v_op_name = (List__.shift());
			return ((v_Operator || (v_Operator = new p5HashRef({})))._hash_.p5hget_hash(p5str(v_fixity_type))._hash_.p5hget(p5str(v_op_name)));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Precedence", "is_term", p5sub(function (List__, p5want) {
			var v_token;
			v_token = (List__.shift());
			return (p5or(p5or(p5context([(p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(0)) == 'term')], 0), function () { return p5context([(p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(0)) == 'postfix_or_term')], 0) }), function () { return p5context([(p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(0)) == 'postfix')], p5want) }));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Precedence", "is_num", p5sub(function (List__, p5want) {
			return (p5and((p5str(List__.p5aget(0)) >= '0'), function () { return (p5str(List__.p5aget(0)) <= '9') }));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Precedence", "is_ident_middle", p5sub(function (List__, p5want) {
			var v_c;
			v_c = (List__.shift());
			return (p5or(p5or(p5context([p5and((p5str(v_c) >= 'a'), function () { return (p5str(v_c) <= 'z') })], 0), function () { return p5context([p5and((p5str(v_c) >= '0'), function () { return (p5str(v_c) <= '9') })], 0) }), function () { return p5context([(p5str(v_c) == '_')], p5want) }));
		}, null));
		var List_Parsed_op_chars= [];
		List_Parsed_op_chars = [2, 1];
		var Hash_Parsed_op = {};
		Hash_Parsed_op = p5a_to_h(['?', p5sub(function (List__, p5want) {
					return (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_ternary", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
				}, null), '(', p5sub(function (List__, p5want) {
					return (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_paren", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
				}, null), '[', p5sub(function (List__, p5want) {
					return (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_square", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
				}, null), '{', p5sub(function (List__, p5want) {
					return (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
				}, null), '->', p5sub(function (List__, p5want) {
					return (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_arrow", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
				}, null)]);
		var List_Term_chars= [];
		var Hash_Term = {};
		p5typeglob_set("Perlito5::Grammar::Precedence", "add_term", p5sub(function (List__, p5want) {
			var v_name;
			v_name = (List__.shift());
			var v_param;
			v_param = (List__.shift());
			Hash_Term.p5hset(p5str(v_name), (v_param));
			p5while(function () {
						List_Term_chars.p5unshift([(p5num((List_Term_chars.length)) + 1)]);
					}, function () { return (p5num(List_Term_chars.length) < p5pkg["Perlito5::Grammar::Precedence"].length([v_name], 0)) }, false, "")
		}, null));
		var v_End_token;
		var v_End_token_chars;
		var Hash_Op = {};
		var List_Op_chars= [];
		List_Op_chars = [3, 2, 1];
		p5typeglob_set("Perlito5::Grammar::Precedence", "op_parse", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.shift());
				var v_str;
				v_str = (List__.shift());
				var v_pos;
				v_pos = (List__.shift());
				var v_last_is_term;
				v_last_is_term = (List__.shift());
				p5for_lex(function (v_len) {
						var v_term;
						v_term = (p5pkg["Perlito5::Grammar::Precedence"].substr([v_str, v_pos, v_len], 0));
						if ( (v_End_token)._hash_.hasOwnProperty(v_term) ) {
							(function () {
								var v_c1;
								v_c1 = (p5pkg["Perlito5::Grammar::Precedence"].substr([v_str, ((p5num(v_pos) + p5num(v_len)) - 1), 1], 0));
								var v_c2;
								v_c2 = (p5pkg["Perlito5::Grammar::Precedence"].substr([v_str, (p5num(v_pos) + p5num(v_len)), 1], 0));
								if ( (!( (p5bool(p5pkg["Perlito5::Grammar::Precedence"].is_ident_middle([v_c1], 0)) && p5bool(p5pkg["Perlito5::Grammar::Precedence"].is_ident_middle([v_c2], 0)))) && !( ((p5str(v_c1) == '<') && (p5str(v_c2) == '<')))) ) {
									(function () { throw((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', v_pos, 'capture', (new p5ArrayRef(['end', v_term]))))))) })();
								};
							})();
						};
					}, p5list_to_a((v_End_token_chars || (v_End_token_chars = new p5ArrayRef([])))._array_), false, "");
				if ( !( p5bool(v_last_is_term)) ) {
					p5for_lex(function (v_len) {
							var v_term;
							v_term = (p5pkg["Perlito5::Grammar::Precedence"].substr([v_str, v_pos, v_len], 0));
							if ( (Hash_Term).hasOwnProperty(v_term) ) {
								(function () {
									var v_c1;
									v_c1 = (p5pkg["Perlito5::Grammar::Precedence"].substr([v_str, ((p5num(v_pos) + p5num(v_len)) - 1), 1], 0));
									var v_c2;
									v_c2 = (p5pkg["Perlito5::Grammar::Precedence"].substr([v_str, (p5num(v_pos) + p5num(v_len)), 1], 0));
									if ( ((p5bool(p5pkg["Perlito5::Grammar::Precedence"].is_num([v_c1], 0)) || !( p5bool(p5pkg["Perlito5::Grammar::Precedence"].is_ident_middle([v_c1], 0)))) || !( p5bool(p5pkg["Perlito5::Grammar::Precedence"].is_ident_middle([v_c2], 0)))) ) {
										(function () {
											var v_m;
											v_m = ((Hash_Term.p5hget(p5str(v_term)))([v_str, v_pos], 0));
											if ( p5bool(v_m) ) {
												(function () { throw(p5context([v_m], p5want)) })()
											};
										})();
									};
								})();
							};
						}, p5list_to_a(List_Term_chars), false, "");
				};
				p5for_lex(function (v_len) {
						var v_op;
						v_op = (p5pkg["Perlito5::Grammar::Precedence"].substr([v_str, v_pos, v_len], 0));
						if ( (Hash_Parsed_op).hasOwnProperty(v_op) ) {
							(function () {
								var v_m;
								v_m = ((Hash_Parsed_op.p5hget(p5str(v_op)))([v_str, v_pos], 0));
								if ( p5bool(v_m) ) {
									(function () { throw(p5context([v_m], p5want)) })()
								};
							})();
						};
					}, p5list_to_a(List_Parsed_op_chars), false, "");
				p5for_lex(function (v_len) {
						var v_op;
						v_op = (p5pkg["Perlito5::Grammar::Precedence"].substr([v_str, v_pos, v_len], 0));
						if ( (Hash_Op).hasOwnProperty(v_op) ) {
							(function () {
								var v_c1;
								v_c1 = (p5pkg["Perlito5::Grammar::Precedence"].substr([v_str, ((p5num(v_pos) + p5num(v_len)) - 1), 1], 0));
								var v_c2;
								v_c2 = (p5pkg["Perlito5::Grammar::Precedence"].substr([v_str, (p5num(v_pos) + p5num(v_len)), 1], 0));
								if ( (!( (p5bool(p5pkg["Perlito5::Grammar::Precedence"].is_ident_middle([v_c1], 0)) && p5bool(p5pkg["Perlito5::Grammar::Precedence"].is_ident_middle([v_c2], 0)))) && !( ((p5str(v_c1) == '&') && (p5str(v_c2) == '&')))) ) {
									if ( ((((v_Operator || (v_Operator = new p5HashRef({})))._hash_.p5hget('infix'))._hash_.hasOwnProperty(v_op) && !( ((v_Operator || (v_Operator = new p5HashRef({})))._hash_.p5hget('prefix'))._hash_.hasOwnProperty(v_op))) && !( p5bool(v_last_is_term))) ) {}
									else {
										(function () { throw((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', (p5num(v_pos) + p5num(v_len)), 'capture', (new p5ArrayRef(['op', v_op]))))))) })();
									};
								};
							})();
						};
					}, p5list_to_a(List_Op_chars), false, "");
				return (p5call(p5pkg["Perlito5::Grammar::Bareword"], "term_bareword", [v_str, v_pos], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Precedence", "add_op", p5sub(function (List__, p5want) {
			var v_fixity;
			v_fixity = (List__.shift());
			var v_name;
			v_name = (List__.shift());
			var v_precedence;
			v_precedence = (List__.shift());
			var v_param;
			v_param = (List__.shift());
			if ( !( (v_param != null)) ) {
					v_param = ((new p5HashRef({})));
				};
			var v_assoc;
			v_assoc = (p5or((v_param || (v_param = new p5HashRef({})))._hash_.p5hget('assoc'), function () { return 'left' }));
			(v_Operator || (v_Operator = new p5HashRef({})))._hash_.p5hget_hash(p5str(v_fixity))._hash_.p5hset(p5str(v_name), (1));
			(v_Precedence || (v_Precedence = new p5HashRef({})))._hash_.p5hset(p5str(v_name), (v_precedence));
			if ( (p5str(v_fixity) == 'prefix') ) {
					(v_PrefixPrecedence || (v_PrefixPrecedence = new p5HashRef({})))._hash_.p5hset(p5str(v_name), (v_precedence))
				};
			(v_Assoc || (v_Assoc = new p5HashRef({})))._hash_.p5hget_hash(p5str(v_assoc))._hash_.p5hset(p5str(v_name), (1));
			return (Hash_Op.p5hset(p5str(v_name), (1)));
		}, null));
		var v_prec;
		v_prec = (100);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['postfix', '.( )', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['postfix', '.[ ]', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['postfix', '.{ }', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['postfix', '( )', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['postfix', '[ ]', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['postfix', 'funcall', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['postfix', 'funcall_no_params', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['postfix', 'methcall', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['postfix', 'methcall_no_params', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['postfix', 'block', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['postfix', 'hash', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['prefix', '++', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['prefix', '--', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['postfix', '++', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['postfix', '--', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '**', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['prefix', String.fromCharCode(92), v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['prefix', '+', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['prefix', '-', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['prefix', '~', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['prefix', '!', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '=~', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '!~', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '*', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '/', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '%', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', 'x', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '+', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '-', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '.', v_prec, (new p5HashRef({'assoc' : 'list'}))), null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '<<', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '>>', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5for(p5make_package("Perlito5::Grammar::Precedence"), "v__", function () {
			p5pkg["Perlito5::Grammar::Precedence"].add_op(['prefix', p5pkg["Perlito5::Grammar::Precedence"]["v__"], v_prec], null);
			}, ['-r', '-w', '-x', '-o', '-R', '-W', '-X', '-O', '-e', '-z', '-s', '-f', '-d', '-l', '-p', '-S', '-b', '-c', '-t', '-u', '-g', '-k', '-T', '-B', '-M', '-A', '-C'], false, "");
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', 'lt', v_prec, (new p5HashRef({'assoc' : 'chain'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', 'le', v_prec, (new p5HashRef({'assoc' : 'chain'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', 'gt', v_prec, (new p5HashRef({'assoc' : 'chain'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', 'ge', v_prec, (new p5HashRef({'assoc' : 'chain'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '<=', v_prec, (new p5HashRef({'assoc' : 'chain'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '>=', v_prec, (new p5HashRef({'assoc' : 'chain'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '<', v_prec, (new p5HashRef({'assoc' : 'chain'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '>', v_prec, (new p5HashRef({'assoc' : 'chain'}))), null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '<=>', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', 'cmp', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '==', v_prec, (new p5HashRef({'assoc' : 'chain'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '!=', v_prec, (new p5HashRef({'assoc' : 'chain'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', 'ne', v_prec, (new p5HashRef({'assoc' : 'chain'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', 'eq', v_prec, (new p5HashRef({'assoc' : 'chain'}))), null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '&', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '|', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '^', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '..', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '...', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '~~', v_prec, (new p5HashRef({'assoc' : 'chain'}))), null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '&&', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '||', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '//', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('ternary', '? :', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '**=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '+=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '-=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '*=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '/=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', 'x=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '|=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '&=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '.=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '<<=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '>>=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '%=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '||=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '&&=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '^=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('infix', '//=', v_prec, (new p5HashRef({'assoc' : 'right'}))), null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '=>', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(p5list_to_a('list', ',', v_prec, (new p5HashRef({'assoc' : 'list'}))), null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['prefix', 'not', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', 'and', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', 'or', v_prec], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', 'xor', v_prec], null);
		v_prec = ((p5num(v_prec) - 1));
		p5pkg["Perlito5::Grammar::Precedence"].add_op(['infix', '*start*', v_prec], null);
		p5typeglob_set("Perlito5::Grammar::Precedence", "get_token_precedence", p5sub(function (List__, p5want) {
			try {
				var v_token;
				v_token = (List__.p5aget(0));
				if ( (p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(0)) == 'prefix') ) {
					(function () { throw((v_PrefixPrecedence || (v_PrefixPrecedence = new p5HashRef({})))._hash_.p5hget(p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(1)))) })();
				};
				return ((v_Precedence || (v_Precedence = new p5HashRef({})))._hash_.p5hget(p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(1))));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Precedence", "precedence_parse", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.shift());
			var v_get_token;
			v_get_token = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('get_token'));
			var v_reduce;
			v_reduce = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('reduce'));
			var v_last_end_token;
			v_last_end_token = (v_End_token);
			var v_last_end_token_chars;
			v_last_end_token_chars = (v_End_token_chars);
			v_End_token = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('end_token'));
			v_End_token_chars = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('end_token_chars'));
			var v_op_stack;
			v_op_stack = ((new p5ArrayRef([])));
			var v_num_stack;
			v_num_stack = ((new p5ArrayRef([])));
			var v_last;
			v_last = ((new p5ArrayRef(['op', '*start*'])));
			var v_last_is_term;
			v_last_is_term = (0);
			var v_token;
			v_token = ((v_get_token)([v_last_is_term], 0));
			if ( (p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(0)) == 'space') ) {
					v_token = ((v_get_token)([v_last_is_term], 0));
				};
			p5while(function () {
						var v_token_is_term;
						v_token_is_term = (p5pkg["Perlito5::Grammar::Precedence"].is_term([v_token], 0));
						if ( ((p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(1)) == ',') && ((p5str((v_last || (v_last = new p5ArrayRef([])))._array_.p5aget(1)) == '*start*') || (p5str((v_last || (v_last = new p5ArrayRef([])))._array_.p5aget(1)) == ','))) ) {
							(v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_.p5push(p5list_to_a((new p5ArrayRef(p5list_to_a('term', null)))));
						};
						if ( (p5bool((v_Operator || (v_Operator = new p5HashRef({})))._hash_.p5hget_hash('prefix')._hash_.p5hget(p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(1)))) && ((p5str((v_last || (v_last = new p5ArrayRef([])))._array_.p5aget(1)) == '*start*') || !( p5bool(v_last_is_term)))) ) {
							(v_token || (v_token = new p5ArrayRef([])))._array_.p5aset(0, ('prefix'));
							(v_op_stack || (v_op_stack = new p5ArrayRef([])))._array_.p5unshift([v_token]);
						}
						else if ( (p5bool((v_Operator || (v_Operator = new p5HashRef({})))._hash_.p5hget_hash('postfix')._hash_.p5hget(p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(1)))) && p5bool(v_last_is_term)) ) {
							(function () {
								var v_pr;
								v_pr = ((v_Precedence || (v_Precedence = new p5HashRef({})))._hash_.p5hget(p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(1))));
								p5while(function () {
										(v_reduce)([v_op_stack, v_num_stack], null);
									}, function () { return p5and(((v_op_stack || (v_op_stack = new p5ArrayRef([])))._array_), function () { return p5context([(p5num(v_pr) <= p5num(p5pkg["Perlito5::Grammar::Precedence"].get_token_precedence(p5list_to_a((v_op_stack || (v_op_stack = new p5ArrayRef([])))._array_.p5aget(0)), 0)))], 0) }) }, false, "");
								if ( (p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(0)) != 'postfix_or_term') ) {
									(v_token || (v_token = new p5ArrayRef([])))._array_.p5aset(0, ('postfix'));
								};
								(v_op_stack || (v_op_stack = new p5ArrayRef([])))._array_.p5unshift([v_token]);
								v_token_is_term = (1);
							})();
						}
						else if ( p5bool(v_token_is_term) ) {
							if ( p5bool(v_last_is_term) ) {
								p5pkg["Perlito5::Grammar::Precedence"].say(p5list_to_a('#      last:  ', p5pkg["Perlito5::Dumper"].Dumper([v_last], 1)), null);
								p5pkg["Perlito5::Grammar::Precedence"].say(p5list_to_a('#      token: ', p5pkg["Perlito5::Dumper"].Dumper([v_token], 1)), null);
								p5pkg["Perlito5::Grammar::Precedence"].die([['Value tokens must be separated by an operator']], null);
							};
							(v_token || (v_token = new p5ArrayRef([])))._array_.p5aset(0, ('term'));
							(v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_.p5push([v_token]);
						}
						else if ( p5bool((v_Precedence || (v_Precedence = new p5HashRef({})))._hash_.p5hget(p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(1)))) ) {
							(function () {
								var v_pr;
								v_pr = ((v_Precedence || (v_Precedence = new p5HashRef({})))._hash_.p5hget(p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(1))));
								if ( p5bool((v_Assoc || (v_Assoc = new p5HashRef({})))._hash_.p5hget_hash('right')._hash_.p5hget(p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(1)))) ) {
									p5while(function () {
											(v_reduce)([v_op_stack, v_num_stack], null);
										}, function () { return p5and(((v_op_stack || (v_op_stack = new p5ArrayRef([])))._array_), function () { return p5context([(p5num(v_pr) < p5num(p5pkg["Perlito5::Grammar::Precedence"].get_token_precedence(p5list_to_a((v_op_stack || (v_op_stack = new p5ArrayRef([])))._array_.p5aget(0)), 0)))], 0) }) }, false, "");
								}
								else {
									p5while(function () {
											(v_reduce)([v_op_stack, v_num_stack], null);
										}, function () { return p5and(((v_op_stack || (v_op_stack = new p5ArrayRef([])))._array_), function () { return p5context([(p5num(v_pr) <= p5num(p5pkg["Perlito5::Grammar::Precedence"].get_token_precedence(p5list_to_a((v_op_stack || (v_op_stack = new p5ArrayRef([])))._array_.p5aget(0)), 0)))], 0) }) }, false, "");
								};
								if ( p5bool((v_Operator || (v_Operator = new p5HashRef({})))._hash_.p5hget_hash('ternary')._hash_.p5hget(p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(1)))) ) {
									(v_token || (v_token = new p5ArrayRef([])))._array_.p5aset(0, ('ternary'));
								}
								else {
									(v_token || (v_token = new p5ArrayRef([])))._array_.p5aset(0, ('infix'));
								};
								(v_op_stack || (v_op_stack = new p5ArrayRef([])))._array_.p5unshift([v_token]);
							})();
						}
						else {
							p5pkg["Perlito5::Grammar::Precedence"].die([p5list_to_a('Unknown token: ' + String.fromCharCode(39), (v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(1), String.fromCharCode(39))], null);
						};
						v_last = (v_token);
						v_last_is_term = (v_token_is_term);
						v_token = ((v_get_token)([v_last_is_term], 0));
						if ( (p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(0)) == 'space') ) {
							v_token = ((v_get_token)([v_last_is_term], 0));
						};
					}, function () { return p5and(p5context([(v_token != null)], 0), function () { return p5context([(p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(0)) != 'end')], 0) }) }, false, "");
			if ( ((v_token != null) && (p5str((v_token || (v_token = new p5ArrayRef([])))._array_.p5aget(0)) != 'end')) ) {
					p5pkg["Perlito5::Grammar::Precedence"].die([['Unexpected end token: ', v_token]], null);
				};
			p5while(function () {
						(v_reduce)([v_op_stack, v_num_stack], null);
					}, function () { return ((v_op_stack || (v_op_stack = new p5ArrayRef([])))._array_) }, false, "");
			v_End_token = (v_last_end_token);
			v_End_token_chars = (v_last_end_token_chars);
			return (p5context([v_num_stack], p5want));
		}, null));
		1;
	})()
;
	(function () {
		p5make_package("Perlito5::Grammar::Bareword");
		// use strict
;
		p5typeglob_set("Perlito5::Grammar::Bareword", "the_object", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5or(p5context([(function () {
								return (p5and(p5and(p5context([(function () {
									var v_tmp;
									v_tmp = (v_MATCH);
									v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
									var v_res;
									v_res = (p5context([p5and(('$' == p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
									return ((v_MATCH = (( p5bool(v_res) ? v_tmp : 0))));
								})()], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Sigil"], "term_sigil", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Sigil.term_sigil', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Sigil.term_sigil')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Sigil.term_sigil')), p5want) = new p5ArrayRef([])))._array_.p5aget(1)));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5and(p5context([p5and(('{' == p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "curly_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.curly_parse', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and(('}' == p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.curly_parse')), 0)));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Print"], "typeglob", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Print.typeglob', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Print.typeglob')), 0)));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Bareword", "term_bareword", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_p;
				v_p = (v_pos);
				var v_m_namespace;
				v_m_namespace = (p5call(p5pkg["Perlito5::Grammar"], "optional_namespace_before_ident", [v_str, v_p], 0));
				var v_namespace;
				v_namespace = (p5pkg["Perlito5::Match"].flat([v_m_namespace], 0));
				v_p = ((v_m_namespace || (v_m_namespace = new p5HashRef({})))._hash_.p5hget('to'));
				var v_m_name;
				v_m_name = (p5call(p5pkg["Perlito5::Grammar"], "ident", [v_str, v_p], 0));
				if ( !( p5bool(v_m_name)) ) {
					if ( p5bool(v_namespace) ) {
						(v_m_namespace || (v_m_namespace = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Var"], "new", ['sigil', '::', 'name', '', 'namespace', v_namespace], 1))))));
						(function () { throw(p5context([v_m_namespace], p5want)) })();
					};
					(function () { throw(p5context([], p5want)) })();
				};
				var v_name;
				v_name = (p5pkg["Perlito5::Match"].flat([v_m_name], 0));
				v_p = ((v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hget('to'));
				if ( (p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, v_p, 2], 0) == '::') ) {
					(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('to', ((p5num(v_p) + 2)));
					(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Var"], "new", ['sigil', '::', 'name', '', 'namespace', (p5str(v_namespace) + '::' + p5str(v_name))], 1))))));
					(function () { throw(p5context([v_m_name], p5want)) })();
				};
				var v_full_name;
				v_full_name = (v_name);
				if ( p5bool(v_namespace) ) {
					v_full_name = ((p5str(v_namespace) + '::' + p5str(v_name)))
				};
				var v_m;
				v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", [v_str, v_p], 0));
				if ( p5bool(v_m) ) {
					v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
				};
				var v_invocant;
				var v_is_subroutine_name;
				var v_effective_name;
				v_effective_name = ((p5str(p5or(v_namespace, function () { return p5make_package("Perlito5")["v_PKG_NAME"] })) + '::' + p5str(v_name)));
				if ( (p5global_hash("Perlito5::Grammar::Print", "Print")).hasOwnProperty(v_name) ) {
					v_invocant = (null);
				}
				else if ( ((p5make_package("Perlito5")["v_PROTO"])._hash_.hasOwnProperty(v_effective_name) || ((!( p5bool(v_namespace)) || (p5str(v_namespace) == 'CORE')) && (p5make_package("Perlito5")["v_CORE_PROTO"])._hash_.hasOwnProperty(('CORE::' + p5str(v_name))))) ) {
					(function () {
						v_is_subroutine_name = (1);
						v_invocant = (p5call(p5pkg["Perlito5::Grammar"], "full_ident", [v_str, v_p], 0));
						var v_package;
						v_package = (p5pkg["Perlito5::Match"].flat([v_invocant], 0));
						if ( p5bool(v_package) ) {
							(v_invocant || (v_invocant = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Var"], "new", ['sigil', '::', 'name', '', 'namespace', v_package], 0)));
							if ( (p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, (v_invocant || (v_invocant = new p5HashRef({})))._hash_.p5hget('to'), 2], 0) == '::') ) {
								(v_invocant || (v_invocant = new p5HashRef({})))._hash_.p5hset('to', ((p5num((v_invocant || (v_invocant = new p5HashRef({})))._hash_.p5hget('to')) + 2)));
							}
							else if ( !( p5bool((p5make_package("Perlito5")["v_PACKAGES"] || (p5make_package("Perlito5")["v_PACKAGES"] = new p5HashRef({})))._hash_.p5hget(p5str(v_package)))) ) {
								v_invocant = (null);
							};
						};
					})();
				}
				else {
					v_invocant = (p5call(p5pkg["Perlito5::Grammar::Bareword"], "the_object", [v_str, v_p], 0));
				};
				if ( p5bool(v_invocant) ) {
					(function () {
						v_p = ((v_invocant || (v_invocant = new p5HashRef({})))._hash_.p5hget('to'));
						var v_arg;
						v_arg = ((new p5ArrayRef([])));
						v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", [v_str, v_p], 0));
						if ( p5bool(v_m) ) {
							v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'))
						};
						if ( (p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, v_p, 2], 0) == '->') ) {}
						else if ( (p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, v_p, 1], 0) == '(') ) {
							(function () {
								var v_m;
								v_m = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_paren", [v_str, v_p], 0));
								if ( p5bool(v_m) ) {
									v_arg = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget_array('capture')._array_.p5aget(2));
									v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
									v_arg = (p5pkg["Perlito5::Grammar::Expression"].expand_list([v_arg], 0));
								};
							})();
						}
						else {
							(function () {
								var v_m;
								v_m = (p5call(p5pkg["Perlito5::Grammar::Expression"], "list_parse", [v_str, v_p], 0));
								if ( (p5str((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('capture')) != '*undef*') ) {
									v_arg = (p5pkg["Perlito5::Grammar::Expression"].expand_list(p5list_to_a((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('capture')), 0));
									v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
								};
							})();
						};
						(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Call"], "new", p5list_to_a('method', v_full_name, 'invocant', p5pkg["Perlito5::Match"].flat([v_invocant], 1), 'arguments', v_arg), 1))))));
						(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('to', (v_p));
						(function () { throw(p5context([v_m_name], p5want)) })();
					})();
				};
				if ( (p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, v_p, 2], 0) == '=>') ) {
					(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', v_name, 'namespace', v_namespace, 'arguments', (new p5ArrayRef([])), 'bareword', 1), 1))))));
					(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('to', (v_p));
					(function () { throw(p5context([v_m_name], p5want)) })();
				};
				if ( (p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, v_p, 2], 0) == '->') ) {
					if ( p5bool(v_is_subroutine_name) ) {
						(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('arguments', (new p5ArrayRef([])), 'code', v_name, 'namespace', v_namespace), 1))))));
					}
					else {
						(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Proto"], "new", ['name', v_full_name], 1))))));
					};
					(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('to', (v_p));
					(function () { throw(p5context([v_m_name], p5want)) })();
				};
				var v_sig;
				if ( (p5make_package("Perlito5")["v_PROTO"])._hash_.hasOwnProperty(v_effective_name) ) {
					v_sig = ((p5make_package("Perlito5")["v_PROTO"] || (p5make_package("Perlito5")["v_PROTO"] = new p5HashRef({})))._hash_.p5hget(p5str(v_effective_name)));
				}
				else if ( ((!( p5bool(v_namespace)) || (p5str(v_namespace) == 'CORE')) && (p5make_package("Perlito5")["v_CORE_PROTO"])._hash_.hasOwnProperty(('CORE::' + p5str(v_name)))) ) {
					v_effective_name = (('CORE::' + p5str(v_name)));
					v_sig = ((p5make_package("Perlito5")["v_CORE_PROTO"] || (p5make_package("Perlito5")["v_CORE_PROTO"] = new p5HashRef({})))._hash_.p5hget(p5str(v_effective_name)));
				}
				else {
					(function () {
						var v_m;
						v_m = (p5call(p5pkg["Perlito5::Grammar::Number"], "val_version", [v_str, v_pos], 0));
						if ( p5bool(v_m) ) {
							(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('capture'))))));
							(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('to', (v_p));
							(function () { throw(p5context([v_m], p5want)) })();
						};
						v_sig = (null);
					})();
				};
				var v_has_paren;
				v_has_paren = (0);
				if ( (v_sig != null) ) {
					if ( (p5pkg["Perlito5::Grammar::Bareword"].substr([v_sig, 0, 1], 0) == ';') ) {
						if ( (p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, v_p, 2], 0) == '//') ) {
							(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', v_name, 'namespace', v_namespace, 'arguments', (new p5ArrayRef([])), 'bareword', 1), 1))))));
							(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('to', (v_p));
							(function () { throw(p5context([v_m_name], p5want)) })();
						};
					};
					if ( (p5str(v_sig) == '') ) {
						if ( (p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, v_p, 1], 0) == '(') ) {
							(function () {
								(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
								v_has_paren = (1);
								var v_m;
								v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", [v_str, v_p], 0));
								if ( p5bool(v_m) ) {
									v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
								};
								if ( (p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, v_p, 1], 0) != ')') ) {
									p5pkg["Perlito5::Grammar::Bareword"].die([['syntax error near ', p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, v_pos, 10], 1)]], null);
								};
								(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
							})();
						};
						(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', v_name, 'namespace', v_namespace, 'arguments', (new p5ArrayRef([])), 'bareword', (p5num(v_has_paren) == 0)), 1))))));
						(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('to', (v_p));
						(function () { throw(p5context([v_m_name], p5want)) })();
					};
					if ( (((p5str(v_sig) == '_') || (p5str(v_sig) == '$')) || (p5str(v_sig) == ';$')) ) {
						(function () {
							var v_m;
							var v_arg;
							if ( (p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, v_p, 1], 0) == '(') ) {
								(function () {
									v_m = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_paren", [v_str, v_p], 0));
									if ( !( p5bool(v_m)) ) {
										(function () { throw(p5context([v_m], p5want)) })();
									};
									v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
									v_has_paren = (1);
									v_arg = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget_array('capture')._array_.p5aget(2));
									v_arg = (p5pkg["Perlito5::Grammar::Expression"].expand_list([v_arg], 0));
									var v_v;
									v_v = ((v_arg || (v_arg = new p5ArrayRef([])))._array_.shift());
									if ( p5bool((v_arg || (v_arg = new p5ArrayRef([])))._array_) ) {
										p5pkg["Perlito5::Grammar::Bareword"].die([[('Too many arguments for ' + p5str(v_name))]], null)
									};
									v_arg = (v_v);
								})();
							}
							else {
								v_m = (p5call(p5pkg["Perlito5::Grammar::Expression"], "argument_parse", [v_str, v_p], 0));
								v_arg = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('capture'));
								if ( (p5str(v_arg) == '*undef*') ) {
									v_arg = (null);
								}
								else if ( ((p5str(p5pkg["Perlito5::Grammar::Bareword"].ref([v_arg], 0)) == 'Perlito5::AST::Apply') && (p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('code')) == 'circumfix:<( )>')) ) {
									(function () {
										var v_v;
										v_v = ((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.shift());
										if ( p5bool((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_) ) {
											p5pkg["Perlito5::Grammar::Bareword"].die([[('Too many arguments for ' + p5str(v_name))]], null)
										};
										v_arg = (v_v);
									})();
								};
							};
							var List_args= [];
							if ( (v_arg != null) ) {
								List_args.p5push([v_arg]);
								v_has_paren = (1);
							}
							else {
								if ( (p5str(v_sig) == '$') ) {
									p5pkg["Perlito5::Grammar::Bareword"].die([[('Not enough arguments for ' + p5str(v_name))]], null)
								};
								if ( (p5str(v_sig) == '_') ) {
									List_args.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Var"], "new", ['namespace', '', 'name', '_', 'sigil', '$'], 1)))
								};
							};
							(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", ['code', v_name, 'namespace', v_namespace, 'arguments', (new p5ArrayRef(List_args)), 'bareword', (p5num(v_has_paren) == 0)], 1))))));
							(function () { throw(p5context([v_m], p5want)) })();
						})();
					};
					if ( (p5str(v_sig) == '*') ) {};
				};
				if ( (p5pkg["Perlito5::Grammar::Bareword"].substr([v_str, v_p, 1], 0) == '(') ) {
					(function () {
						v_m = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_paren", [v_str, v_p], 0));
						if ( !( p5bool(v_m)) ) {
							(function () { throw(p5context([v_m], p5want)) })();
						};
						var v_arg;
						v_arg = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget_array('capture')._array_.p5aget(2));
						v_arg = (p5pkg["Perlito5::Grammar::Expression"].expand_list([v_arg], 0));
						(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", ['code', v_name, 'namespace', v_namespace, 'arguments', v_arg], 1))))));
						(function () { throw(p5context([v_m], p5want)) })();
					})();
				};
				var v_m_list;
				v_m_list = (p5call(p5pkg["Perlito5::Grammar::Expression"], "list_parse", [v_str, v_p], 0));
				var v_list;
				v_list = ((v_m_list || (v_m_list = new p5HashRef({})))._hash_.p5hget('capture'));
				if ( (p5str(v_list) != '*undef*') ) {
					(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(['postfix_or_term', 'funcall', v_namespace, v_name, v_list]))));
					(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('to', ((v_m_list || (v_m_list = new p5HashRef({})))._hash_.p5hget('to')));
					(function () { throw(p5context([v_m_name], p5want)) })();
				};
				(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(['postfix_or_term', 'funcall_no_params', v_namespace, v_name]))));
				return (p5context([v_m_name], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		1;
	})()
;
	(function () {
		null;
		p5make_package("Perlito5::Grammar::Attribute");
		p5typeglob_set("Perlito5::Grammar::Attribute", "opt_attribute", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var List_attributes= [];
				var v_ws;
				v_ws = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, v_pos], 0));
				if ( (p5pkg["Perlito5::Grammar::Attribute"].substr([v_str, (v_ws || (v_ws = new p5HashRef({})))._hash_.p5hget('to'), 1], 0) != ':') ) {
					(function () { throw((new p5HashRef(p5a_to_h(p5list_to_a('to', v_pos, 'capture', (new p5ArrayRef([]))))))) })();
				};
				v_ws = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, (p5num((v_ws || (v_ws = new p5HashRef({})))._hash_.p5hget('to')) + 1)], 0));
				var v_p;
				v_p = ((v_ws || (v_ws = new p5HashRef({})))._hash_.p5hget('to'));
				var v_m;
				v_m = (p5call(p5pkg["Perlito5::Grammar"], "ident", [v_str, v_p], 0));
				if ( !( p5bool(v_m)) ) {
					p5pkg["Perlito5::Grammar::Attribute"].die([['syntax error']], null)
				};
				var v_to;
				p5while(function () {
						v_to = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
						var v_delimiter;
						v_delimiter = (p5pkg["Perlito5::Grammar::Attribute"].substr([v_str, v_to, 1], 0));
						if ( (p5str(v_delimiter) == '(') ) {
							(function () {
								var v_params;
								v_params = (p5call(p5pkg["Perlito5::Grammar::String"], "string_interpolation_parse", [v_str, (p5num((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')) + 1), '(', ')', 0], 0));
								if ( !( p5bool(v_params)) ) {
									p5pkg["Perlito5::Grammar::Attribute"].die([['syntax error']], null)
								};
								v_to = ((v_params || (v_params = new p5HashRef({})))._hash_.p5hget('to'));
							})();
						};
						List_attributes.p5push([p5pkg["Perlito5::Grammar::Attribute"].substr([v_str, v_p, (p5num(v_to) - p5num(v_p))], 1)]);
						v_ws = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, v_to], 0));
						if ( (p5pkg["Perlito5::Grammar::Attribute"].substr([v_str, (v_ws || (v_ws = new p5HashRef({})))._hash_.p5hget('to'), 1], 0) == ':') ) {
							v_ws = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, (p5num((v_ws || (v_ws = new p5HashRef({})))._hash_.p5hget('to')) + 1)], 0));
						};
						v_p = ((v_ws || (v_ws = new p5HashRef({})))._hash_.p5hget('to'));
						v_m = (p5call(p5pkg["Perlito5::Grammar"], "ident", [v_str, v_p], 0));
						if ( !( p5bool(v_m)) ) {
							(function () { throw((new p5HashRef({'to' : v_to, 'capture' : (new p5ArrayRef(List_attributes))}))) })()
						};
					}, function () { return 1 }, false, "")
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		1;
	})()
;
	(function () {
		p5make_package("Perlito5::Grammar::Statement");
		var List_Statement_chars= [];
		var Hash_Statement = {};
		p5typeglob_set("Perlito5::Grammar::Statement", "add_statement", p5sub(function (List__, p5want) {
			var v_name;
			v_name = (List__.shift());
			var v_param;
			v_param = (List__.shift());
			Hash_Statement.p5hset(p5str(v_name), (v_param));
			p5while(function () {
						List_Statement_chars.p5unshift([(p5num((List_Statement_chars.length)) + 1)]);
					}, function () { return (p5num(List_Statement_chars.length) < p5pkg["Perlito5::Grammar::Statement"].length([v_name], 0)) }, false, "")
		}, null));
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['...', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Statement"], "stmt_yadayada", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['package', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Statement"], "stmt_package", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['format', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Statement"], "stmt_format", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5typeglob_set("Perlito5::Grammar::Statement", "stmt_yadayada", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5context([p5and(('...' == p5pkg["Perlito5::Grammar::Statement"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 3], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((3 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'die', 'namespace', '', 'arguments', (new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', 'Unimplemented'], 1))))), 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Statement", "stmt_format", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5and(p5and(p5and(p5context([p5and(('format' == p5pkg["Perlito5::Grammar::Statement"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 6], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((6 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								var v_m2;
								v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "full_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
								if ( p5bool(v_m2) ) {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.full_ident', (v_m2));
									return (p5context([1], p5want));
								}
								else {
									return (p5context([0], p5want));
								}
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.full_ident', ('STDOUT'));
									return (p5context([1], p5want));
								})()], p5want));
							})()], p5want) }));
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							var v_placeholder;
							v_placeholder = (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'list:<.>', 'namespace', '', 'arguments', (new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'list:<.>', 'namespace', '', 'arguments', (new p5ArrayRef([]))), 1))))), 0));
							p5global_array("Perlito5::Grammar::String", "Here_doc").p5push(p5list_to_a((new p5ArrayRef(p5list_to_a('single_quote', (v_placeholder || (v_placeholder = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget_hash(0)._hash_.p5hget('arguments'), '.')))));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'p5:format', 'namespace', '', 'arguments', (new p5ArrayRef(p5list_to_a(p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.full_ident')), 1), v_placeholder)))), 0)));
							return (p5context([1], p5want));
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([p5and(('=' == p5pkg["Perlito5::Grammar::Statement"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Statement", "stmt_package", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5context([p5and(('package' == p5pkg["Perlito5::Grammar::Statement"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 7], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((7 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "full_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.full_ident', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									var v_name;
									v_name = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.full_ident')), 0));
									(p5make_package("Perlito5")["v_PACKAGES"] || (p5make_package("Perlito5")["v_PACKAGES"] = new p5HashRef({})))._hash_.p5hset(p5str(v_name), (1));
									p5make_package("Perlito5")["v_PKG_NAME"] = (v_name);
									return (p5context([1], p5want));
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.term_curly', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'package', 'arguments', (new p5ArrayRef([])), 'namespace', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.full_ident')), 1)), 1), (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar::Expression.term_curly')._hash_.p5hget_array('capture')._array_.p5aget_array(2)._array_)))), 0)));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									var v_name;
									v_name = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.full_ident')), 0));
									(p5make_package("Perlito5")["v_PACKAGES"] || (p5make_package("Perlito5")["v_PACKAGES"] = new p5HashRef({})))._hash_.p5hset(p5str(v_name), (1));
									p5make_package("Perlito5")["v_PKG_NAME"] = (v_name);
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'package', 'arguments', (new p5ArrayRef([])), 'namespace', v_name), 0)));
									return (p5context([1], p5want));
								})()], p5want));
							})()], p5want) }));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Statement", "exp_stmt", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				p5for_lex(function (v_len) {
						var v_term;
						v_term = (p5pkg["Perlito5::Grammar::Statement"].substr([v_str, v_pos, v_len], 0));
						if ( (Hash_Statement).hasOwnProperty(v_term) ) {
							(function () {
								var v_m;
								v_m = ((Hash_Statement.p5hget(p5str(v_term)))([v_str, v_pos], 0));
								if ( p5bool(v_m) ) {
									(function () { throw(p5context([v_m], p5want)) })()
								};
							})();
						};
					}, p5list_to_a(List_Statement_chars), false, "");
				return (p5context([0], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		var List_Modifier_chars= [];
		List_Modifier_chars = [7, 6, 5, 4, 3, 2];
		var Hash_Modifier = {};
		Hash_Modifier = {'if' : 1, 'unless' : 1, 'when' : 1, 'for' : 1, 'foreach' : 1, 'while' : 1, 'given' : 1};
		p5typeglob_set("Perlito5::Grammar::Statement", "statement_modifier", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_expression;
				v_expression = (List__.p5aget(3));
				p5for_lex(function (v_len) {
						var v_term;
						v_term = (p5pkg["Perlito5::Grammar::Statement"].substr([v_str, v_pos, v_len], 0));
						if ( (Hash_Modifier).hasOwnProperty(v_term) ) {
							(function () {
								var v_m;
								v_m = (p5call(v_self, "modifier", [v_str, (p5num(v_pos) + p5num(v_len)), v_term, v_expression], 0));
								if ( p5bool(v_m) ) {
									(function () { throw(p5context([v_m], p5want)) })()
								};
							})();
						};
					}, p5list_to_a(List_Modifier_chars), false, "");
				return (p5context([0], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Statement", "modifier", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_modifier;
				v_modifier = (List__.p5aget(3));
				var v_expression;
				v_expression = (List__.p5aget(4));
				var v_modifier_exp;
				v_modifier_exp = (p5call(p5pkg["Perlito5::Grammar::Expression"], "exp_parse", [v_str, v_pos], 0));
				if ( !( p5bool(v_modifier_exp)) ) {
					p5pkg["Perlito5::Grammar::Statement"].die([p5list_to_a('Expected expression after ' + String.fromCharCode(39), p5pkg["Perlito5::Match"].flat([v_modifier], 1), String.fromCharCode(39))], null);
				};
				if ( (p5str(v_modifier) == 'if') ) {
					(function () { throw((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', (v_modifier_exp || (v_modifier_exp = new p5HashRef({})))._hash_.p5hget('to'), 'capture', p5call(p5pkg["Perlito5::AST::If"], "new", p5list_to_a('cond', p5pkg["Perlito5::Match"].flat([v_modifier_exp], 1), 'body', v_expression), 1)))))) })();
				};
				if ( (p5str(v_modifier) == 'unless') ) {
					(function () { throw((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', (v_modifier_exp || (v_modifier_exp = new p5HashRef({})))._hash_.p5hget('to'), 'capture', p5call(p5pkg["Perlito5::AST::If"], "new", p5list_to_a('cond', p5pkg["Perlito5::Match"].flat([v_modifier_exp], 1), 'otherwise', v_expression), 1)))))) })();
				};
				if ( (p5str(v_modifier) == 'when') ) {
					(function () { throw((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', (v_modifier_exp || (v_modifier_exp = new p5HashRef({})))._hash_.p5hget('to'), 'capture', p5call(p5pkg["Perlito5::AST::When"], "new", p5list_to_a('cond', p5pkg["Perlito5::Match"].flat([v_modifier_exp], 1), 'body', v_expression), 1)))))) })();
				};
				if ( (p5str(v_modifier) == 'while') ) {
					(function () { throw((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', (v_modifier_exp || (v_modifier_exp = new p5HashRef({})))._hash_.p5hget('to'), 'capture', p5call(p5pkg["Perlito5::AST::While"], "new", p5list_to_a('cond', p5pkg["Perlito5::Match"].flat([v_modifier_exp], 1), 'body', v_expression), 1)))))) })();
				};
				if ( ((p5str(v_modifier) == 'for') || (p5str(v_modifier) == 'foreach')) ) {
					(function () { throw((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', (v_modifier_exp || (v_modifier_exp = new p5HashRef({})))._hash_.p5hget('to'), 'capture', p5call(p5pkg["Perlito5::AST::For"], "new", p5list_to_a('cond', p5pkg["Perlito5::Match"].flat([v_modifier_exp], 1), 'body', v_expression), 1)))))) })();
				};
				return (p5pkg["Perlito5::Grammar::Statement"].die([[('Unexpected statement modifier ' + String.fromCharCode(39) + p5str(v_modifier) + String.fromCharCode(39))]], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Statement", "statement_parse", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_res;
				v_res = (p5call(v_self, "exp_stmt", [v_str, v_pos], 0));
				if ( p5bool(v_res) ) {
					(function () { throw(p5context([v_res], p5want)) })();
				};
				v_res = (p5call(p5pkg["Perlito5::Grammar::Expression"], "exp_parse", [v_str, v_pos], 0));
				if ( !( p5bool(v_res)) ) {
					(function () { throw(p5context([], p5want)) })();
				};
				if ( (((p5pkg["Perlito5::Grammar::Statement"].substr([v_str, (v_res || (v_res = new p5HashRef({})))._hash_.p5hget('to'), 1], 0) == ':') && p5bool(p5call((v_res || (v_res = new p5HashRef({})))._hash_.p5hget('capture'), "isa", ['Perlito5::AST::Apply'], 0))) && p5bool((v_res || (v_res = new p5HashRef({})))._hash_.p5hget_hash('capture')._hash_.p5hget('bareword'))) ) {
					(function () {
						var v_label;
						v_label = ((v_res || (v_res = new p5HashRef({})))._hash_.p5hget_hash('capture')._hash_.p5hget('code'));
						var v_ws;
						v_ws = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, (p5num((v_res || (v_res = new p5HashRef({})))._hash_.p5hget('to')) + 1)], 0));
						var v_stmt;
						v_stmt = (p5call(v_self, "statement_parse", p5list_to_a(v_str, (v_ws || (v_ws = new p5HashRef({})))._hash_.p5hget('to')), 0));
						if ( p5bool(v_stmt) ) {
							(v_stmt || (v_stmt = new p5HashRef({})))._hash_.p5hget_hash('capture')._hash_.p5hset('label', (v_label));
							(function () { throw(p5context([v_stmt], p5want)) })();
						};
						(v_res || (v_res = new p5HashRef({})))._hash_.p5hset('to', ((v_ws || (v_ws = new p5HashRef({})))._hash_.p5hget('to')));
						(v_res || (v_res = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('arguments', (new p5ArrayRef([])), 'code', 'undef', 'namespace', '', 'label', v_label), 0)));
						(function () { throw(p5context([v_res], p5want)) })();
					})();
				};
				var v_modifier;
				v_modifier = (p5call(v_self, "statement_modifier", p5list_to_a(v_str, (v_res || (v_res = new p5HashRef({})))._hash_.p5hget('to'), p5pkg["Perlito5::Match"].flat([v_res], 1)), 0));
				var v_p;
				v_p = (( p5bool(v_modifier) ? (v_modifier || (v_modifier = new p5HashRef({})))._hash_.p5hget('to') : (v_res || (v_res = new p5HashRef({})))._hash_.p5hget('to')));
				var v_terminator;
				v_terminator = (p5pkg["Perlito5::Grammar::Statement"].substr([v_str, v_p, 1], 0));
				if ( (((p5str(v_terminator) != ';') && (p5str(v_terminator) != '}')) && (p5str(v_terminator) != '')) ) {
					p5pkg["Perlito5::Grammar::Statement"].die([['Number or Bareword found where operator expected']], null)
				};
				if ( !( p5bool(v_modifier)) ) {
					(function () { throw(p5context([v_res], p5want)) })();
				};
				return (p5context([v_modifier], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		1;
	})()
;
	(function () {
		p5make_package("Perlito5::Grammar::Expression");
		// use Perlito5::Grammar::Precedence
;
		// use Perlito5::Grammar::Bareword
;
		// use Perlito5::Grammar::Attribute
;
		// use Perlito5::Grammar::Statement
;
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['my', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_declarator", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['our', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_declarator", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['eval', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_eval", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['state', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_declarator", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['local', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_local", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['return', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_return", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5typeglob_set("Perlito5::Grammar::Expression", "expand_list", p5sub(function (List__, p5want) {
			try {
				var v_param_list;
				v_param_list = (List__.shift());
				if ( ((p5str(p5pkg["Perlito5::Grammar::Expression"].ref([v_param_list], 0)) == 'Perlito5::AST::Apply') && (p5str(p5call(v_param_list, "code", [], 0)) == 'list:<,>')) ) {
					var v_args;
					v_args = ((new p5ArrayRef([])));
					p5for_lex(function (v_v) {
							if ( (v_v != null) ) {
								(v_args || (v_args = new p5ArrayRef([])))._array_.p5push([v_v]);
							};
						}, p5list_to_a(p5call(v_param_list, "arguments", [], p5want)._array_), false, "");
					(function () { throw(p5context([v_args], p5want)) })()
				}
				else if ( (p5str(v_param_list) == '*undef*') ) {
					(function () { throw((new p5ArrayRef([]))) })()
				}
				else {
					(function () { throw((new p5ArrayRef([v_param_list]))) })()
				}
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "block_or_hash", p5sub(function (List__, p5want) {
			try {
				var v_o;
				v_o = (List__.shift());
				if ( (p5call(v_o, "sig", [], 0) != null) ) {
					(function () { throw(p5context([v_o], p5want)) })();
				};
				var v_stmts;
				v_stmts = (p5call(v_o, "stmts", [], 0));
				if ( (!( (v_stmts != null)) || (p5num(((v_stmts || (v_stmts = new p5ArrayRef([])))._array_)) == 0)) ) {
					(function () { throw(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'circumfix:<{ }>', 'namespace', '', 'arguments', (new p5ArrayRef([]))), p5want)) })();
				};
				if ( (p5num(((v_stmts || (v_stmts = new p5ArrayRef([])))._array_)) != 1) ) {
					(function () { throw(p5context([v_o], p5want)) })();
				};
				var v_stmt;
				v_stmt = ((v_stmts || (v_stmts = new p5ArrayRef([])))._array_.p5aget(0));
				if ( (p5str(p5pkg["Perlito5::Grammar::Expression"].ref([v_stmt], 0)) == 'Perlito5::AST::Var') ) {
					(function () { throw(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'circumfix:<{ }>', 'namespace', '', 'arguments', (new p5ArrayRef([v_stmt]))), p5want)) })();
				};
				if ( (p5str(p5pkg["Perlito5::Grammar::Expression"].ref([v_stmt], 0)) != 'Perlito5::AST::Apply') ) {
					(function () { throw(p5context([v_o], p5want)) })();
				};
				if ( (p5str(p5call(v_stmt, "code", [], 0)) == 'infix:<=>>') ) {
					(function () { throw(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'circumfix:<{ }>', 'namespace', '', 'arguments', (new p5ArrayRef([v_stmt]))), p5want)) })();
				};
				if ( (p5str(p5call(v_stmt, "code", [], 0)) != 'list:<,>') ) {
					(function () { throw(p5context([v_o], p5want)) })();
				};
				return (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'circumfix:<{ }>', 'namespace', '', 'arguments', p5pkg["Perlito5::Grammar::Expression"].expand_list([v_stmt], 1)), p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "pop_term", p5sub(function (List__, p5want) {
			try {
				var v_num_stack;
				v_num_stack = (List__.shift());
				var v_v;
				v_v = ((v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_.pop());
				if ( (p5str(p5pkg["Perlito5::Grammar::Expression"].ref([v_v], 0)) == 'ARRAY') ) {
					if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == 'methcall_no_params') ) {
						v_v = (p5call(p5pkg["Perlito5::AST::Call"], "new", p5list_to_a('invocant', null, 'method', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2), 'arguments', (new p5ArrayRef([]))), 0));
						(function () { throw(p5context([v_v], p5want)) })();
					};
					if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == 'funcall_no_params') ) {
						v_v = (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(3), 'namespace', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2), 'arguments', (new p5ArrayRef([])), 'bareword', 1), 0));
						(function () { throw(p5context([v_v], p5want)) })();
					};
					if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == 'methcall') ) {
						(function () {
							var v_param_list;
							v_param_list = (p5pkg["Perlito5::Grammar::Expression"].expand_list(p5list_to_a((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(3)), 0));
							v_v = (p5call(p5pkg["Perlito5::AST::Call"], "new", p5list_to_a('invocant', null, 'method', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2), 'arguments', v_param_list), 0));
							(function () { throw(p5context([v_v], p5want)) })();
						})();
					};
					if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == 'funcall') ) {
						(function () {
							var v_param_list;
							v_param_list = (p5pkg["Perlito5::Grammar::Expression"].expand_list(p5list_to_a((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(4)), 0));
							v_v = (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(3), 'arguments', v_param_list, 'namespace', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2)), 0));
							(function () { throw(p5context([v_v], p5want)) })();
						})();
					};
					if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == '( )') ) {
						(function () {
							var v_param_list;
							v_param_list = (p5pkg["Perlito5::Grammar::Expression"].expand_list(p5list_to_a((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2)), 0));
							v_v = (p5call(p5pkg["Perlito5::AST::Apply"], "new", ['code', 'circumfix:<( )>', 'arguments', v_param_list, 'namespace', ''], 0));
							(function () { throw(p5context([v_v], p5want)) })();
						})();
					};
					if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == '[ ]') ) {
						(function () {
							var v_param_list;
							v_param_list = (p5pkg["Perlito5::Grammar::Expression"].expand_list(p5list_to_a((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2)), 0));
							v_v = (p5call(p5pkg["Perlito5::AST::Apply"], "new", ['code', 'circumfix:<[ ]>', 'arguments', v_param_list, 'namespace', ''], 0));
							(function () { throw(p5context([v_v], p5want)) })();
						})();
					};
					if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == 'block') ) {
						v_v = (p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2), 'sig', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(3)), 0));
						v_v = (p5pkg["Perlito5::Grammar::Expression"].block_or_hash([v_v], 0));
						(function () { throw(p5context([v_v], p5want)) })();
					};
					if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == '.( )') ) {
						v_v = (p5call(p5pkg["Perlito5::AST::Call"], "new", p5list_to_a('invocant', null, 'method', 'postcircumfix:<( )>', 'arguments', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2)), 0));
						(function () { throw(p5context([v_v], p5want)) })();
					};
					if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == '.[ ]') ) {
						v_v = (p5call(p5pkg["Perlito5::AST::Index"], "new", p5list_to_a('obj', null, 'index_exp', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2)), 0));
						(function () { throw(p5context([v_v], p5want)) })();
					};
					if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == '.{ }') ) {
						v_v = (p5call(p5pkg["Perlito5::AST::Lookup"], "new", p5list_to_a('obj', null, 'index_exp', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2)), 0));
						(function () { throw(p5context([v_v], p5want)) })();
					};
					(function () { throw((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) })();
				};
				return (p5context([v_v], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "reduce_postfix", p5sub(function (List__, p5want) {
			try {
				var v_op;
				v_op = (List__.shift());
				var v_value;
				v_value = (List__.shift());
				var v_v;
				v_v = (v_op);
				if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == 'methcall_no_params') ) {
					v_v = (p5call(p5pkg["Perlito5::AST::Call"], "new", p5list_to_a('invocant', v_value, 'method', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2), 'arguments', (new p5ArrayRef([]))), 0));
					(function () { throw(p5context([v_v], p5want)) })();
				};
				if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == 'funcall_no_params') ) {
					p5pkg["Perlito5::Grammar::Expression"].die([['unexpected function call']], null);
				};
				if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == 'methcall') ) {
					(function () {
						var v_param_list;
						v_param_list = (p5pkg["Perlito5::Grammar::Expression"].expand_list(p5list_to_a((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(3)), 0));
						v_v = (p5call(p5pkg["Perlito5::AST::Call"], "new", p5list_to_a('invocant', v_value, 'method', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2), 'arguments', v_param_list), 0));
						(function () { throw(p5context([v_v], p5want)) })();
					})();
				};
				if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == 'funcall') ) {
					p5pkg["Perlito5::Grammar::Expression"].die([['unexpected function call']], null);
				};
				if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == '( )') ) {
					(function () {
						var v_param_list;
						v_param_list = (p5pkg["Perlito5::Grammar::Expression"].expand_list(p5list_to_a((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2)), 0));
						if ( ((p5str(p5pkg["Perlito5::Grammar::Expression"].ref([v_value], 0)) == 'Perlito5::AST::Apply') && !( (p5call(v_value, "arguments", [], 0) != null))) ) {
							(v_value || (v_value = new p5HashRef({})))._hash_.p5hset('arguments', (v_param_list));
							(function () { throw(p5context([v_value], p5want)) })();
						};
						if ( ((p5str(p5pkg["Perlito5::Grammar::Expression"].ref([v_value], 0)) == 'Perlito5::AST::Call') && !( (p5call(v_value, "arguments", [], 0) != null))) ) {
							(v_value || (v_value = new p5HashRef({})))._hash_.p5hset('arguments', (v_param_list));
							(function () { throw(p5context([v_value], p5want)) })();
						};
						v_v = (p5call(p5pkg["Perlito5::AST::Call"], "new", ['invocant', v_value, 'method', 'postcircumfix:<( )>', 'arguments', v_param_list], 0));
						(function () { throw(p5context([v_v], p5want)) })();
					})();
				};
				if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == '[ ]') ) {
					v_v = (p5call(p5pkg["Perlito5::AST::Index"], "new", p5list_to_a('obj', v_value, 'index_exp', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2)), 0));
					(function () { throw(p5context([v_v], p5want)) })();
				};
				if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == 'block') ) {
					v_v = (p5call(p5pkg["Perlito5::AST::Lookup"], "new", p5list_to_a('obj', v_value, 'index_exp', (p5context([(v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2)], 0) || (p5context([(v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2)], 0) = new p5ArrayRef([])))._array_.p5aget(0)), 0));
					(function () { throw(p5context([v_v], p5want)) })();
				};
				if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == '.( )') ) {
					(function () {
						var v_param_list;
						v_param_list = (p5pkg["Perlito5::Grammar::Expression"].expand_list(p5list_to_a((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2)), 0));
						v_v = (p5call(p5pkg["Perlito5::AST::Call"], "new", ['invocant', v_value, 'method', 'postcircumfix:<( )>', 'arguments', v_param_list], 0));
						(function () { throw(p5context([v_v], p5want)) })();
					})();
				};
				if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == '.[ ]') ) {
					v_v = (p5call(p5pkg["Perlito5::AST::Call"], "new", p5list_to_a('invocant', v_value, 'method', 'postcircumfix:<[ ]>', 'arguments', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2)), 0));
					(function () { throw(p5context([v_v], p5want)) })();
				};
				if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)) == '.{ }') ) {
					v_v = (p5call(p5pkg["Perlito5::AST::Call"], "new", p5list_to_a('invocant', v_value, 'method', 'postcircumfix:<{ }>', 'arguments', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2)), 0));
					(function () { throw(p5context([v_v], p5want)) })();
				};
				(v_op || (v_op = new p5ArrayRef([])))._array_.p5push([v_value]);
				return (p5context([v_op], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		var v_reduce_to_ast;
		v_reduce_to_ast = (p5sub(function (List__, p5want) {
					try {
						var v_op_stack;
						v_op_stack = (List__.shift());
						var v_num_stack;
						v_num_stack = (List__.shift());
						var v_last_op;
						v_last_op = ((v_op_stack || (v_op_stack = new p5ArrayRef([])))._array_.shift());
						if ( (p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(0)) == 'prefix') ) {
							return ((v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('namespace', '', 'code', ('prefix:<' + p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(1)) + '>'), 'arguments', (new p5ArrayRef(p5list_to_a(p5pkg["Perlito5::Grammar::Expression"].pop_term([v_num_stack], 1))))), 1))));
						}
						else if ( (p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(0)) == 'postfix') ) {
							return ((v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('namespace', '', 'code', ('postfix:<' + p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(1)) + '>'), 'arguments', (new p5ArrayRef(p5list_to_a(p5pkg["Perlito5::Grammar::Expression"].pop_term([v_num_stack], 1))))), 1))));
						}
						else if ( (p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(0)) == 'postfix_or_term') ) {
							return ((v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5pkg["Perlito5::Grammar::Expression"].reduce_postfix(p5list_to_a(v_last_op, p5pkg["Perlito5::Grammar::Expression"].pop_term([v_num_stack], 1)), 1))));
						}
						else if ( p5bool(p5pkg["Perlito5::Grammar::Precedence"].is_assoc_type(p5list_to_a('list', (v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(1)), 0)) ) {
							var v_arg;
							if ( (p5num(((v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_)) < 2) ) {
								(function () {
									var v_v2;
									v_v2 = (p5pkg["Perlito5::Grammar::Expression"].pop_term([v_num_stack], 0));
									if ( ((p5str(p5pkg["Perlito5::Grammar::Expression"].ref([v_v2], 0)) == 'Perlito5::AST::Apply') && (p5str(p5call(v_v2, "code", [], 0)) == ('list:<' + p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(1)) + '>'))) ) {
										(v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('namespace', p5call(v_v2, "namespace", [], 1), 'code', p5call(v_v2, "code", [], 1), 'arguments', (new p5ArrayRef(p5list_to_a(p5call(v_v2, "arguments", [], p5want)._array_)))), 1)));
									}
									else {
										(v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('namespace', '', 'code', ('list:<' + p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(1)) + '>'), 'arguments', (new p5ArrayRef([v_v2]))), 1)));
									};
									(function () { throw(p5context([], p5want)) })();
								})();
							}
							else {
								(function () {
									var v_v2;
									v_v2 = (p5pkg["Perlito5::Grammar::Expression"].pop_term([v_num_stack], 0));
									v_arg = ((new p5ArrayRef(p5list_to_a(p5pkg["Perlito5::Grammar::Expression"].pop_term([v_num_stack], 1), v_v2))));
								})();
							};
							if ( (((p5str(p5pkg["Perlito5::Grammar::Expression"].ref([(v_arg || (v_arg = new p5ArrayRef([])))._array_.p5aget(0)], 0)) == 'Perlito5::AST::Apply') && (p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(0)) == 'infix')) && (p5str(p5call((v_arg || (v_arg = new p5ArrayRef([])))._array_.p5aget(0), "code", [], 0)) == ('list:<' + p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(1)) + '>'))) ) {
								(v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('namespace', '', 'code', p5call(p5context([(v_arg || (v_arg = new p5ArrayRef([])))._array_.p5aget(0)], 0), "code", [], 1), 'arguments', (new p5ArrayRef(p5list_to_a(p5call(p5context([(v_arg || (v_arg = new p5ArrayRef([])))._array_.p5aget(0)], 0), "arguments", [], p5want)._array_, (v_arg || (v_arg = new p5ArrayRef([])))._array_.p5aget(1))))), 1)));
								(function () { throw(p5context([], p5want)) })();
							};
							return ((v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"], "new", ['namespace', '', 'code', ('list:<' + p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(1)) + '>'), 'arguments', v_arg], 1))));
						}
						else if ( p5bool(p5pkg["Perlito5::Grammar::Precedence"].is_assoc_type(p5list_to_a('chain', (v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(1)), 0)) ) {
							if ( (p5num(((v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_)) < 2) ) {
								p5pkg["Perlito5::Grammar::Expression"].die([[('Missing value after operator ' + p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(1)))]], null);
							};
							var v_v2;
							v_v2 = (p5pkg["Perlito5::Grammar::Expression"].pop_term([v_num_stack], 0));
							var v_arg;
							v_arg = ((new p5ArrayRef(p5list_to_a(p5pkg["Perlito5::Grammar::Expression"].pop_term([v_num_stack], 1), v_v2))));
							return ((v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"], "new", ['namespace', '', 'code', ('infix:<' + p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(1)) + '>'), 'arguments', v_arg], 1))));
						}
						else if ( (p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(0)) == 'ternary') ) {
							if ( (p5num(((v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_)) < 2) ) {
								p5pkg["Perlito5::Grammar::Expression"].die([['Missing value after ternary operator']], null);
							};
							var v_v2;
							v_v2 = (p5pkg["Perlito5::Grammar::Expression"].pop_term([v_num_stack], 0));
							return ((v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('namespace', '', 'code', ('ternary:<' + p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(1)) + '>'), 'arguments', (new p5ArrayRef(p5list_to_a(p5pkg["Perlito5::Grammar::Expression"].pop_term([v_num_stack], 1), (v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(2), v_v2)))), 1))));
						}
						else {
							if ( (p5num(((v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_)) < 2) ) {
								p5pkg["Perlito5::Grammar::Expression"].die([[('missing value after operator ' + String.fromCharCode(39) + p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(1)) + String.fromCharCode(39))]], null);
							};
							var v_v2;
							v_v2 = (p5pkg["Perlito5::Grammar::Expression"].pop_term([v_num_stack], 0));
							return ((v_num_stack || (v_num_stack = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('namespace', '', 'code', ('infix:<' + p5str((v_last_op || (v_last_op = new p5ArrayRef([])))._array_.p5aget(1)) + '>'), 'arguments', (new p5ArrayRef(p5list_to_a(p5pkg["Perlito5::Grammar::Expression"].pop_term([v_num_stack], 1), v_v2)))), 1))));
						}
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "term_arrow", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5context([p5and(('->' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5or(p5or(p5or(p5context([(function () {
								return (p5and(p5and(p5and(p5context([p5and(('(' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "paren_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('paren_parse', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and((')' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('postfix_or_term', '.( )', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('paren_parse')), 1))))));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5and(p5context([p5and(('[' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "square_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('square_parse', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and((']' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('postfix_or_term', '.[ ]', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('square_parse')), 1))))));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5and(p5context([p5and(('{' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "curly_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('curly_parse', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and(('}' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('postfix_or_term', '.{ }', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('curly_parse')), 1))))));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5and(p5context([p5and(('$' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.ident', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and(p5and(p5and(p5context([p5and(('(' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
											var v_m2;
											v_m2 = (p5call(v_grammar, "paren_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('paren_parse', (v_m2));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0) }), function () { return p5context([p5and((')' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('postfix_or_term', 'methcall', p5call(p5pkg["Perlito5::AST::Var"], "new", p5list_to_a('sigil', '$', 'namespace', '', 'name', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.ident')), 1)), 1), p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('paren_parse')), 1))))));
											return (p5context([1], p5want));
										})()], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('postfix_or_term', 'methcall_no_params', p5call(p5pkg["Perlito5::AST::Var"], "new", p5list_to_a('sigil', '$', 'namespace', '', 'name', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.ident')), 1)), 1))))));
											return (p5context([1], p5want));
										})()], p5want));
									})()], p5want) }));
								})()], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "full_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.full_ident', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and(p5and(p5and(p5context([p5and(('(' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
											var v_m2;
											v_m2 = (p5call(v_grammar, "paren_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('paren_parse', (v_m2));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0) }), function () { return p5context([p5and((')' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('postfix_or_term', 'methcall', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.full_ident')), 1), p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('paren_parse')), 1))))));
											return (p5context([1], p5want));
										})()], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('postfix_or_term', 'methcall_no_params', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.full_ident')), 1))))));
											return (p5context([1], p5want));
										})()], p5want));
									})()], p5want) }));
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "term_ternary", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5context([p5and(('?' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "ternary5_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('ternary5_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([p5and((':' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('op', '? :', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('ternary5_parse')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "term_paren", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5context([p5and(('(' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "paren_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('paren_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([p5and((')' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('postfix_or_term', '( )', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('paren_parse')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "term_square", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5context([p5and(('[' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "square_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('square_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([p5and((']' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('postfix_or_term', '[ ]', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('square_parse')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "term_curly", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5and(p5and(p5context([p5and(('{' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m;
							v_m = (v_MATCH);
							if ( !( p5bool((function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})())) ) {
								v_MATCH = (v_m);
							};
							return (p5context([1], p5want));
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "exp_stmts", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.exp_stmts', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m;
							v_m = (v_MATCH);
							if ( !( p5bool((function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})())) ) {
								v_MATCH = (v_m);
							};
							return (p5context([1], p5want));
						})()], 0) }), function () { return p5context([p5and(('}' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('postfix_or_term', 'block', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.exp_stmts')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "declarator", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5or(p5context([(function () {
								return (p5and(('my' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('state' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 5], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((5 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('our' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 3], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((3 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "term_declarator", p5sub(function (List__, p5want) {
			try {
				var v_grammar;
				v_grammar = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_MATCH;
				v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
				var v_tmp;
				v_tmp = (p5context([p5context([p5and(p5and(p5and(p5and(p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "declarator", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('declarator', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and(p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar::Block"], "named_sub", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Block.named_sub', (v_m2));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											var v_sub;
											v_sub = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar::Block.named_sub')._hash_.p5hget('capture'));
											(v_sub || (v_sub = new p5HashRef({})))._hash_.p5hset('decl', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('declarator')), 0)));
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(['term', v_sub]))));
											(function () { throw(p5context([v_MATCH], p5want)) })();
											return (p5context([1], p5want));
										})()], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "opt_type", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.opt_type', (v_m2));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], p5want));
									})()], p5want) }));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([1], p5want));
							})()], p5want) }));
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "var_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.var_ident', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Attribute"], "opt_attribute", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Attribute.opt_attribute', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							var v_decl;
							v_decl = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('declarator')), 0));
							var v_type;
							v_type = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.opt_type')), 0));
							if ( (p5bool(v_type) && !( p5bool((p5make_package("Perlito5")["v_PACKAGES"] || (p5make_package("Perlito5")["v_PACKAGES"] = new p5HashRef({})))._hash_.p5hget(p5str(v_type))))) ) {
								p5pkg["Perlito5::Grammar::Expression"].die([[('No such class ' + p5str(v_type))]], null)
							};
							var v_var;
							v_var = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar.var_ident')._hash_.p5hget('capture'));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Decl"], "new", p5list_to_a('decl', v_decl, 'type', v_type, 'var', v_var, 'attributes', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Attribute.opt_attribute')), 1)), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
				return (( p5bool(v_tmp) ? v_MATCH : 0));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "term_local", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5context([p5and(('local' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 5], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((5 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "var_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.var_ident', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							var v_decl;
							v_decl = ('local');
							var v_type;
							v_type = ('');
							v_MATCH = (p5call(p5pkg["Perlito5::Grammar::String"], "double_quoted_var_with_subscript", p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.var_ident')), 0));
							var v_var;
							v_var = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('capture'));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Decl"], "new", ['decl', v_decl, 'type', v_type, 'var', v_var], 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "term_return", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5context([p5and(('return' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 6], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((6 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "list_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('list_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							var v_args;
							v_args = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('list_parse')), 0));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'return', 'arguments', ( (p5str(v_args) == '*undef*') ? (new p5ArrayRef([])) : (new p5ArrayRef([v_args]))), 'namespace', ''), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "term_eval", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5and(p5context([p5and(('eval' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 4], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((4 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_tmp;
							v_tmp = (v_MATCH);
							v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
							var v_res;
							v_res = (p5context([p5and(('{' == p5pkg["Perlito5::Grammar::Expression"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
							return ((v_MATCH = (( p5bool(v_res) ? v_tmp : 0))));
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "term_curly", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('term_curly', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'eval', 'arguments', (new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Do"], "new", p5list_to_a('block', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('term_curly')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('term_curly')), p5want) = new p5ArrayRef([])))._array_.p5aget(2)), 1)), 1)))), 'namespace', ''), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		var v_Argument_end_token;
		v_Argument_end_token = ((new p5HashRef({':' : 1, ']' : 1, ')' : 1, '}' : 1, ';' : 1, ',' : 1, '<' : 1, '>' : 1, '=' : 1, '|' : 1, '^' : 1, '?' : 1, 'or' : 1, 'if' : 1, '=>' : 1, 'lt' : 1, 'le' : 1, 'gt' : 1, 'ge' : 1, '<=' : 1, '>=' : 1, '==' : 1, '!=' : 1, 'ne' : 1, 'eq' : 1, '..' : 1, '~~' : 1, '&&' : 1, '||' : 1, '+=' : 1, '-=' : 1, '*=' : 1, '/=' : 1, 'x=' : 1, '|=' : 1, '&=' : 1, '.=' : 1, '^=' : 1, '%=' : 1, '//' : 1, 'for' : 1, 'and' : 1, 'xor' : 1, '...' : 1, '<=>' : 1, 'cmp' : 1, '<<=' : 1, '>>=' : 1, '||=' : 1, '&&=' : 1, '//=' : 1, '**=' : 1, 'when' : 1, 'while' : 1, 'unless' : 1, 'foreach' : 1})));
		var v_Argument_end_token_chars;
		v_Argument_end_token_chars = ((new p5ArrayRef([7, 6, 5, 4, 3, 2, 1])));
		var v_List_end_token;
		v_List_end_token = ((new p5HashRef({':' : 1, ']' : 1, ')' : 1, '}' : 1, ';' : 1, 'or' : 1, 'if' : 1, 'for' : 1, 'and' : 1, 'xor' : 1, 'else' : 1, 'when' : 1, 'while' : 1, 'elsif' : 1, 'unless' : 1, 'foreach' : 1})));
		var v_List_end_token_chars;
		v_List_end_token_chars = ((new p5ArrayRef([7, 6, 5, 4, 3, 2, 1])));
		var v_Expr_end_token;
		v_Expr_end_token = ((new p5HashRef({']' : 1, ')' : 1, '}' : 1, ';' : 1, 'if' : 1, 'for' : 1, 'else' : 1, 'when' : 1, 'while' : 1, 'elsif' : 1, 'unless' : 1, 'foreach' : 1})));
		var v_Expr_end_token_chars;
		v_Expr_end_token_chars = ((new p5ArrayRef([7, 6, 5, 4, 3, 2, 1])));
		p5typeglob_set("Perlito5::Grammar::Expression", "argument_parse", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_expr;
				var v_last_pos;
				v_last_pos = (v_pos);
				var v_is_first_token;
				v_is_first_token = (1);
				var v_lexer_stack;
				v_lexer_stack = ((new p5ArrayRef([])));
				var v_last_token_was_space;
				v_last_token_was_space = (1);
				var v_get_token;
				v_get_token = (p5sub(function (List__, p5want) {
							try {
								var v_last_is_term;
								v_last_is_term = (List__.p5aget(0));
								var v_v;
								if ( p5bool(((v_lexer_stack || (v_lexer_stack = new p5ArrayRef([])))._array_)) ) {
									v_v = ((v_lexer_stack || (v_lexer_stack = new p5ArrayRef([])))._array_.pop());
									if ( ((p5bool(v_is_first_token) && (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(0)) == 'op')) && !( p5bool(p5pkg["Perlito5::Grammar::Precedence"].is_fixity_type(p5list_to_a('prefix', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)), 0)))) ) {
										(v_v || (v_v = new p5ArrayRef([])))._array_.p5aset(0, ('end'));
									};
								}
								else {
									(function () {
										var v_m;
										v_m = (p5call(p5pkg["Perlito5::Grammar::Precedence"], "op_parse", [v_str, v_last_pos, v_last_is_term], 0));
										if ( p5bool(v_m) ) {
											(function () {
												var v_spc;
												v_spc = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')), 0));
												if ( p5bool(v_spc) ) {
													(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('to', ((v_spc || (v_spc = new p5HashRef({})))._hash_.p5hget('to')));
												};
											})();
										};
										if ( !( p5bool(v_m)) ) {
											(function () { throw((new p5ArrayRef(['end', '*end*']))) })();
										};
										v_v = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('capture'));
										if ( ((p5bool(v_is_first_token) && (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(0)) == 'op')) && !( p5bool(p5pkg["Perlito5::Grammar::Precedence"].is_fixity_type(p5list_to_a('prefix', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)), 0)))) ) {
											(v_v || (v_v = new p5ArrayRef([])))._array_.p5aset(0, ('end'));
										};
										if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(0)) != 'end') ) {
											v_last_pos = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
										};
									})();
								};
								v_last_token_was_space = (p5context([(p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(0)) == 'space')], 0));
								v_is_first_token = (0);
								return (p5context([v_v], p5want));
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null));
				var v_prec;
				v_prec = (p5call(p5pkg["Perlito5::Grammar::Precedence"], "new", ['get_token', v_get_token, 'reduce', v_reduce_to_ast, 'end_token', v_Argument_end_token, 'end_token_chars', v_Argument_end_token_chars], 0));
				var v_res;
				v_res = (p5call(v_prec, "precedence_parse", [], 0));
				if ( (p5num(((v_res || (v_res = new p5ArrayRef([])))._array_)) == 0) ) {
					(function () { throw((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_last_pos, 'capture' : '*undef*'}))) })();
				};
				var v_result;
				v_result = (p5pkg["Perlito5::Grammar::Expression"].pop_term([v_res], 0));
				return ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_last_pos, 'capture' : v_result})));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "list_parse", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_expr;
				var v_last_pos;
				v_last_pos = (v_pos);
				var v_is_first_token;
				v_is_first_token = (1);
				var v_lexer_stack;
				v_lexer_stack = ((new p5ArrayRef([])));
				var v_last_token_was_space;
				v_last_token_was_space = (1);
				var v_get_token;
				v_get_token = (p5sub(function (List__, p5want) {
							try {
								var v_last_is_term;
								v_last_is_term = (List__.p5aget(0));
								var v_v;
								if ( p5bool(((v_lexer_stack || (v_lexer_stack = new p5ArrayRef([])))._array_)) ) {
									v_v = ((v_lexer_stack || (v_lexer_stack = new p5ArrayRef([])))._array_.pop());
									if ( ((p5bool(v_is_first_token) && (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(0)) == 'op')) && !( p5bool(p5pkg["Perlito5::Grammar::Precedence"].is_fixity_type(p5list_to_a('prefix', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)), 0)))) ) {
										(v_v || (v_v = new p5ArrayRef([])))._array_.p5aset(0, ('end'));
									};
								}
								else {
									(function () {
										var v_m;
										v_m = (p5call(p5pkg["Perlito5::Grammar::Precedence"], "op_parse", [v_str, v_last_pos, v_last_is_term], 0));
										if ( p5bool(v_m) ) {
											(function () {
												var v_spc;
												v_spc = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')), 0));
												if ( p5bool(v_spc) ) {
													(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('to', ((v_spc || (v_spc = new p5HashRef({})))._hash_.p5hget('to')));
												};
											})();
										};
										if ( !( p5bool(v_m)) ) {
											(function () { throw((new p5ArrayRef(['end', '*end*']))) })();
										};
										v_v = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('capture'));
										if ( ((p5bool(v_is_first_token) && (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(0)) == 'op')) && !( p5bool(p5pkg["Perlito5::Grammar::Precedence"].is_fixity_type(p5list_to_a('prefix', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(1)), 0)))) ) {
											(v_v || (v_v = new p5ArrayRef([])))._array_.p5aset(0, ('end'));
										};
										if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(0)) != 'end') ) {
											v_last_pos = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
										};
									})();
								};
								v_last_token_was_space = (p5context([(p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(0)) == 'space')], 0));
								v_is_first_token = (0);
								return (p5context([v_v], p5want));
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null));
				var v_prec;
				v_prec = (p5call(p5pkg["Perlito5::Grammar::Precedence"], "new", ['get_token', v_get_token, 'reduce', v_reduce_to_ast, 'end_token', v_List_end_token, 'end_token_chars', v_List_end_token_chars], 0));
				var v_res;
				v_res = (p5call(v_prec, "precedence_parse", [], 0));
				if ( (p5num(((v_res || (v_res = new p5ArrayRef([])))._array_)) == 0) ) {
					(function () { throw((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_last_pos, 'capture' : '*undef*'}))) })();
				};
				var v_result;
				v_result = (p5pkg["Perlito5::Grammar::Expression"].pop_term([v_res], 0));
				return ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_last_pos, 'capture' : v_result})));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "circumfix_parse", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_delimiter;
			v_delimiter = (List__.p5aget(3));
			var v_expr;
			var v_last_pos;
			v_last_pos = (v_pos);
			var v_get_token;
			v_get_token = (p5sub(function (List__, p5want) {
							var v_last_is_term;
							v_last_is_term = (List__.p5aget(0));
							var v_m;
							v_m = (p5call(p5pkg["Perlito5::Grammar::Precedence"], "op_parse", [v_str, v_last_pos, v_last_is_term], 0));
							if ( p5bool(v_m) ) {
									(function () {
										var v_spc;
										v_spc = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')), 0));
										if ( p5bool(v_spc) ) {
											(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('to', ((v_spc || (v_spc = new p5HashRef({})))._hash_.p5hget('to')));
										};
									})();
								};
							if ( !( p5bool(v_m)) ) {
									p5pkg["Perlito5::Grammar::Expression"].die([['Expected closing delimiter: ', v_delimiter, ' near ', v_last_pos]], null);
								};
							var v_v;
							v_v = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('capture'));
							if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(0)) != 'end') ) {
									v_last_pos = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
								};
							return (p5context([v_v], p5want));
						}, null));
			var Hash_delim_token = {};
			Hash_delim_token.p5hset(p5str(v_delimiter), (1));
			var v_prec;
			v_prec = (p5call(p5pkg["Perlito5::Grammar::Precedence"], "new", p5list_to_a('get_token', v_get_token, 'reduce', v_reduce_to_ast, 'end_token', (new p5HashRef(Hash_delim_token)), 'end_token_chars', (new p5ArrayRef([p5pkg["Perlito5::Grammar::Expression"].length([v_delimiter], 1)]))), 0));
			var v_res;
			v_res = (p5call(v_prec, "precedence_parse", [], 0));
			v_res = (p5pkg["Perlito5::Grammar::Expression"].pop_term([v_res], 0));
			if ( !( (v_res != null)) ) {
					v_res = ('*undef*');
				};
			return ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_last_pos, 'capture' : v_res})));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "ternary5_parse", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			return (p5call(v_self, "circumfix_parse", [v_str, v_pos, ':'], p5want));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "curly_parse", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			return (p5call(v_self, "circumfix_parse", [v_str, v_pos, '}'], p5want));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "square_parse", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			return (p5call(v_self, "circumfix_parse", [v_str, v_pos, ']'], p5want));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "paren_parse", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			return (p5call(v_self, "circumfix_parse", [v_str, v_pos, ')'], p5want));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Expression", "exp_parse", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_expr;
				var v_last_pos;
				v_last_pos = (v_pos);
				var v_lexer_stack;
				v_lexer_stack = ((new p5ArrayRef([])));
				var v_get_token;
				v_get_token = (p5sub(function (List__, p5want) {
							try {
								var v_last_is_term;
								v_last_is_term = (List__.p5aget(0));
								var v_v;
								if ( p5bool(((v_lexer_stack || (v_lexer_stack = new p5ArrayRef([])))._array_)) ) {
									v_v = ((v_lexer_stack || (v_lexer_stack = new p5ArrayRef([])))._array_.pop());
								}
								else {
									(function () {
										var v_m;
										v_m = (p5call(p5pkg["Perlito5::Grammar::Precedence"], "op_parse", [v_str, v_last_pos, v_last_is_term], 0));
										if ( p5bool(v_m) ) {
											(function () {
												var v_spc;
												v_spc = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')), 0));
												if ( p5bool(v_spc) ) {
													(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('to', ((v_spc || (v_spc = new p5HashRef({})))._hash_.p5hget('to')));
												};
											})();
										};
										if ( !( p5bool(v_m)) ) {
											(function () { throw((new p5ArrayRef(['end', '*end*']))) })();
										};
										v_v = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('capture'));
										if ( (p5str((v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(0)) != 'end') ) {
											v_last_pos = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
										};
									})();
								};
								return (p5context([v_v], p5want));
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null));
				var v_prec;
				v_prec = (p5call(p5pkg["Perlito5::Grammar::Precedence"], "new", ['get_token', v_get_token, 'reduce', v_reduce_to_ast, 'end_token', v_Expr_end_token, 'end_token_chars', v_Expr_end_token_chars], 0));
				var v_res;
				v_res = (p5call(v_prec, "precedence_parse", [], 0));
				if ( (p5num(((v_res || (v_res = new p5ArrayRef([])))._array_)) == 0) ) {
					(function () { throw(p5context([0], p5want)) })();
				};
				var v_result;
				v_result = (p5pkg["Perlito5::Grammar::Expression"].pop_term([v_res], 0));
				return ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_last_pos, 'capture' : v_result})));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		1;
	})()
;
	(function () {
		p5make_package("Perlito5::Grammar");
		// use strict
;
		// use Perlito5::Grammar::Expression
;
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['if', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar"], "if", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['for', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar"], "for", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['foreach', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar"], "for", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['when', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar"], "when", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['while', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar"], "while", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['given', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar"], "given", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['unless', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar"], "unless", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5typeglob_set("Perlito5::Grammar", "unless", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5and(p5and(p5context([p5and(('unless' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 6], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((6 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_paren", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.term_paren', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.term_curly', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([p5and(('else' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 4], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((4 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and(('{' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "exp_stmts", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.exp_stmts', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and(('}' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									var v_body;
									v_body = ((p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_curly')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_curly')), p5want) = new p5ArrayRef([])))._array_.p5aget(2));
									if ( !( (v_body != null)) ) {
										p5pkg["Perlito5::Grammar"].die([['Missing code block in ' + String.fromCharCode(39) + 'if' + String.fromCharCode(39)]], null);
									};
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::If"], "new", p5list_to_a('cond', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_paren')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_paren')), p5want) = new p5ArrayRef([])))._array_.p5aget(2), 'body', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', p5or(p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.exp_stmts')), 0), function () { return (new p5ArrayRef([])) })), 1), 'otherwise', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", ['stmts', v_body], 1)), 0)));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									var v_body;
									v_body = ((p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_curly')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_curly')), p5want) = new p5ArrayRef([])))._array_.p5aget(2));
									if ( !( (v_body != null)) ) {
										p5pkg["Perlito5::Grammar"].die([['Missing code block in ' + String.fromCharCode(39) + 'unless' + String.fromCharCode(39)]], null);
									};
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::If"], "new", p5list_to_a('cond', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_paren')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_paren')), p5want) = new p5ArrayRef([])))._array_.p5aget(2), 'body', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (new p5ArrayRef([]))), 1), 'otherwise', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", ['stmts', v_body], 1)), 0)));
									return (p5context([1], p5want));
								})()], p5want));
							})()], p5want) }));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "if", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5and(p5and(p5context([p5and(('if' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_paren", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.term_paren', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.term_curly', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5or(p5context([(function () {
								return (p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([p5and(('else' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 4], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((4 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and(('{' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "exp_stmts", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.exp_stmts', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and(('}' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									var v_body;
									v_body = ((p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_curly')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_curly')), p5want) = new p5ArrayRef([])))._array_.p5aget(2));
									if ( !( (v_body != null)) ) {
										p5pkg["Perlito5::Grammar"].die([['Missing code block in ' + String.fromCharCode(39) + 'if' + String.fromCharCode(39)]], null);
									};
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::If"], "new", p5list_to_a('cond', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_paren')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_paren')), p5want) = new p5ArrayRef([])))._array_.p5aget(2), 'body', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", ['stmts', v_body], 1), 'otherwise', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', p5or(p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.exp_stmts')), 0), function () { return (new p5ArrayRef([])) })), 1)), 0)));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([p5and(('els' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 3], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((3 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "if", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('if', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									var v_body;
									v_body = ((p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_curly')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_curly')), p5want) = new p5ArrayRef([])))._array_.p5aget(2));
									if ( !( (v_body != null)) ) {
										p5pkg["Perlito5::Grammar"].die([['Missing code block in ' + String.fromCharCode(39) + 'if' + String.fromCharCode(39)]], null);
									};
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::If"], "new", p5list_to_a('cond', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_paren')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_paren')), p5want) = new p5ArrayRef([])))._array_.p5aget(2), 'body', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", ['stmts', v_body], 1), 'otherwise', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (new p5ArrayRef(p5list_to_a(p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('if')), 1))))), 1)), 0)));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									var v_body;
									v_body = ((p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_curly')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_curly')), p5want) = new p5ArrayRef([])))._array_.p5aget(2));
									if ( !( (v_body != null)) ) {
										p5pkg["Perlito5::Grammar"].die([['Missing code block in ' + String.fromCharCode(39) + 'if' + String.fromCharCode(39)]], null);
									};
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::If"], "new", p5list_to_a('cond', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_paren')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_paren')), p5want) = new p5ArrayRef([])))._array_.p5aget(2), 'body', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", ['stmts', v_body], 1), 'otherwise', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (new p5ArrayRef([]))), 1)), 0)));
									return (p5context([1], p5want));
								})()], p5want));
							})()], p5want) }));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "when", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5and(p5and(p5context([p5and(('when' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 4], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((4 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_paren", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.term_paren', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.term_curly', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							var v_body;
							v_body = ((p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_curly')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_curly')), p5want) = new p5ArrayRef([])))._array_.p5aget(2));
							if ( !( (v_body != null)) ) {
								p5pkg["Perlito5::Grammar"].die([['Missing code block in ' + String.fromCharCode(39) + 'when' + String.fromCharCode(39)]], null);
							};
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::When"], "new", p5list_to_a('cond', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_paren')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_paren')), p5want) = new p5ArrayRef([])))._array_.p5aget(2), 'body', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", ['stmts', v_body], 1)), 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "for", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5context([p5and(('for' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 3], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((3 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m;
							v_m = (v_MATCH);
							if ( !( (('each' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 4], 0)) && p5bool((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((4 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))))) ) {
								v_MATCH = (v_m);
							};
							return (p5context([1], p5want));
						})()], 0) }), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and(p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_declarator", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.term_declarator', (v_m2));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('_tmp', ((p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_declarator')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.term_declarator')), p5want) = new p5ArrayRef([])))._array_.p5aget(1)));
											return (p5context([1], p5want));
										})()], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "var_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.var_ident', (v_m2));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('_tmp', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.var_ident')), 0)));
											return (p5context([1], p5want));
										})()], p5want) })], p5want));
									})()], p5want) }));
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and(('(' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "paren_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.paren_parse', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and((')' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and(('{' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "exp_stmts", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.exp_stmts', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and(('}' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "opt_continue_block", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('opt_continue_block', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::For"], "new", p5list_to_a('cond', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.paren_parse')), 1), 'topic', null, 'body', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.exp_stmts')), 1), 'sig', (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('_tmp')), 1), 'continue', (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('opt_continue_block')._hash_.p5hget('capture')), 0)));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([p5and(('(' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "exp_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.exp_parse', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and(p5and(p5and(p5and(p5context([p5and((';' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('c_style_for', (1));
											return (p5context([1], p5want));
										})()], 0) }), function () { return p5context([(function () {
											var v_pos1;
											v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
											return (p5or(p5or(p5context([(function () {
												var v_m2;
												v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "exp", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
												if ( p5bool(v_m2) ) {
													(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
													(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.exp', (v_m2));
													return (p5context([1], p5want));
												}
												else {
													return (p5context([0], p5want));
												}
											})()], 0), function () { return p5context([(function () {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
												return (p5context([], p5want));
											})()], 0) }), function () { return p5context([(function () {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
												return (p5context([(function () {
													var v_m2;
													v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
													if ( p5bool(v_m2) ) {
														(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
														return (p5context([1], p5want));
													}
													else {
														return (p5context([0], p5want));
													}
												})()], p5want));
											})()], p5want) }));
										})()], 0) }), function () { return p5context([p5and((';' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
											var v_pos1;
											v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
											return (p5or(p5or(p5context([(function () {
												var v_m2;
												v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "exp2", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
												if ( p5bool(v_m2) ) {
													(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
													(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.exp2', (v_m2));
													return (p5context([1], p5want));
												}
												else {
													return (p5context([0], p5want));
												}
											})()], 0), function () { return p5context([(function () {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
												return (p5context([], p5want));
											})()], 0) }), function () { return p5context([(function () {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
												return (p5context([(function () {
													var v_m2;
													v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
													if ( p5bool(v_m2) ) {
														(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
														return (p5context([1], p5want));
													}
													else {
														return (p5context([0], p5want));
													}
												})()], p5want));
											})()], p5want) }));
										})()], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([1], p5want));
									})()], p5want) }));
								})()], 0) }), function () { return p5context([p5and((')' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and(('{' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "exp_stmts2", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.exp_stmts2', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and(('}' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "opt_continue_block", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('opt_continue_block', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									var v_header;
									if ( p5bool((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('c_style_for')) ) {
										v_header = ((new p5ArrayRef(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar::Expression.exp_parse')._hash_.p5hget('capture'), (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar.exp')._hash_.p5hget('capture'), (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar.exp2')._hash_.p5hget('capture')))));
									}
									else {
										v_header = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar::Expression.exp_parse')._hash_.p5hget('capture'));
									};
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::For"], "new", p5list_to_a('cond', v_header, 'topic', null, 'body', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.exp_stmts2')), 1), 'sig', null), 1), 'continue', (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('opt_continue_block')._hash_.p5hget('capture')), 0)));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "while", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5context([p5and(('while' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 5], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((5 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([p5and(('(' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "paren_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.paren_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([p5and((')' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([p5and(('{' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "exp_stmts", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.exp_stmts', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([p5and(('}' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "opt_continue_block", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('opt_continue_block', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::While"], "new", p5list_to_a('cond', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.paren_parse')), 1), 'body', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.exp_stmts')), 1), 'sig', null), 1), 'continue', (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('opt_continue_block')._hash_.p5hget('capture')), 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "given", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5context([p5and(('given' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 5], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((5 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([p5and(('(' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "paren_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.paren_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([p5and((')' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([p5and(('{' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "exp_stmts", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.exp_stmts', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([p5and(('}' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Given"], "new", p5list_to_a('cond', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.paren_parse')), 1), 'body', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.exp_stmts')), 1), 'sig', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.var_ident')), 1)), 1)), 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "opt_continue_block", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5context([p5and(('continue' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 8], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((8 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and(('{' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "exp_stmts", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.exp_stmts', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and(('}' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.exp_stmts')), 1), 'sig', null), 0)));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (new p5ArrayRef([])), 'sig', null), 0)));
									return (p5context([1], p5want));
								})()], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
	})()
;
	(function () {
		null;
		p5make_package("Perlito5::Grammar::String");
		// use Perlito5::Grammar::Precedence
;
		p5pkg["Perlito5::Grammar::Precedence"].add_term([String.fromCharCode(39), p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_q_quote", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['"', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_qq_quote", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['/', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_m_quote", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['<', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_glob", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['<<', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "here_doc_wanted", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['`', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_qx", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['m', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_m_quote", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['q', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_q_quote", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['qq', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_qq_quote", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['qw', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_qw_quote", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['qx', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_qx", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['qr', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_qr_quote", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['s', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_s_quote", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['tr', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_tr_quote", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['y', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::String"], "term_tr_quote", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5typeglob_set("Perlito5::Grammar::String", "term_q_quote", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5context([p5and(('q' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and(('#' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(p5and(p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0), function () { return p5context([(function () {
											var v_tmp;
											v_tmp = (v_MATCH);
											v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
											var v_res;
											v_res = (p5context([p5and(('=>' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
											return ((v_MATCH = (( p5bool(v_res) ? 0 : v_tmp))));
										})()], 0) }), function () { return p5context([p5and(('' != p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want) })], p5want));
									})()], p5want) }));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and((String.fromCharCode(39) == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], p5want) }));
						})()], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "q_quote_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('q_quote_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('q_quote_parse')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "term_qq_quote", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5context([p5and(('qq' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and(('#' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(p5and(p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0), function () { return p5context([(function () {
											var v_tmp;
											v_tmp = (v_MATCH);
											v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
											var v_res;
											v_res = (p5context([p5and(('=>' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
											return ((v_MATCH = (( p5bool(v_res) ? 0 : v_tmp))));
										})()], 0) }), function () { return p5context([p5and(('' != p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want) })], p5want));
									})()], p5want) }));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('"' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], p5want) }));
						})()], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "qq_quote_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('qq_quote_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('qq_quote_parse')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "term_qw_quote", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5context([p5and(('qw' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(('#' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									var v_tmp;
									v_tmp = (v_MATCH);
									v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
									var v_res;
									v_res = (p5context([p5and(('=>' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
									return ((v_MATCH = (( p5bool(v_res) ? 0 : v_tmp))));
								})()], 0) }), function () { return p5context([p5and(('' != p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want) })], p5want));
							})()], p5want) }));
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "qw_quote_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('qw_quote_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('qw_quote_parse')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "term_m_quote", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5context([p5and(('m' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and(('#' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(p5and(p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0), function () { return p5context([(function () {
											var v_tmp;
											v_tmp = (v_MATCH);
											v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
											var v_res;
											v_res = (p5context([p5and(('=>' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
											return ((v_MATCH = (( p5bool(v_res) ? 0 : v_tmp))));
										})()], 0) }), function () { return p5context([p5and(('' != p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want) })], p5want));
									})()], p5want) }));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('/' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], p5want) }));
						})()], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "m_quote_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('m_quote_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('m_quote_parse')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "term_s_quote", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5context([p5and(('s' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(('#' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									var v_tmp;
									v_tmp = (v_MATCH);
									v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
									var v_res;
									v_res = (p5context([p5and(('=>' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
									return ((v_MATCH = (( p5bool(v_res) ? 0 : v_tmp))));
								})()], 0) }), function () { return p5context([p5and(('' != p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want) })], p5want));
							})()], p5want) }));
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "s_quote_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('s_quote_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('s_quote_parse')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "term_qx", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5context([p5and(('qx' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and(('#' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(p5and(p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0), function () { return p5context([(function () {
											var v_tmp;
											v_tmp = (v_MATCH);
											v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
											var v_res;
											v_res = (p5context([p5and(('=>' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
											return ((v_MATCH = (( p5bool(v_res) ? 0 : v_tmp))));
										})()], 0) }), function () { return p5context([p5and(('' != p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want) })], p5want));
									})()], p5want) }));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('`' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], p5want) }));
						})()], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "qx_quote_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('qx_quote_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('qx_quote_parse')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "term_glob", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5context([p5and(('<' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "glob_quote_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('glob_quote_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('glob_quote_parse')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "term_tr_quote", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(('tr' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('y' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], p5want) }));
						})()], 0), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(('#' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									var v_tmp;
									v_tmp = (v_MATCH);
									v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
									var v_res;
									v_res = (p5context([p5and(('=>' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
									return ((v_MATCH = (( p5bool(v_res) ? 0 : v_tmp))));
								})()], 0) }), function () { return p5context([p5and(('' != p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want) })], p5want));
							})()], p5want) }));
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "tr_quote_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('tr_quote_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('tr_quote_parse')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "term_qr_quote", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5context([p5and(('qr' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(('#' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									var v_tmp;
									v_tmp = (v_MATCH);
									v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
									var v_res;
									v_res = (p5context([p5and(('=>' == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
									return ((v_MATCH = (( p5bool(v_res) ? 0 : v_tmp))));
								})()], 0) }), function () { return p5context([p5and(('' != p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want) })], p5want));
							})()], p5want) }));
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "qr_quote_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('qr_quote_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('qr_quote_parse')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		var Hash_pair = {};
		Hash_pair = p5a_to_h(['{', '}', '(', ')', '[', ']', '<', '>']);
		var Hash_escape_sequence = {};
		Hash_escape_sequence = {'a' : '7', 'b' : '8', 'e' : '27', 'f' : '12', 'n' : '10', 'r' : '13', 't' : '9'};
		var Hash_hex = {};
		Hash_hex = p5a_to_h(p5list_to_a(p5map(p5pkg["Perlito5::Grammar::String"], function (p5want) {
return ((p5context([p5pkg["Perlito5::Grammar::String"]["v__"], 1], p5want)));
				}, ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'])));
		var Hash_octal = {};
		Hash_octal = p5a_to_h(p5list_to_a(p5map(p5pkg["Perlito5::Grammar::String"], function (p5want) {
return ((p5context([p5pkg["Perlito5::Grammar::String"]["v__"], 1], p5want)));
				}, ['0', '1', '2', '3', '4', '5', '6', '7'])));
		p5typeglob_set("Perlito5::Grammar::String", "q_quote_parse", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_delimiter;
			v_delimiter = (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) - 1), 1], 0));
			var v_open_delimiter;
			v_open_delimiter = (v_delimiter);
			if ( (Hash_pair).hasOwnProperty(v_delimiter) ) {
					v_delimiter = (Hash_pair.p5hget(p5str(v_delimiter)))
				};
			return (p5call(v_self, "string_interpolation_parse", [v_str, v_pos, v_open_delimiter, v_delimiter, 0], p5want));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "qq_quote_parse", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_delimiter;
			v_delimiter = (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) - 1), 1], 0));
			var v_open_delimiter;
			v_open_delimiter = (v_delimiter);
			if ( (Hash_pair).hasOwnProperty(v_delimiter) ) {
					v_delimiter = (Hash_pair.p5hget(p5str(v_delimiter)))
				};
			return (p5call(v_self, "string_interpolation_parse", [v_str, v_pos, v_open_delimiter, v_delimiter, 1], p5want));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "qw_quote_parse", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_delimiter;
			v_delimiter = (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) - 1), 1], 0));
			var v_open_delimiter;
			v_open_delimiter = (v_delimiter);
			if ( (Hash_pair).hasOwnProperty(v_delimiter) ) {
					v_delimiter = (Hash_pair.p5hget(p5str(v_delimiter)))
				};
			var v_m;
			v_m = (p5call(v_self, "string_interpolation_parse", [v_str, v_pos, v_open_delimiter, v_delimiter, 0], 0));
			if ( p5bool(v_m) ) {
					(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'list:<,>', 'arguments', (new p5ArrayRef(p5list_to_a(p5map(p5pkg["Perlito5::Grammar::String"], function (p5want) {
return (p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', p5pkg["Perlito5::Grammar::String"]["v__"]], p5want));
}, p5list_to_a(p5pkg["Perlito5::Grammar::String"].split(p5list_to_a(' ', (p5pkg["Perlito5::Match"].flat([v_m], p5want) || (p5pkg["Perlito5::Match"].flat([v_m], p5want) = new p5HashRef({})))._hash_.p5hget('buf')), 1)))))), 'namespace', ''), 0)));
				};
			return (p5context([v_m], p5want));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "m_quote_parse", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_delimiter;
				v_delimiter = (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) - 1), 1], 0));
				var v_open_delimiter;
				v_open_delimiter = (v_delimiter);
				var v_closing_delimiter;
				v_closing_delimiter = (v_delimiter);
				if ( (Hash_pair).hasOwnProperty(v_delimiter) ) {
					v_closing_delimiter = (Hash_pair.p5hget(p5str(v_delimiter)))
				};
				var v_part1;
				v_part1 = (p5call(v_self, "string_interpolation_parse", [v_str, v_pos, v_open_delimiter, v_closing_delimiter, 2], 0));
				if ( p5bool(v_part1) ) {}
				else {
					(function () { throw(p5context([v_part1], p5want)) })()
				};
				var v_str_regex;
				v_str_regex = ((v_part1 || (v_part1 = new p5HashRef({})))._hash_.p5hget('capture'));
				var v_p;
				v_p = ((v_part1 || (v_part1 = new p5HashRef({})))._hash_.p5hget('to'));
				var v_modifiers;
				v_modifiers = ('');
				var v_m;
				v_m = (p5call(p5pkg["Perlito5::Grammar"], "ident", [v_str, v_p], 0));
				if ( p5bool(v_m) ) {
					v_modifiers = (p5pkg["Perlito5::Match"].flat([v_m], 0));
					(v_part1 || (v_part1 = new p5HashRef({})))._hash_.p5hset('to', ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')));
				};
				(v_part1 || (v_part1 = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'p5:m', 'arguments', (new p5ArrayRef([v_str_regex, v_modifiers])), 'namespace', ''), 0)));
				return (p5context([v_part1], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "s_quote_parse", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_delimiter;
				v_delimiter = (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) - 1), 1], 0));
				var v_open_delimiter;
				v_open_delimiter = (v_delimiter);
				var v_closing_delimiter;
				v_closing_delimiter = (v_delimiter);
				if ( (Hash_pair).hasOwnProperty(v_delimiter) ) {
					v_closing_delimiter = (Hash_pair.p5hget(p5str(v_delimiter)))
				};
				var v_part1;
				v_part1 = (p5call(v_self, "string_interpolation_parse", [v_str, v_pos, v_open_delimiter, v_closing_delimiter, 1], 0));
				if ( p5bool(v_part1) ) {}
				else {
					(function () { throw(p5context([v_part1], p5want)) })()
				};
				var v_str_regex;
				v_str_regex = (p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', p5pkg["Perlito5::Grammar::String"].substr([v_str, v_pos, ((p5num((v_part1 || (v_part1 = new p5HashRef({})))._hash_.p5hget('to')) - p5num(v_pos)) - 1)], 1)], 0));
				var v_part2;
				var v_m;
				var v_p;
				v_p = ((v_part1 || (v_part1 = new p5HashRef({})))._hash_.p5hget('to'));
				if ( (Hash_pair).hasOwnProperty(v_delimiter) ) {
					(function () {
						v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, v_p], 0));
						v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
						v_delimiter = (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0));
						var v_open_delimiter;
						v_open_delimiter = (v_delimiter);
						(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
						v_closing_delimiter = (v_delimiter);
						if ( (Hash_pair).hasOwnProperty(v_delimiter) ) {
							v_closing_delimiter = (Hash_pair.p5hget(p5str(v_delimiter)))
						};
						v_part2 = (p5call(v_self, "string_interpolation_parse", [v_str, v_p, v_open_delimiter, v_closing_delimiter, 1], 0));
						if ( p5bool(v_part2) ) {}
						else {
							(function () { throw(p5context([v_part2], p5want)) })()
						};
					})();
				}
				else {
					v_part2 = (p5call(v_self, "string_interpolation_parse", [v_str, v_p, v_open_delimiter, v_closing_delimiter, 1], 0));
					if ( p5bool(v_part2) ) {}
					else {
						(function () { throw(p5context([v_part2], p5want)) })()
					};
				};
				v_p = ((v_part2 || (v_part2 = new p5HashRef({})))._hash_.p5hget('to'));
				var v_modifiers;
				v_modifiers = ('');
				v_m = (p5call(p5pkg["Perlito5::Grammar"], "ident", [v_str, v_p], 0));
				if ( p5bool(v_m) ) {
					v_modifiers = (p5pkg["Perlito5::Match"].flat([v_m], 0));
					(v_part2 || (v_part2 = new p5HashRef({})))._hash_.p5hset('to', ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')));
				};
				(v_part2 || (v_part2 = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'p5:s', 'arguments', (new p5ArrayRef(p5list_to_a(v_str_regex, p5pkg["Perlito5::Match"].flat([v_part2], 1), v_modifiers))), 'namespace', ''), 0)));
				return (p5context([v_part2], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "qr_quote_parse", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_delimiter;
				v_delimiter = (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) - 1), 1], 0));
				var v_open_delimiter;
				v_open_delimiter = (v_delimiter);
				var v_closing_delimiter;
				v_closing_delimiter = (v_delimiter);
				if ( (Hash_pair).hasOwnProperty(v_delimiter) ) {
					v_closing_delimiter = (Hash_pair.p5hget(p5str(v_delimiter)))
				};
				var v_part1;
				v_part1 = (p5call(v_self, "string_interpolation_parse", [v_str, v_pos, v_open_delimiter, v_closing_delimiter, 2], 0));
				if ( p5bool(v_part1) ) {}
				else {
					(function () { throw(p5context([v_part1], p5want)) })()
				};
				var v_str_regex;
				v_str_regex = ((v_part1 || (v_part1 = new p5HashRef({})))._hash_.p5hget('capture'));
				var v_p;
				v_p = ((v_part1 || (v_part1 = new p5HashRef({})))._hash_.p5hget('to'));
				var v_modifiers;
				v_modifiers = ('');
				var v_m;
				v_m = (p5call(p5pkg["Perlito5::Grammar"], "ident", [v_str, v_p], 0));
				if ( p5bool(v_m) ) {
					v_modifiers = (p5pkg["Perlito5::Match"].flat([v_m], 0));
					(v_part1 || (v_part1 = new p5HashRef({})))._hash_.p5hset('to', ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')));
				};
				(v_part1 || (v_part1 = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'p5:qr', 'arguments', (new p5ArrayRef([v_str_regex, v_modifiers])), 'namespace', ''), 0)));
				return (p5context([v_part1], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "qx_quote_parse", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_delimiter;
			v_delimiter = (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) - 1), 1], 0));
			var v_open_delimiter;
			v_open_delimiter = (v_delimiter);
			if ( (Hash_pair).hasOwnProperty(v_delimiter) ) {
					v_delimiter = (Hash_pair.p5hget(p5str(v_delimiter)))
				};
			var v_m;
			v_m = (p5call(v_self, "string_interpolation_parse", [v_str, v_pos, v_open_delimiter, v_delimiter, 0], 0));
			if ( p5bool(v_m) ) {
					(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'qx', 'arguments', (new p5ArrayRef(p5list_to_a(p5pkg["Perlito5::Match"].flat([v_m], 1)))), 'namespace', ''), 0)));
				};
			return (p5context([v_m], p5want));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "glob_quote_parse", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_delimiter;
			v_delimiter = (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) - 1), 1], 0));
			var v_open_delimiter;
			v_open_delimiter = (v_delimiter);
			if ( (Hash_pair).hasOwnProperty(v_delimiter) ) {
					v_delimiter = (Hash_pair.p5hget(p5str(v_delimiter)))
				};
			var v_m;
			v_m = (p5call(v_self, "string_interpolation_parse", [v_str, v_pos, v_open_delimiter, v_delimiter, 0], 0));
			if ( p5bool(v_m) ) {
					(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'glob', 'arguments', (new p5ArrayRef(p5list_to_a(p5pkg["Perlito5::Match"].flat([v_m], 1)))), 'namespace', ''), 0)));
				};
			return (p5context([v_m], p5want));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "tr_quote_parse", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_delimiter;
				v_delimiter = (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) - 1), 1], 0));
				var v_open_delimiter;
				v_open_delimiter = (v_delimiter);
				var v_closing_delimiter;
				v_closing_delimiter = (v_delimiter);
				if ( (Hash_pair).hasOwnProperty(v_delimiter) ) {
					v_closing_delimiter = (Hash_pair.p5hget(p5str(v_delimiter)))
				};
				var v_part1;
				v_part1 = (p5call(v_self, "string_interpolation_parse", [v_str, v_pos, v_open_delimiter, v_closing_delimiter, 1], 0));
				if ( p5bool(v_part1) ) {}
				else {
					(function () { throw(p5context([v_part1], p5want)) })()
				};
				var v_str_regex;
				v_str_regex = (p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', p5pkg["Perlito5::Grammar::String"].substr([v_str, v_pos, ((p5num((v_part1 || (v_part1 = new p5HashRef({})))._hash_.p5hget('to')) - p5num(v_pos)) - 1)], 1)], 0));
				var v_part2;
				var v_m;
				var v_p;
				v_p = ((v_part1 || (v_part1 = new p5HashRef({})))._hash_.p5hget('to'));
				if ( (Hash_pair).hasOwnProperty(v_delimiter) ) {
					(function () {
						v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, v_p], 0));
						v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
						v_delimiter = (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0));
						var v_open_delimiter;
						v_open_delimiter = (v_delimiter);
						(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
						v_closing_delimiter = (v_delimiter);
						if ( (Hash_pair).hasOwnProperty(v_delimiter) ) {
							v_closing_delimiter = (Hash_pair.p5hget(p5str(v_delimiter)))
						};
						v_part2 = (p5call(v_self, "string_interpolation_parse", [v_str, v_p, v_open_delimiter, v_closing_delimiter, 1], 0));
						if ( p5bool(v_part2) ) {}
						else {
							(function () { throw(p5context([v_part2], p5want)) })()
						};
					})();
				}
				else {
					v_part2 = (p5call(v_self, "string_interpolation_parse", [v_str, v_p, v_open_delimiter, v_closing_delimiter, 1], 0));
					if ( p5bool(v_part2) ) {}
					else {
						(function () { throw(p5context([v_part2], p5want)) })()
					};
				};
				v_p = ((v_part2 || (v_part2 = new p5HashRef({})))._hash_.p5hget('to'));
				var v_modifiers;
				v_modifiers = ('');
				v_m = (p5call(p5pkg["Perlito5::Grammar"], "ident", [v_str, v_p], 0));
				if ( p5bool(v_m) ) {
					v_modifiers = (p5pkg["Perlito5::Match"].flat([v_m], 0));
					(v_part2 || (v_part2 = new p5HashRef({})))._hash_.p5hset('to', ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')));
				};
				(v_part2 || (v_part2 = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'p5:tr', 'arguments', (new p5ArrayRef(p5list_to_a(v_str_regex, p5pkg["Perlito5::Match"].flat([v_part2], 1), v_modifiers))), 'namespace', ''), 0)));
				return (p5context([v_part2], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "string_interpolation_parse", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_open_delimiter;
			v_open_delimiter = (List__.p5aget(3));
			var v_delimiter;
			v_delimiter = (List__.p5aget(4));
			var v_interpolate;
			v_interpolate = (List__.p5aget(5));
			var v_p;
			v_p = (v_pos);
			var v_balanced;
			v_balanced = (p5and(v_open_delimiter, function () { return (Hash_pair).hasOwnProperty(v_open_delimiter) }));
			var List_args= [];
			var v_buf;
			v_buf = ('');
			p5while(function () {
						var v_c;
						v_c = (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0));
						var v_c2;
						v_c2 = (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_p) + 1), 1], 0));
						var v_m;
						var v_more;
						v_more = ('');
						if ( ((p5bool(v_balanced) && (p5str(v_c) == String.fromCharCode(92))) && ((p5str(v_c2) == p5str(v_open_delimiter)) || (p5str(v_c2) == p5str(v_delimiter)))) ) {
							(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
							v_c = (v_c2);
						}
						else if ( (p5bool(v_balanced) && (p5str(v_c) == p5str(v_open_delimiter))) ) {
							(v_buf = ((p5str(v_buf) + p5str(v_c))));
							(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
							v_m = (p5call(v_self, "string_interpolation_parse", [v_str, v_p, v_open_delimiter, v_delimiter, v_interpolate], 0));
							v_more = (v_delimiter);
						}
						else if ( (p5bool(v_interpolate) && ((p5str(v_c) == '$') || (p5str(v_c) == '@'))) ) {
							v_m = (p5call(p5pkg["Perlito5::Grammar::String"], "double_quoted_var", [v_str, v_p, v_delimiter, v_interpolate], 0));
						}
						else if ( (p5str(v_c) == String.fromCharCode(92)) ) {
							if ( (p5num(v_interpolate) == 2) ) {
								v_m = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_p, 'to', (p5num(v_p) + 2), 'capture', p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 2], 1)], 1))))));
							}
							else if ( (p5num(v_interpolate) == 1) ) {
								v_m = (p5call(p5pkg["Perlito5::Grammar::String"], "double_quoted_unescape", [v_str, v_p], 0));
							}
							else {
								v_m = (( (p5str(v_c2) == String.fromCharCode(92)) ? (new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_p, 'to', (p5num(v_p) + 2), 'capture', p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', String.fromCharCode(92)], 1))))) : ( (p5str(v_c2) == String.fromCharCode(39)) ? (new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_p, 'to', (p5num(v_p) + 2), 'capture', p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', String.fromCharCode(39)], 1))))) : 0)));
							};
						};
						if ( p5bool(v_m) ) {
							(function () {
								var v_obj;
								v_obj = (p5pkg["Perlito5::Match"].flat([v_m], 0));
								if ( (p5str(p5pkg["Perlito5::Grammar::String"].ref([v_obj], 0)) == 'Perlito5::AST::Val::Buf') ) {
									(v_buf = ((p5str(v_buf) + p5str((v_obj || (v_obj = new p5HashRef({})))._hash_.p5hget('buf')))));
									v_obj = (null);
								};
								if ( p5bool(v_obj) ) {
									if ( p5bool(p5pkg["Perlito5::Grammar::String"].length([v_buf], 0)) ) {
										List_args.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', v_buf], 1)));
										v_buf = ('');
									};
									List_args.p5push([v_obj]);
								};
								v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
								(v_buf = ((p5str(v_buf) + p5str(v_more))));
							})();
						}
						else {
							(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
							if ( ((p5str(v_c) == p5pkg["Perlito5::Grammar::String"].chr([10], 0)) || (p5str(v_c) == p5pkg["Perlito5::Grammar::String"].chr([13], 0))) ) {
								(function () {
									var v_m;
									v_m = (p5call(v_self, "here_doc", [v_str, v_p], 0));
									if ( (p5num(v_p) != p5num((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'))) ) {
										v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
									}
									else {
										(v_buf = ((p5str(v_buf) + p5str(v_c))));
									};
								})();
							}
							else {
								(v_buf = ((p5str(v_buf) + p5str(v_c))));
							};
						};
					}, function () { return p5and((p5num(v_p) < p5pkg["Perlito5::Grammar::String"].length([v_str], 0)), function () { return (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, p5pkg["Perlito5::Grammar::String"].length([v_delimiter], 0)], 0) != p5str(v_delimiter)) }) }, false, "");
			if ( p5bool(p5pkg["Perlito5::Grammar::String"].length([v_buf], 0)) ) {
					List_args.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', v_buf], 1)));
				};
			if ( (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, p5pkg["Perlito5::Grammar::String"].length([v_delimiter], 0)], 0) != p5str(v_delimiter)) ) {
					p5pkg["Perlito5::Grammar::String"].die([[('Can' + String.fromCharCode(39) + 't find string terminator ' + String.fromCharCode(39) + p5str(v_delimiter) + String.fromCharCode(39) + ' anywhere before EOF')]], null)
				};
			(v_p = ((p5num(v_p) + p5pkg["Perlito5::Grammar::String"].length([v_delimiter], 0))));
			var v_ast;
			if ( !( p5bool(List_args.length)) ) {
					v_ast = (p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', ''], 0));
				}
				else if ( (p5num(List_args.length) == 1) ) {
					v_ast = (List_args.p5aget(0));
				}
				else {
					v_ast = (p5call(p5pkg["Perlito5::AST::Apply"], "new", ['namespace', '', 'code', 'list:<.>', 'arguments', (new p5ArrayRef(List_args))], 0));
				};
			return ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_p, 'capture' : v_ast})));
		}, null));
		if (typeof p5pkg["Perlito5::Grammar::String"]["List_Here_doc"] == "undefined" ) { p5pkg["Perlito5::Grammar::String"]["List_Here_doc"]= [];};
		p5pkg["Perlito5::Grammar::String"]["List_Here_doc"];
		p5typeglob_set("Perlito5::Grammar::String", "here_doc_wanted", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_delimiter;
				var v_type;
				v_type = ('double_quote');
				var v_p;
				v_p = (v_pos);
				if ( (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 2], 0) == '<<') ) {
					(function () {
						(v_p = ((p5num(v_p) + 2)));
						var v_quote;
						v_quote = (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0));
						if ( ((p5str(v_quote) == String.fromCharCode(39)) || (p5str(v_quote) == '"')) ) {
							(function () {
								(v_p = ((p5num(v_p) + 1)));
								var v_m;
								v_m = (p5call(v_self, "string_interpolation_parse", [v_str, v_p, v_quote, v_quote, 0], 0));
								if ( p5bool(v_m) ) {
									v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
									v_delimiter = ((p5pkg["Perlito5::Match"].flat([v_m], p5want) || (p5pkg["Perlito5::Match"].flat([v_m], p5want) = new p5HashRef({})))._hash_.p5hget('buf'));
									v_type = (( (p5str(v_quote) == String.fromCharCode(39)) ? 'single_quote' : 'double_quote'));
								};
							})();
						}
						else {
							(function () {
								if ( (p5str(v_quote) == String.fromCharCode(92)) ) {
									(v_p = ((p5num(v_p) + 1)))
								};
								var v_m;
								v_m = (p5call(p5pkg["Perlito5::Grammar"], "ident", [v_str, v_p], 0));
								if ( p5bool(v_m) ) {
									v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
									v_delimiter = (p5pkg["Perlito5::Match"].flat([v_m], 0));
									v_type = (( (p5str(v_quote) == String.fromCharCode(92)) ? 'single_quote' : 'double_quote'));
								}
								else {
									p5pkg["Perlito5::Grammar::String"].die([['Use of bare << to mean <<"" is deprecated']], null);
								};
							})();
						};
					})();
				};
				if ( !( (v_delimiter != null)) ) {
					(function () { throw(p5context([0], p5want)) })();
				};
				var v_placeholder;
				v_placeholder = (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'list:<.>', 'namespace', '', 'arguments', (new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'list:<.>', 'namespace', '', 'arguments', (new p5ArrayRef([]))), 1))))), 0));
				p5pkg["Perlito5::Grammar::String"]["List_Here_doc"].p5push(p5list_to_a((new p5ArrayRef(p5list_to_a(v_type, (v_placeholder || (v_placeholder = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget_hash(0)._hash_.p5hget('arguments'), v_delimiter)))));
				return ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', v_p, 'capture', (new p5ArrayRef(['term', v_placeholder])))))));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "newline", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5context([p5and((String.fromCharCode(10) == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m;
									v_m = (v_MATCH);
									if ( !( ((String.fromCharCode(13) == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)) && p5bool((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))))) ) {
										v_MATCH = (v_m);
									};
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5context([p5and((String.fromCharCode(13) == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m;
									v_m = (v_MATCH);
									if ( !( ((String.fromCharCode(10) == p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)) && p5bool((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))))) ) {
										v_MATCH = (v_m);
									};
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "here_doc", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				if ( !( p5bool(p5pkg["Perlito5::Grammar::String"]["List_Here_doc"].length)) ) {
					(function () { throw((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos}))) })();
				};
				var v_p;
				v_p = (v_pos);
				var v_here;
				v_here = (p5pkg["Perlito5::Grammar::String"]["List_Here_doc"].shift());
				var v_type;
				v_type = ((v_here || (v_here = new p5ArrayRef([])))._array_.p5aget(0));
				var v_result;
				v_result = ((v_here || (v_here = new p5ArrayRef([])))._array_.p5aget(1));
				var v_delimiter;
				v_delimiter = ((v_here || (v_here = new p5ArrayRef([])))._array_.p5aget(2));
				if ( (p5str(v_type) == 'single_quote') ) {
					p5while(function () {
							if ( (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, p5pkg["Perlito5::Grammar::String"].length([v_delimiter], 0)], 0) == p5str(v_delimiter)) ) {
								(function () {
									(v_result || (v_result = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', p5pkg["Perlito5::Grammar::String"].substr([v_str, v_pos, (p5num(v_p) - p5num(v_pos))], 1)], 1)));
									(v_p = ((p5num(v_p) + p5pkg["Perlito5::Grammar::String"].length([v_delimiter], 0))));
									var v_m;
									v_m = (p5call(v_self, "newline", [v_str, v_p], 0));
									if ( ((p5num(v_p) >= p5pkg["Perlito5::Grammar::String"].length([v_str], 0)) || p5bool(v_m)) ) {
										if ( p5bool(v_m) ) {
											v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'))
										};
										(function () { throw((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : (p5num(v_p) - 1)}))) })();
									};
								})();
							};
							p5while(function () {
									(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
								}, function () { return p5and((p5num(v_p) < p5pkg["Perlito5::Grammar::String"].length([v_str], 0)), function () { return p5context([p5and((p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0) != p5pkg["Perlito5::Grammar::String"].chr([10], 0)), function () { return (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0) != p5pkg["Perlito5::Grammar::String"].chr([13], 0)) })], 0) }) }, false, "");
							p5while(function () {
									(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
								}, function () { return p5and((p5num(v_p) < p5pkg["Perlito5::Grammar::String"].length([v_str], 0)), function () { return p5context([p5or((p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0) == p5pkg["Perlito5::Grammar::String"].chr([10], 0)), function () { return (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0) == p5pkg["Perlito5::Grammar::String"].chr([13], 0)) })], 0) }) }, false, "");
						}, function () { return (p5num(v_p) < p5pkg["Perlito5::Grammar::String"].length([v_str], 0)) }, false, "");
				}
				else {
					(function () {
						var v_m;
						if ( (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, p5pkg["Perlito5::Grammar::String"].length([v_delimiter], 0)], 0) == p5str(v_delimiter)) ) {
							(v_p = ((p5num(v_p) + p5pkg["Perlito5::Grammar::String"].length([v_delimiter], 0))));
							v_m = (p5call(v_self, "newline", [v_str, v_p], 0));
							if ( ((p5num(v_p) >= p5pkg["Perlito5::Grammar::String"].length([v_str], 0)) || p5bool(v_m)) ) {
								(v_result || (v_result = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', ''], 1)));
								if ( p5bool(v_m) ) {
									v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'))
								};
								(function () { throw((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_p}))) })();
							};
						};
						v_m = (p5call(v_self, "string_interpolation_parse", [v_str, v_pos, '', (String.fromCharCode(10) + p5str(v_delimiter) + String.fromCharCode(10)), 1], 0));
						if ( p5bool(v_m) ) {
							(v_result || (v_result = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5pkg["Perlito5::Match"].flat([v_m], 1)));
							(v_result || (v_result = new p5ArrayRef([])))._array_.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', String.fromCharCode(10)], 1)));
							(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('to', ((p5num((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')) - 1)));
							(function () { throw(p5context([v_m], p5want)) })();
						};
					})();
				};
				return (p5pkg["Perlito5::Grammar::String"].die([[('Can' + String.fromCharCode(39) + 't find string terminator "' + p5str(v_delimiter) + '" anywhere before EOF')]], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "double_quoted_unescape", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_c2;
			v_c2 = (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) + 1), 1], 0));
			var v_m;
			if ( (Hash_escape_sequence).hasOwnProperty(v_c2) ) {
					v_m = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', (p5num(v_pos) + 2), 'capture', p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', p5pkg["Perlito5::Grammar::String"].chr([Hash_escape_sequence.p5hget(p5str(v_c2))], 1)], 1))))));
				}
				else if ( (p5str(v_c2) == 'c') ) {
					(function () {
						var v_c3;
						v_c3 = (((p5pkg["Perlito5::Grammar::String"].ord([p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) + 2), 1], 0)], 0) - p5pkg["Perlito5::Grammar::String"].ord(['A'], 0)) + 1));
						if ( (p5num(v_c3) < 0) ) {
							v_c3 = ((128 + p5num(v_c3)))
						};
						v_m = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', (p5num(v_pos) + 3), 'capture', p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', p5pkg["Perlito5::Grammar::String"].chr([v_c3], 1)], 1))))));
					})();
				}
				else if ( (p5str(v_c2) == 'x') ) {
					if ( (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) + 2), 1], 0) == '{') ) {
						(function () {
							var v_p;
							v_p = ((p5num(v_pos) + 3));
							p5while(function () {
									(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
								}, function () { return p5and((p5num(v_p) < p5pkg["Perlito5::Grammar::String"].length([v_str], 0)), function () { return (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0) != '}') }) }, false, "");
							var v_tmp;
							v_tmp = (p5pkg["Perlito5::Grammar::String"].oct([('0x' + p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) + 3), (p5num(v_p) - p5num(v_pos))], 0))], 0));
							v_m = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', (p5num(v_p) + 1), 'capture', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('arguments', (new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Val::Int"], "new", ['int', v_tmp], 1)))), 'code', 'chr'), 1))))));
						})();
					}
					else {
						(function () {
							var v_p;
							v_p = ((p5num(v_pos) + 2));
							if ( p5bool(Hash_hex.p5hget(p5str(p5pkg["Perlito5::Grammar::String"].uc([p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0)], 0)))) ) {
								(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p)
							};
							if ( p5bool(Hash_hex.p5hget(p5str(p5pkg["Perlito5::Grammar::String"].uc([p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0)], 0)))) ) {
								(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p)
							};
							var v_tmp;
							v_tmp = (p5pkg["Perlito5::Grammar::String"].oct([('0x' + p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) + 2), (p5num(v_p) - p5num(v_pos))], 0))], 0));
							v_m = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', v_p, 'capture', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('arguments', (new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Val::Int"], "new", ['int', v_tmp], 1)))), 'code', 'chr'), 1))))));
						})();
					};
				}
				else if ( (Hash_octal).hasOwnProperty(v_c2) ) {
					(function () {
						var v_p;
						v_p = ((p5num(v_pos) + 2));
						if ( p5bool(Hash_octal.p5hget(p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0))) ) {
							(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p)
						};
						if ( p5bool(Hash_octal.p5hget(p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0))) ) {
							(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p)
						};
						var v_tmp;
						v_tmp = (p5pkg["Perlito5::Grammar::String"].oct([p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) + 1), (p5num(v_p) - p5num(v_pos))], 0)], 0));
						v_m = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', v_p, 'capture', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('arguments', (new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Val::Int"], "new", ['int', v_tmp], 1)))), 'code', 'chr'), 1))))));
					})();
				}
				else {
					v_m = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', (p5num(v_pos) + 2), 'capture', p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', v_c2], 1))))));
				};
			return (p5context([v_m], p5want));
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "double_quoted_var_with_subscript", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_m_var;
				v_m_var = (List__.p5aget(1));
				var v_interpolate;
				v_interpolate = (List__.p5aget(2));
				var v_str;
				v_str = ((v_m_var || (v_m_var = new p5HashRef({})))._hash_.p5hget('str'));
				var v_pos;
				v_pos = ((v_m_var || (v_m_var = new p5HashRef({})))._hash_.p5hget('to'));
				var v_p;
				v_p = (v_pos);
				var v_m_index;
				if ( (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 3], 0) == '->[') ) {
					(function () {
						(v_p = ((p5num(v_p) + 3)));
						v_m_index = (p5call(p5pkg["Perlito5::Grammar::Expression"], "list_parse", [v_str, v_p], 0));
						if ( p5bool(v_m_index) ) {}
						else {
							p5pkg["Perlito5::Grammar::String"].die([['syntax error']], null)
						};
						var v_exp;
						v_exp = ((v_m_index || (v_m_index = new p5HashRef({})))._hash_.p5hget('capture'));
						v_p = ((v_m_index || (v_m_index = new p5HashRef({})))._hash_.p5hget('to'));
						if ( ((p5str(v_exp) == '*undef*') || (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0) != ']')) ) {
							p5pkg["Perlito5::Grammar::String"].die([['syntax error']], null)
						};
						(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
						(v_m_index || (v_m_index = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Call"], "new", p5list_to_a('method', 'postcircumfix:<[ ]>', 'invocant', (v_m_var || (v_m_var = new p5HashRef({})))._hash_.p5hget('capture'), 'arguments', v_exp), 0)));
						(v_m_index || (v_m_index = new p5HashRef({})))._hash_.p5hset('to', (v_p));
						(function () { throw(p5call(v_self, "double_quoted_var_with_subscript", [v_m_index, v_interpolate], p5want)) })();
					})();
				};
				if ( (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 3], 0) == '->{') ) {
					(v_pos = ((p5num(v_pos) + 2)));
					v_m_index = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", [v_str, v_pos], 0));
					if ( p5bool(v_m_index) ) {}
					else {
						p5pkg["Perlito5::Grammar::String"].die([['syntax error']], null)
					};
					(v_m_index || (v_m_index = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Call"], "new", p5list_to_a('method', 'postcircumfix:<{ }>', 'invocant', (v_m_var || (v_m_var = new p5HashRef({})))._hash_.p5hget('capture'), 'arguments', (p5pkg["Perlito5::Match"].flat([v_m_index], p5want) || (p5pkg["Perlito5::Match"].flat([v_m_index], p5want) = new p5ArrayRef([])))._array_.p5aget_array(2)._array_.p5aget(0)), 0)));
					(function () { throw(p5call(v_self, "double_quoted_var_with_subscript", [v_m_index, v_interpolate], p5want)) })();
				};
				if ( (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0) == '[') ) {
					if ( (p5num(v_interpolate) == 2) ) {
						(function () {
							var v_m;
							v_m = (p5or(p5or(p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", [v_str, (p5num(v_p) + 1)], 0), function () { return p5context([p5and((p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_p) + 1), 1], 0) == '-'), function () { return p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", [v_str, (p5num(v_p) + 2)], 0) })], 0) }), function () { return p5call(p5pkg["Perlito5::Grammar::Sigil"], "term_sigil", [v_str, (p5num(v_p) + 1)], 0) }));
							if ( p5bool(v_m) ) {}
							else {
								(function () { throw(p5context([v_m_var], p5want)) })()
							};
							if ( (p5pkg["Perlito5::Grammar::String"].substr([v_str, (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'), 1], 0) == ']') ) {}
							else {
								(function () { throw(p5context([v_m_var], p5want)) })()
							};
						})();
					};
					(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
					v_m_index = (p5call(p5pkg["Perlito5::Grammar::Expression"], "list_parse", [v_str, v_p], 0));
					if ( p5bool(v_m_index) ) {
						(function () {
							var v_exp;
							v_exp = ((v_m_index || (v_m_index = new p5HashRef({})))._hash_.p5hget('capture'));
							v_p = ((v_m_index || (v_m_index = new p5HashRef({})))._hash_.p5hget('to'));
							if ( ((p5str(v_exp) != '*undef*') && (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_p, 1], 0) == ']')) ) {
								(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
								(v_m_index || (v_m_index = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Index"], "new", p5list_to_a('obj', (v_m_var || (v_m_var = new p5HashRef({})))._hash_.p5hget('capture'), 'index_exp', v_exp), 0)));
								(v_m_index || (v_m_index = new p5HashRef({})))._hash_.p5hset('to', (v_p));
								(function () { throw(p5call(v_self, "double_quoted_var_with_subscript", [v_m_index, v_interpolate], p5want)) })();
							};
						})();
					};
				};
				v_m_index = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", [v_str, v_pos], 0));
				if ( p5bool(v_m_index) ) {
					(v_m_index || (v_m_index = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Lookup"], "new", p5list_to_a('obj', (v_m_var || (v_m_var = new p5HashRef({})))._hash_.p5hget('capture'), 'index_exp', (p5pkg["Perlito5::Match"].flat([v_m_index], p5want) || (p5pkg["Perlito5::Match"].flat([v_m_index], p5want) = new p5ArrayRef([])))._array_.p5aget_array(2)._array_.p5aget(0)), 0)));
					(function () { throw(p5call(v_self, "double_quoted_var_with_subscript", [v_m_index, v_interpolate], p5want)) })();
				};
				return (p5context([v_m_var], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::String", "double_quoted_var", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_delimiter;
				v_delimiter = (List__.p5aget(3));
				var v_interpolate;
				v_interpolate = (List__.p5aget(4));
				var v_c;
				v_c = (p5pkg["Perlito5::Grammar::String"].substr([v_str, v_pos, 1], 0));
				if ( ((p5str(v_c) == '$') && (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) + 1), 1], 0) == '{')) ) {
					(function () {
						var v_m;
						v_m = (p5call(p5pkg["Perlito5::Grammar::Sigil"], "term_sigil", [v_str, v_pos], 0));
						if ( p5bool(v_m) ) {}
						else {
							(function () { throw(p5context([v_m], p5want)) })()
						};
						var v_var;
						v_var = ((p5pkg["Perlito5::Match"].flat([v_m], p5want) || (p5pkg["Perlito5::Match"].flat([v_m], p5want) = new p5ArrayRef([])))._array_.p5aget(1));
						(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', (v_var));
						(function () { throw(p5context([v_m], p5want)) })();
					})();
				}
				else if ( ((p5str(v_c) == '$') && (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) + 1), p5pkg["Perlito5::Grammar::String"].length([v_delimiter], 0)], 0) != p5str(v_delimiter))) ) {
					(function () {
						var v_m;
						v_m = (p5call(p5pkg["Perlito5::Grammar::Sigil"], "term_sigil", [v_str, v_pos], 0));
						if ( p5bool(v_m) ) {}
						else {
							(function () { throw(p5context([v_m], p5want)) })()
						};
						(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget_array('capture')._array_.p5aget(1)));
						(function () { throw(p5call(v_self, "double_quoted_var_with_subscript", [v_m, v_interpolate], p5want)) })();
					})();
				}
				else if ( ((p5str(v_c) == '@') && (p5pkg["Perlito5::Grammar::String"].substr([v_str, (p5num(v_pos) + 1), p5pkg["Perlito5::Grammar::String"].length([v_delimiter], 0)], 0) != p5str(v_delimiter))) ) {
					(function () {
						var v_m;
						v_m = (p5call(p5pkg["Perlito5::Grammar::Sigil"], "term_sigil", [v_str, v_pos], 0));
						if ( p5bool(v_m) ) {}
						else {
							(function () { throw(p5context([v_m], p5want)) })()
						};
						(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget_array('capture')._array_.p5aget(1)));
						v_m = (p5call(v_self, "double_quoted_var_with_subscript", [v_m, v_interpolate], 0));
						(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'join', 'arguments', (new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', ' '], 1), (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('capture')))), 'namespace', ''), 0)));
						(function () { throw(p5context([v_m], p5want)) })();
					})();
				};
				return (p5context([0], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		1;
	})()
;
	(function () {
		null;
		p5make_package("Perlito5::Grammar::Sigil");
		// use Perlito5::Grammar::Precedence
;
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['$', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Sigil"], "term_sigil", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['@', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Sigil"], "term_sigil", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['%', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Sigil"], "term_sigil", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['&', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Sigil"], "term_sigil", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['*', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Sigil"], "term_sigil", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		var Hash_special_var = {};
		Hash_special_var = p5a_to_h(['$_', '', '$&', '', '$`', '', '$' + String.fromCharCode(39), '', '$+', '', '@+', '', '%+', '', '$.', '', '$/', '', '$|', '', '$,', '', '$' + String.fromCharCode(92), '', '$"', '', '$;', '', '$%', '', '$=', '', '$-', '', '@-', '', '%-', '', '$~', '', '$^', '', '$:', '', '$?', '', '$!', '', '%!', '', '$@', '', '$$', '', '$<', '', '$>', '', '$(', '', '$)', '', '$[', '', '$]', 'main', '@_', '', '*_', '', '*&', '', '*`', '', '*' + String.fromCharCode(39), '', '*+', '', '*.', '', '*/', '', '*|', '', '*,', '', '*' + String.fromCharCode(92), '', '*"', '', '*;', '', '*%', '', '*=', '', '*-', '', '*~', '', '*^', '', '*:', '', '*?', '', '*!', '', '*@', '', '*$', '', '*<', '', '*>', '', '*(', '', '*)', '', '*[', '', '*]', '', '*_', '', '**', '', '*#', '', '$#+', '', '$#-', '', '$#_', '']);
		p5typeglob_set("Perlito5::Grammar::Sigil", "term_special_var", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_len;
				v_len = (0);
				var v_s;
				v_s = (p5pkg["Perlito5::Grammar::Sigil"].substr([v_str, v_pos, 3], 0));
				if ( (p5str(v_s) == '$#[') ) {
					v_len = (2);
				}
				else if ( (Hash_special_var).hasOwnProperty(v_s) ) {
					v_len = (p5pkg["Perlito5::Grammar::Sigil"].length([v_s], 0));
				}
				else {
					v_s = (p5pkg["Perlito5::Grammar::Sigil"].substr([v_str, v_pos, 2], 0));
					if ( (Hash_special_var).hasOwnProperty(v_s) ) {
						v_len = (2);
					};
				};
				if ( p5bool(v_len) ) {
					(function () {
						var v_c0;
						v_c0 = (p5pkg["Perlito5::Grammar::Sigil"].substr([v_str, ((p5num(v_pos) + p5num(v_len)) - 1), 1], 0));
						var v_c1;
						v_c1 = (p5pkg["Perlito5::Grammar::Sigil"].substr([v_str, (p5num(v_pos) + p5num(v_len)), 1], 0));
						if ( ((((((p5str(v_c0) == '$') || (p5str(v_c0) == '@')) || (p5str(v_c0) == '%')) || (p5str(v_c0) == '*')) || (p5str(v_c0) == '&')) && ((((((((p5str(v_c1) == '$') || (p5str(v_c1) == '@')) || (p5str(v_c1) == '%')) || (p5str(v_c1) == '*')) || (p5str(v_c1) == '&')) || ((p5str(v_c1) >= 'a') && (p5str(v_c1) <= 'z'))) || ((p5str(v_c1) >= 'A') && (p5str(v_c1) <= 'Z'))) || ((p5str(v_c1) >= '0') && (p5str(v_c1) <= '9')))) ) {}
						else {
							(function () { throw((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', (p5num(v_pos) + p5num(v_len)), 'capture', (new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Var"], "new", p5list_to_a('sigil', p5pkg["Perlito5::Grammar::Sigil"].substr([v_s, 0, (p5num(v_len) - 1)], 1), 'namespace', Hash_special_var.p5hget(p5str(v_s)), 'name', p5pkg["Perlito5::Grammar::Sigil"].substr([v_s, (p5num(v_len) - 1), 1], 1)), 1))))))))) })();
						};
					})();
				};
				return (p5context([0], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		var Hash_sigil = {};
		Hash_sigil = {'$' : 1, '%' : 1, '@' : 1, '&' : 1, '*' : 1};
		p5typeglob_set("Perlito5::Grammar::Sigil", "term_sigil", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_c1;
				v_c1 = (p5pkg["Perlito5::Grammar::Sigil"].substr([v_str, v_pos, 1], 0));
				if ( (Hash_sigil).hasOwnProperty(v_c1) ) {}
				else {
					(function () { throw(p5context([], p5want)) })()
				};
				var v_p;
				v_p = ((p5num(v_pos) + 1));
				var v_sigil;
				v_sigil = (v_c1);
				if ( (p5pkg["Perlito5::Grammar::Sigil"].substr([v_str, v_pos, 2], 0) == '$#') ) {
					v_sigil = ('$#');
					(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
				};
				var v_m;
				v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, v_p], 0));
				v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
				v_c1 = (p5pkg["Perlito5::Grammar::Sigil"].substr([v_str, v_p, 1], 0));
				var v_q;
				v_q = ((p5num(v_p) + 1));
				if ( (p5str(v_c1) == '{') ) {
					(function () {
						var v_p;
						v_p = (v_q);
						v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, v_p], 0));
						v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
						v_m = (p5call(p5pkg["Perlito5::Grammar"], "optional_namespace_before_ident", [v_str, v_p], 0));
						if ( p5bool(v_m) ) {
							(function () {
								var v_namespace;
								v_namespace = (p5pkg["Perlito5::Match"].flat([v_m], 0));
								var v_pos;
								v_pos = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
								var v_n;
								v_n = (p5call(p5pkg["Perlito5::Grammar"], "var_name", p5list_to_a(v_str, (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')), 0));
								var v_name;
								if ( p5bool(v_n) ) {
									v_name = (p5pkg["Perlito5::Match"].flat([v_n], 0));
									v_pos = ((v_n || (v_n = new p5HashRef({})))._hash_.p5hget('to'));
								};
								if ( (p5bool(v_namespace) || p5bool(v_name)) ) {
									(function () {
										var v_spc;
										v_spc = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, v_pos], 0));
										(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Var"], "new", ['sigil', v_sigil, 'namespace', v_namespace, 'name', v_name], 0)));
										(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('to', ((v_spc || (v_spc = new p5HashRef({})))._hash_.p5hget('to')));
										v_m = (p5call(p5pkg["Perlito5::Grammar::String"], "double_quoted_var_with_subscript", [v_m], 0));
										(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('capture'))))));
										v_spc = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')), 0));
										var v_p;
										v_p = ((v_spc || (v_spc = new p5HashRef({})))._hash_.p5hget('to'));
										if ( (p5pkg["Perlito5::Grammar::Sigil"].substr([v_str, v_p, 1], 0) == '}') ) {
											(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('to', ((p5num(v_p) + 1)));
											(function () { throw(p5context([v_m], p5want)) })();
										};
									})();
								};
							})();
						};
						var v_caret;
						v_caret = (p5call(p5pkg["Perlito5::Grammar"], "caret_char", [v_str, v_p], 0));
						if ( p5bool(v_caret) ) {
							(function () {
								var v_p;
								v_p = ((v_caret || (v_caret = new p5HashRef({})))._hash_.p5hget('to'));
								var v_name;
								v_name = (p5pkg["Perlito5::Match"].flat([v_caret], 0));
								v_m = (p5call(p5pkg["Perlito5::Grammar"], "var_name", [v_str, v_p], 0));
								if ( p5bool(v_m) ) {
									v_name = ((p5str(v_name) + p5str(p5pkg["Perlito5::Match"].flat([v_m], 0))));
									v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
								};
								if ( (p5pkg["Perlito5::Grammar::Sigil"].substr([v_str, v_p, 1], 0) == '}') ) {
									(v_caret || (v_caret = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('arguments', (new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', v_name], 1)))), 'code', ('prefix:<' + p5str(v_sigil) + '>'), 'namespace', ''), 1))))));
									(v_caret || (v_caret = new p5HashRef({})))._hash_.p5hset('to', ((p5num(v_p) + 1)));
									(function () { throw(p5context([v_caret], p5want)) })();
								};
							})();
						};
						v_m = (p5call(p5pkg["Perlito5::Grammar::Expression"], "curly_parse", [v_str, v_p], 0));
						if ( p5bool(v_m) ) {
							(function () {
								var v_p;
								v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
								if ( (p5pkg["Perlito5::Grammar::Sigil"].substr([v_str, v_p, 1], 0) == '}') ) {
									(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('to', ((p5num((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')) + 1)));
									(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('arguments', (new p5ArrayRef(p5list_to_a((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('capture')))), 'code', ('prefix:<' + p5str(v_sigil) + '>'), 'namespace', ''), 1))))));
									(function () { throw(p5context([v_m], p5want)) })();
								};
							})();
						};
					})();
				};
				var v_caret;
				v_caret = (p5call(p5pkg["Perlito5::Grammar"], "caret_char", [v_str, v_p], 0));
				if ( p5bool(v_caret) ) {
					(function () {
						var v_name;
						v_name = (p5pkg["Perlito5::Match"].flat([v_caret], 0));
						(v_caret || (v_caret = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('arguments', (new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', v_name], 1)))), 'code', ('prefix:<' + p5str(v_sigil) + '>'), 'namespace', ''), 1))))));
						(function () { throw(p5context([v_caret], p5want)) })();
					})();
				};
				if ( (p5str(v_c1) == '$') ) {
					(function () {
						var v_m2;
						v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, (p5num(v_p) + 1)], 0));
						var v_p2;
						v_p2 = ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to'));
						var v_c2;
						v_c2 = (p5pkg["Perlito5::Grammar::Sigil"].substr([v_str, v_p2, 1], 0));
						if ( ((p5str(v_c2) != ',') && (p5str(v_c2) != ';')) ) {
							v_m = (p5call(v_self, "term_sigil", [v_str, v_p], 0));
							if ( p5bool(v_m) ) {
								(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('arguments', (new p5ArrayRef(p5list_to_a((v_m || (v_m = new p5HashRef({})))._hash_.p5hget_array('capture')._array_.p5aget(1)))), 'code', ('prefix:<' + p5str(v_sigil) + '>'), 'namespace', ''), 1))))));
								(function () { throw(p5context([v_m], p5want)) })();
							};
						};
					})();
				};
				v_m = (p5call(p5pkg["Perlito5::Grammar"], "optional_namespace_before_ident", [v_str, v_p], 0));
				if ( p5bool(v_m) ) {
					(function () {
						var v_namespace;
						v_namespace = (p5pkg["Perlito5::Match"].flat([v_m], 0));
						var v_n;
						v_n = (p5call(p5pkg["Perlito5::Grammar"], "var_name", p5list_to_a(v_str, (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')), 0));
						if ( p5bool(v_n) ) {
							(v_n || (v_n = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Var"], "new", p5list_to_a('sigil', v_sigil, 'namespace', v_namespace, 'name', p5pkg["Perlito5::Match"].flat([v_n], 1)), 1))))));
							(function () { throw(p5context([v_n], p5want)) })();
						};
						if ( p5bool(v_namespace) ) {
							(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Var"], "new", p5list_to_a('sigil', v_sigil, 'namespace', v_namespace, 'name', null), 1))))));
							(function () { throw(p5context([v_m], p5want)) })();
						};
					})();
				};
				return (p5call(v_self, "term_special_var", [v_str, v_pos], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		1;
	})()
;
	(function () {
		p5make_package("Perlito5::Grammar::Use");
		// use Perlito5::Grammar::Precedence
;
		// use Perlito5::Grammar
;
		// use strict
;
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['no', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Use"], "stmt_use", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['use', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Use"], "stmt_use", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		var Hash_Perlito_internal_module = {};
		Hash_Perlito_internal_module = {'strict' : 'Perlito5::strict', 'warnings' : 'Perlito5::warnings', 'utf8' : 'Perlito5::utf8', 'bytes' : 'Perlito5::bytes', 'encoding' : 'Perlito5::encoding', 'Carp' : 'Perlito5::Carp', 'Data::Dumper' : 'Perlito5::Dumper'};
		p5typeglob_set("Perlito5::Grammar::Use", "use_decl", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(('use' == p5pkg["Perlito5::Grammar::Use"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 3], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((3 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('no' == p5pkg["Perlito5::Grammar::Use"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Use", "stmt_use", p5sub(function (List__, p5want) {
			try {
				var v_grammar;
				v_grammar = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_MATCH;
				v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
				var v_tmp;
				v_tmp = (p5context([p5context([p5and(p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "use_decl", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('use_decl', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										var v_m2;
										v_m2 = (p5call(p5pkg["Perlito5::Grammar::Number"], "val_version", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
										if ( p5bool(v_m2) ) {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Number.val_version', (v_m2));
											return (p5context([1], p5want));
										}
										else {
											return (p5context([0], p5want));
										}
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Number.term_digit', (v_m2));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], p5want));
									})()], p5want) }));
								})()], 0), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'undef', 'namespace', '', 'arguments', (new p5ArrayRef([]))), 0)));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "full_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.full_ident', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									var v_m;
									v_m = (v_MATCH);
									if ( !( ((('-' == p5pkg["Perlito5::Grammar::Use"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)) && p5bool((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))))))) && p5bool((function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												if ( (v_MATCH)._hash_.hasOwnProperty('Perlito5::Grammar.ident') ) {
													(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_array('Perlito5::Grammar.ident')._array_.p5push([v_m2]);
												}
												else {
													(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.ident', ((new p5ArrayRef([v_m2]))));
												};
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()))) ) {
										v_MATCH = (v_m);
									};
									return (p5context([1], p5want));
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "list_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.list_parse', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									var v_list;
									v_list = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.list_parse')), 0));
									if ( (p5str(v_list) == '*undef*') ) {
										v_list = (null);
									}
									else {
										(function () {
											var v_m;
											v_m = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.list_parse'));
											var v_list_code;
											v_list_code = (p5pkg["Perlito5::Grammar::Use"].substr([v_str, (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('from'), (p5num((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')) - p5num((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('from')))], 0));
											var List_list= [];
											List_list = p5list_to_a((function (p5want) {
														var r;
														p5pkg["main"]["v_@"] = "";
														p5pkg["Perlito5"]["v_STRICT"] = 1;
														try {
															r = eval(p5pkg["Perlito5::Javascript2::Runtime"].perl5_to_js([p5str(v_list_code), "Perlito5::Grammar::Use", (new p5ArrayRef(p5list_to_a((new p5HashRef(p5a_to_h(p5list_to_a('$list_code', (new p5HashRef({'decl' : 'my'})), '$m', (new p5HashRef({'decl' : 'my'})), '@list', (new p5HashRef({'decl' : 'my'})))))), (new p5HashRef(p5a_to_h(p5list_to_a('$list', (new p5HashRef({'decl' : 'my'})))))), (new p5HashRef({})), (new p5HashRef(p5a_to_h(p5list_to_a('$pos1', (new p5HashRef({'decl' : 'my'})))))), (new p5HashRef(p5a_to_h(p5list_to_a('$MATCH', (new p5HashRef({'decl' : 'my'})), '$grammar', (new p5HashRef({'decl' : 'my'})), '$pos', (new p5HashRef({'decl' : 'my'})), '$str', (new p5HashRef({'decl' : 'my'})), '$tmp', (new p5HashRef({'decl' : 'my'})))))), (new p5HashRef(p5a_to_h(p5list_to_a('$AUTOLOAD', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5::Grammar::Use'})), '$_', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5::Grammar::Use'})), '$a', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5::Grammar::Use'})), '$b', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5::Grammar::Use'})), '%Perlito_internal_module', (new p5HashRef({'decl' : 'my'})))))), (new p5HashRef(p5a_to_h(p5list_to_a('$AUTOLOAD', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5'})), '$_', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5'})), '$a', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5'})), '$b', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5'})))))), (new p5HashRef(p5a_to_h(p5list_to_a('$!', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$"', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$,', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$/', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$;', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$?', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$@', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$AUTOLOAD', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$[', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$^O', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$^V', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$_', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$a', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$b', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$|', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '%ENV', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '%INC', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@#', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@ARGV', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@INC', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@_', (new p5HashRef({'decl' : 'my'}))))))))), "list"]))
														}
														catch(err) {
															if ( err instanceof p5_error || err instanceof Error ) {
																p5pkg["main"]["v_@"] = err;
																try {
																	p5pkg["main"]["v_@"] = p5pkg["main"]["v_@"] + "\n" + err.stack;
																}
																catch(err) { }
															}
															else {
																return(err);
															}
														}
														return r;
													})(1));
											v_list = ((new p5ArrayRef(List_list)));
										})();
									};
									var v_full_ident;
									v_full_ident = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.full_ident')), 0));
									(p5make_package("Perlito5")["v_PACKAGES"] || (p5make_package("Perlito5")["v_PACKAGES"] = new p5HashRef({})))._hash_.p5hset(p5str(v_full_ident), (1));
									var v_ast;
									v_ast = (p5call(p5pkg["Perlito5::AST::Use"], "new", p5list_to_a('code', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('use_decl')), 1), 'mod', v_full_ident, 'arguments', v_list), 0));
									p5pkg["Perlito5::Grammar::Use"].parse_time_eval([v_ast], null);
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (v_ast));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0) })], 0)], 0));
				return (( p5bool(v_tmp) ? v_MATCH : 0));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Use", "parse_time_eval", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.shift());
			var v_module_name;
			v_module_name = (p5call(v_self, "mod", [], 0));
			var v_use_or_not;
			v_use_or_not = (p5call(v_self, "code", [], 0));
			var v_arguments;
			v_arguments = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments'));
			var v_skip_import;
			v_skip_import = (p5and((v_arguments != null), function () { return (p5num((v_arguments || (v_arguments = new p5ArrayRef([])))._array_) == 0) }));
			if ( (v_arguments != null) ) {}
				else {
					v_arguments = ((new p5ArrayRef([])))
				};
			if ( (p5str(v_module_name) == 'feature') ) {}
				else if ( p5bool(p5make_package("Perlito5")["v_EXPAND_USE"]) ) {
					if ( (Hash_Perlito_internal_module).hasOwnProperty(v_module_name) ) {
						v_module_name = (Hash_Perlito_internal_module.p5hget(p5str(v_module_name)))
					};
					var v_filename;
					v_filename = (p5pkg["Perlito5::Grammar::Use"].modulename_to_filename([v_module_name], 0));
					p5pkg["Perlito5::Grammar::Use"]["require"]([p5str(v_filename), 0]);
					if ( !( p5bool(v_skip_import)) ) {
						if ( (p5str(v_use_or_not) == 'use') ) {
							if ( (p5code_lookup_by_name("Perlito5::Grammar::Use", (p5str(v_module_name) + '::import')) != null) ) {
								(p5make_package("Perlito5")["v_CALLER"] || (p5make_package("Perlito5")["v_CALLER"] = new p5ArrayRef([])))._array_.p5unshift(p5list_to_a((new p5ArrayRef([p5make_package("Perlito5")["v_PKG_NAME"]]))));
								p5call(v_module_name, "import", p5list_to_a((v_arguments || (v_arguments = new p5ArrayRef([])))._array_), null);
								return ((p5make_package("Perlito5")["v_CALLER"] || (p5make_package("Perlito5")["v_CALLER"] = new p5ArrayRef([])))._array_.shift());
							}
						}
						else if ( (p5str(v_use_or_not) == 'no') ) {
							if ( (p5code_lookup_by_name("Perlito5::Grammar::Use", (p5str(v_module_name) + '::unimport')) != null) ) {
								(p5make_package("Perlito5")["v_CALLER"] || (p5make_package("Perlito5")["v_CALLER"] = new p5ArrayRef([])))._array_.p5unshift(p5list_to_a((new p5ArrayRef([p5make_package("Perlito5")["v_PKG_NAME"]]))));
								p5call(v_module_name, "unimport", p5list_to_a((v_arguments || (v_arguments = new p5ArrayRef([])))._array_), null);
								return ((p5make_package("Perlito5")["v_CALLER"] || (p5make_package("Perlito5")["v_CALLER"] = new p5ArrayRef([])))._array_.shift());
							}
						}
					}
				}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Use", "emit_time_eval", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.shift());
			if ( (p5str(p5call(v_self, "mod", [], 0)) == 'strict') ) {
					if ( (p5str(p5call(v_self, "code", [], 0)) == 'use') ) {
						return (p5call(p5pkg["Perlito5::strict"], "import", [], p5want));
					}
					else if ( (p5str(p5call(v_self, "code", [], 0)) == 'no') ) {
						return (p5call(p5pkg["Perlito5::strict"], "unimport", [], p5want));
					}
				}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Use", "modulename_to_filename", p5sub(function (List__, p5want) {
			var v_s;
			v_s = (List__.shift());
			v_s = p5str(v_s).replace(/::/g, '/');
			return (p5context([(p5str(v_s) + '.pm')], p5want));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Use", "filename_lookup", p5sub(function (List__, p5want) {
			try {
				var v_filename;
				v_filename = (List__.shift());
				if ( (p5pkg["main"]["Hash_INC"]).hasOwnProperty(v_filename) ) {
					if ( p5bool(p5pkg["main"]["Hash_INC"].p5hget(p5str(v_filename))) ) {
						(function () { throw(p5context(['done'], p5want)) })()
					};
					p5pkg["Perlito5::Grammar::Use"].die([['Compilation failed in require']], null);
				};
				p5for_lex(function (v_prefix) {
						var v_realfilename;
						v_realfilename = ((p5str(v_prefix) + '/' + p5str(v_filename)));
						if ( p5bool(p5is_file(p5str(v_realfilename))) ) {
							p5pkg["main"]["Hash_INC"].p5hset(p5str(v_filename), (v_realfilename));
							(function () { throw(p5context(['todo'], p5want)) })();
						};
					}, p5list_to_a(p5pkg["main"]["List_INC"], '.'), false, "");
				return (p5pkg["Perlito5::Grammar::Use"].die([[('Can' + String.fromCharCode(39) + 't locate ' + p5str(v_filename) + ' in @INC ' + '(@INC contains ' + p5pkg["Perlito5::Grammar::Use"].join([' ', p5list_to_a(p5pkg["main"]["List_INC"])], 0) + ').')]], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Use", "expand_use", p5sub(function (List__, p5want) {
			try {
				var v_comp_units;
				v_comp_units = (List__.shift());
				var v_stmt;
				v_stmt = (List__.shift());
				var v_module_name;
				v_module_name = (p5call(v_stmt, "mod", [], 0));
				if ( (((p5str(v_module_name) == 'strict') || (p5str(v_module_name) == 'warnings')) || (p5str(v_module_name) == 'feature')) ) {
					(function () { throw(p5context([], p5want)) })()
				};
				if ( (Hash_Perlito_internal_module).hasOwnProperty(v_module_name) ) {
					v_module_name = (Hash_Perlito_internal_module.p5hget(p5str(v_module_name)))
				};
				var v_filename;
				v_filename = (p5pkg["Perlito5::Grammar::Use"].modulename_to_filename([v_module_name], 0));
				if ( (p5str(p5pkg["Perlito5::Grammar::Use"].filename_lookup([v_filename], 0)) == 'done') ) {
					(function () { throw(p5context([], p5want)) })()
				};
				var v_realfilename;
				v_realfilename = (p5pkg["main"]["Hash_INC"].p5hget(p5str(v_filename)));
				var v_source;
				v_source = (p5call_sub("Perlito5::IO", "slurp", [v_realfilename], 0));
				var v_m;
				v_m = (p5call(p5pkg["Perlito5::Grammar"], "exp_stmts", [v_source, 0], 0));
				if ( (p5num((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')) != p5pkg["Perlito5::Grammar::Use"].length([v_source], 0)) ) {
					p5pkg["Perlito5::Grammar::Use"].die([p5list_to_a('Syntax Error near ', (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'))], null)
				};
				return ((v_comp_units || (v_comp_units = new p5ArrayRef([])))._array_.p5push(p5list_to_a((p5pkg["Perlito5::Grammar::Use"].add_comp_unit(p5list_to_a((new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::CompUnit"], "new", p5list_to_a('name', 'main', 'body', p5pkg["Perlito5::Match"].flat([v_m], 1)), 1))))), p5want) || (p5pkg["Perlito5::Grammar::Use"].add_comp_unit(p5list_to_a((new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::CompUnit"], "new", p5list_to_a('name', 'main', 'body', p5pkg["Perlito5::Match"].flat([v_m], 1)), 1))))), p5want) = new p5ArrayRef([])))._array_)));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Use", "add_comp_unit", p5sub(function (List__, p5want) {
			var v_parse;
			v_parse = (List__.shift());
			var v_comp_units;
			v_comp_units = ((new p5ArrayRef([])));
			p5for_lex(function (v_comp_unit) {
						if ( (v_comp_unit != null) ) {
							if ( p5bool(p5call(v_comp_unit, "isa", ['Perlito5::AST::Use'], 0)) ) {
								p5pkg["Perlito5::Grammar::Use"].expand_use([v_comp_units, v_comp_unit], null);
							}
							else if ( p5bool(p5call(v_comp_unit, "isa", ['Perlito5::AST::CompUnit'], 0)) ) {
								p5for_lex(function (v_stmt) {
										if ( p5bool(p5call(v_stmt, "isa", ['Perlito5::AST::Use'], 0)) ) {
											p5pkg["Perlito5::Grammar::Use"].expand_use([v_comp_units, v_stmt], null);
										};
									}, p5list_to_a(p5call(v_comp_unit, "body", [], p5want)._array_), false, "");
							};
							(v_comp_units || (v_comp_units = new p5ArrayRef([])))._array_.p5push([v_comp_unit]);
						};
					}, p5list_to_a((v_parse || (v_parse = new p5ArrayRef([])))._array_), false, "");
			return (p5context([v_comp_units], p5want));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Use", "require", p5sub(function (List__, p5want) {
			try {
				var v_filename;
				v_filename = (List__.shift());
				var v_is_bareword;
				v_is_bareword = (List__.shift());
				if ( ((p5str(v_filename) >= '0') && (p5str(v_filename) <= '9999')) ) {
					(function () { throw(p5context([], p5want)) })();
				};
				if ( p5bool(v_is_bareword) ) {
					(p5make_package("Perlito5")["v_PACKAGES"] || (p5make_package("Perlito5")["v_PACKAGES"] = new p5HashRef({})))._hash_.p5hset(p5str(v_filename), (1));
					v_filename = (p5pkg["Perlito5::Grammar::Use"].modulename_to_filename([v_filename], 0));
				};
				if ( (p5str(p5pkg["Perlito5::Grammar::Use"].filename_lookup([v_filename], 0)) == 'done') ) {
					(function () { throw(p5context([], p5want)) })()
				};
				var v_result;
				v_result = ((function (p5want) {
							var r;
							p5pkg["main"]["v_@"] = "";
							p5pkg["Perlito5"]["v_STRICT"] = 0;
							try {
								r = eval(p5pkg["Perlito5::Javascript2::Runtime"].perl5_to_js([p5str(p5call_sub("Perlito5::IO", "slurp", p5list_to_a(p5pkg["main"]["Hash_INC"].p5hget(p5str(v_filename))), 0)), "Perlito5::Grammar::Use", (new p5ArrayRef(p5list_to_a((new p5HashRef(p5a_to_h(p5list_to_a('$filename', (new p5HashRef({'decl' : 'my'})), '$is_bareword', (new p5HashRef({'decl' : 'my'})), '$result', (new p5HashRef({'decl' : 'my'})))))), (new p5HashRef(p5a_to_h(p5list_to_a('$AUTOLOAD', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5::Grammar::Use'})), '$_', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5::Grammar::Use'})), '$a', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5::Grammar::Use'})), '$b', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5::Grammar::Use'})), '%Perlito_internal_module', (new p5HashRef({'decl' : 'my'})))))), (new p5HashRef(p5a_to_h(p5list_to_a('$AUTOLOAD', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5'})), '$_', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5'})), '$a', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5'})), '$b', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5'})))))), (new p5HashRef(p5a_to_h(p5list_to_a('$!', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$"', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$,', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$/', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$;', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$?', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$@', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$AUTOLOAD', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$[', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$^O', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$^V', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$_', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$a', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$b', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$|', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '%ENV', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '%INC', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@#', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@ARGV', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@INC', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@_', (new p5HashRef({'decl' : 'my'}))))))))), ""]))
							}
							catch(err) {
								if ( err instanceof p5_error || err instanceof Error ) {
									p5pkg["main"]["v_@"] = err;
									try {
										p5pkg["main"]["v_@"] = p5pkg["main"]["v_@"] + "\n" + err.stack;
									}
									catch(err) { }
								}
								else {
									return(err);
								}
							}
							return r;
						})(p5want));
				if ( p5bool(p5pkg["main"]["v_@"]) ) {
					p5pkg["main"]["Hash_INC"].p5hset(p5str(v_filename), (null));
					return (p5pkg["Perlito5::Grammar::Use"].die([[p5pkg["main"]["v_@"]]], p5want));
				}
				else if ( !( p5bool(v_result)) ) {
					(delete p5pkg["main"]["Hash_INC"].p5hget(p5str(v_filename)));
					if ( p5bool(p5pkg["main"]["v_@"]) ) {
						p5pkg["Perlito5::Grammar::Use"].warn([[p5pkg["main"]["v_@"]]], null)
					};
					return (p5pkg["Perlito5::Grammar::Use"].die([[(p5str(v_filename) + ' did not return true value')]], p5want));
				}
				else {
					(function () { throw(p5context([v_result], p5want)) })()
				}
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		1;
	})()
;
	(function () {
		p5make_package("Perlito5::Grammar::Block");
		// use Perlito5::Grammar::Expression
;
		// use strict
;
		if (typeof p5pkg["Perlito5::Grammar::Block"]["Hash_Named_block"] == "undefined" ) { p5pkg["Perlito5::Grammar::Block"]["Hash_Named_block"] = {};};
		p5pkg["Perlito5::Grammar::Block"]["Hash_Named_block"] = {'BEGIN' : 1, 'UNITCHECK' : 1, 'CHECK' : 1, 'INIT' : 1, 'END' : 1};
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['do', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Block"], "term_do", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['sub', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Block"], "term_anon_sub", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['{', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Block"], "term_block", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Statement"].add_statement(['sub', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Block"], "named_sub", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5for(p5make_package("Perlito5::Grammar::Block"), "v__", function () {
			p5pkg["Perlito5::Grammar::Statement"].add_statement([p5pkg["Perlito5::Grammar::Block"]["v__"], p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Block"], "term_block", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
			}, p5list_to_a(p5pkg["Perlito5::Grammar::Block"].keys([p5pkg["Perlito5::Grammar::Block"]["Hash_Named_block"]], 1)), false, "");
		p5typeglob_set("Perlito5::Grammar::Block", "term_block", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_p;
				v_p = (v_pos);
				var v_block_name;
				var v_m_name;
				v_m_name = (p5call(p5pkg["Perlito5::Grammar"], "ident", [v_str, v_p], 0));
				if ( p5bool(v_m_name) ) {
					v_p = ((v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hget('to'));
					v_block_name = (p5pkg["Perlito5::Match"].flat([v_m_name], 0));
				};
				var v_ws;
				v_ws = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", [v_str, v_p], 0));
				if ( p5bool(v_ws) ) {
					v_p = ((v_ws || (v_ws = new p5HashRef({})))._hash_.p5hget('to'));
				};
				if ( (p5pkg["Perlito5::Grammar::Block"].substr([v_str, v_p, 1], 0) == '{') ) {
					(function () {
						var v_m;
						v_m = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", [v_str, v_p], 0));
						if ( p5bool(v_m) ) {
							(function () {
								var v_block_start;
								v_block_start = (v_p);
								v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
								v_ws = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", [v_str, v_p], 0));
								if ( p5bool(v_ws) ) {
									v_p = ((v_ws || (v_ws = new p5HashRef({})))._hash_.p5hget('to'));
								};
								var v_continue;
								v_continue = (p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (new p5ArrayRef([]))), 0));
								var v_has_continue;
								v_has_continue = (0);
								if ( (!( p5bool(v_block_name)) && (p5pkg["Perlito5::Grammar::Block"].substr([v_str, v_p, 8], 0) == 'continue')) ) {
									(function () {
										(v_p = ((p5num(v_p) + 8)));
										v_ws = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", [v_str, v_p], 0));
										if ( p5bool(v_ws) ) {
											v_p = ((v_ws || (v_ws = new p5HashRef({})))._hash_.p5hget('to'));
										};
										var v_cont;
										v_cont = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", [v_str, v_p], 0));
										if ( p5bool(v_cont) ) {}
										else {
											p5pkg["Perlito5::Grammar::Block"].die([['syntax error']], null)
										};
										(v_continue || (v_continue = new p5HashRef({})))._hash_.p5hset('stmts', ((v_cont || (v_cont = new p5HashRef({})))._hash_.p5hget_array('capture')._array_.p5aget(2)));
										v_has_continue = (1);
										(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('to', ((v_cont || (v_cont = new p5HashRef({})))._hash_.p5hget('to')));
									})();
								};
								var v_v;
								v_v = (p5pkg["Perlito5::Match"].flat([v_m], 0));
								v_v = (p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(2), 'sig', (v_v || (v_v = new p5ArrayRef([])))._array_.p5aget(3)), 0));
								if ( (p5bool(v_has_continue) || p5bool(v_block_name)) ) {}
								else {
									v_v = (p5pkg["Perlito5::Grammar::Expression"].block_or_hash([v_v], 0))
								};
								if ( (p5str(p5pkg["Perlito5::Grammar::Block"].ref([v_v], 0)) == 'Perlito5::AST::Lit::Block') ) {
									if ( (p5str(v_block_name) == 'BEGIN') ) {
										(function (p5want) {
											var r;
											p5pkg["main"]["v_@"] = "";
											p5pkg["Perlito5"]["v_STRICT"] = 1;
											try {
												r = eval(p5pkg["Perlito5::Javascript2::Runtime"].perl5_to_js([p5pkg["Perlito5::Grammar::Block"].substr([v_str, v_block_start, (p5num((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to')) - p5num(v_block_start))], 0), "Perlito5::Grammar::Block", (new p5ArrayRef(p5list_to_a((new p5HashRef({})), (new p5HashRef({})), (new p5HashRef(p5a_to_h(p5list_to_a('$block_start', (new p5HashRef({'decl' : 'my'})), '$continue', (new p5HashRef({'decl' : 'my'})), '$has_continue', (new p5HashRef({'decl' : 'my'})), '$v', (new p5HashRef({'decl' : 'my'})))))), (new p5HashRef(p5a_to_h(p5list_to_a('$m', (new p5HashRef({'decl' : 'my'})))))), (new p5HashRef(p5a_to_h(p5list_to_a('$block_name', (new p5HashRef({'decl' : 'my'})), '$m_name', (new p5HashRef({'decl' : 'my'})), '$p', (new p5HashRef({'decl' : 'my'})), '$pos', (new p5HashRef({'decl' : 'my'})), '$self', (new p5HashRef({'decl' : 'my'})), '$str', (new p5HashRef({'decl' : 'my'})), '$ws', (new p5HashRef({'decl' : 'my'})))))), (new p5HashRef(p5a_to_h(p5list_to_a('$AUTOLOAD', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5::Grammar::Block'})), '$_', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5::Grammar::Block'})), '$a', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5::Grammar::Block'})), '$b', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5::Grammar::Block'})), '%Named_block', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5::Grammar::Block'})))))), (new p5HashRef(p5a_to_h(p5list_to_a('$AUTOLOAD', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5'})), '$_', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5'})), '$a', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5'})), '$b', (new p5HashRef({'decl' : 'our', 'namespace' : 'Perlito5'})))))), (new p5HashRef(p5a_to_h(p5list_to_a('$!', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$"', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$,', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$/', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$;', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$?', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$@', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$AUTOLOAD', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$[', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$^O', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$^V', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$_', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$a', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$b', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$|', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '%ENV', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '%INC', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@#', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@ARGV', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@INC', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@_', (new p5HashRef({'decl' : 'my'}))))))))), "void"]))
											}
											catch(err) {
												if ( err instanceof p5_error || err instanceof Error ) {
													p5pkg["main"]["v_@"] = err;
													try {
														p5pkg["main"]["v_@"] = p5pkg["main"]["v_@"] + "\n" + err.stack;
													}
													catch(err) { }
												}
												else {
													return(err);
												}
											}
											return r;
										})(null);
										(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'undef', 'namespace', '', 'arguments', (new p5ArrayRef([]))), 0)));
									}
									else {
										(v_v || (v_v = new p5HashRef({})))._hash_.p5hset('name', (v_block_name));
										(v_m || (v_m = new p5HashRef({})))._hash_.p5hset('capture', (v_v));
										(v_m || (v_m = new p5HashRef({})))._hash_.p5hget_hash('capture')._hash_.p5hset('continue', (v_continue));
									};
									(function () { throw(p5context([v_m], p5want)) })();
								};
							})();
						};
					})();
				};
				return (p5context([0], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Block", "named_sub_def", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "optional_namespace_before_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.optional_namespace_before_ident', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.ident', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Block"], "prototype", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Block.prototype', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Attribute"], "opt_attribute", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Attribute.opt_attribute', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5or(p5context([(function () {
								return (p5and(p5and(p5and(p5and(p5and(p5context([p5and(('{' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "exp_stmts", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.exp_stmts', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and(('}' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											p5pkg["Perlito5::Grammar::Block"].die([p5list_to_a('Syntax Error in sub ' + String.fromCharCode(39), p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.ident')), 1), String.fromCharCode(39))], null);
											return (p5context([1], p5want));
										})()], p5want));
									})()], p5want) }));
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('_tmp', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.exp_stmts')), 0)));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Statement"], "statement_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									p5pkg["Perlito5::Grammar::Block"].die([p5list_to_a('Illegal declaration of subroutine ' + String.fromCharCode(39), p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.ident')), 1), String.fromCharCode(39))], null);
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('_tmp', (null));
									return (p5context([1], p5want));
								})()], p5want));
							})()], p5want) }));
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							var v_name;
							v_name = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.ident')), 0));
							var v_sig;
							v_sig = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Block.prototype')), 0));
							if ( (p5str(v_sig) == '*undef*') ) {
								v_sig = (null)
							};
							var v_namespace;
							v_namespace = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.optional_namespace_before_ident')), 0));
							if ( p5bool(v_name) ) {
								(function () {
									if ( !( p5bool(v_namespace)) ) {
										v_namespace = (( (p5str(v_name) == '_') ? 'main' : p5make_package("Perlito5")["v_PKG_NAME"]));
									};
									var v_full_name;
									v_full_name = ((p5str(v_namespace) + '::' + p5str(v_name)));
									(p5make_package("Perlito5")["v_PROTO"] || (p5make_package("Perlito5")["v_PROTO"] = new p5HashRef({})))._hash_.p5hset(p5str(v_full_name), (v_sig));
								})();
							};
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Sub"], "new", p5list_to_a('name', v_name, 'namespace', v_namespace, 'sig', v_sig, 'block', (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('_tmp'), 'attributes', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Attribute.opt_attribute')), 1)), 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Block", "named_sub", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				if ( (p5pkg["Perlito5::Grammar::Block"].substr([v_str, v_pos, 3], 0) == 'sub') ) {}
				else {
					(function () { throw(p5context([], p5want)) })()
				};
				var v_ws;
				v_ws = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", [v_str, (p5num(v_pos) + 3)], 0));
				if ( p5bool(v_ws) ) {}
				else {
					(function () { throw(p5context([], p5want)) })()
				};
				var v_p;
				v_p = ((v_ws || (v_ws = new p5HashRef({})))._hash_.p5hget('to'));
				var v_m_name;
				v_m_name = (p5call(p5pkg["Perlito5::Grammar"], "ident", [v_str, v_p], 0));
				if ( p5bool(v_m_name) ) {}
				else {
					(function () { throw(p5context([], p5want)) })()
				};
				var v_block_name;
				v_block_name = (p5pkg["Perlito5::Match"].flat([v_m_name], 0));
				if ( (p5pkg["Perlito5::Grammar::Block"]["Hash_Named_block"]).hasOwnProperty(v_block_name) ) {
					(function () { throw(p5call(p5pkg["Perlito5::Grammar::Block"], "term_block", [v_str, v_p], p5want)) })();
				};
				return (p5call(p5pkg["Perlito5::Grammar::Block"], "named_sub_def", [v_str, v_p], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Block", "term_anon_sub", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5context([p5and(('sub' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 3], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((3 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Block"], "anon_sub_def", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Block.anon_sub_def', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Block.anon_sub_def')), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Block", "term_do", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5and(p5context([p5and(('do' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_tmp;
							v_tmp = (v_MATCH);
							v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
							var v_res;
							v_res = (p5context([p5and(('{' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
							return ((v_MATCH = (( p5bool(v_res) ? v_tmp : 0))));
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Statement"], "statement_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Statement.statement_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Do"], "new", p5list_to_a('block', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Statement.statement_parse')), 1)), 1))))));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Block", "args_sig", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_last_match_null;
							v_last_match_null = (0);
							var v_m;
							v_m = (v_MATCH);
							var v_to;
							v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							p5while(function () {
									if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
										v_last_match_null = ((p5num(v_last_match_null) + 1));
									}
									else {
										v_last_match_null = (0);
									};
									v_m = (v_MATCH);
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
								}, function () { return p5and(p5context([(function () {
								var v_pos1;
								v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
								return (p5or(p5or(p5or(p5or(p5or(p5or(p5or(p5or(p5or(p5context([(function () {
									return (p5and((';' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
								})()], 0), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
									return (p5context([p5and((String.fromCharCode(92) == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
									return (p5context([p5and(('[' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
									return (p5context([p5and((']' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
									return (p5context([p5and(('*' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
									return (p5context([p5and(('+' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
									return (p5context([p5and(('@' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
									return (p5context([p5and(('%' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
									return (p5context([p5and(('$' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
									return (p5context([p5and(('&' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
							v_MATCH = (v_m);
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
							return (p5context([1], p5want));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Block", "prototype", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5and(p5and(p5and(p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([p5and(('(' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "args_sig", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('args_sig', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and((')' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (('' + p5str(p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('args_sig')), 0)))));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ('*undef*'));
									return (p5context([1], p5want));
								})()], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Block", "anon_sub_def", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "prototype", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('prototype', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Attribute"], "opt_attribute", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Attribute.opt_attribute', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([p5and(('{' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "exp_stmts", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.exp_stmts', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(('}' == p5pkg["Perlito5::Grammar::Block"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									p5pkg["Perlito5::Grammar::Block"].die([['Syntax Error in anon sub']], null);
									return (p5context([1], p5want));
								})()], p5want));
							})()], p5want) }));
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							var v_sig;
							v_sig = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('prototype')), 0));
							if ( (p5str(v_sig) == '*undef*') ) {
								v_sig = (null)
							};
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Sub"], "new", p5list_to_a('name', null, 'namespace', null, 'sig', v_sig, 'block', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.exp_stmts')), 1), 'attributes', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Attribute.opt_attribute')), 1)), 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		1;
	})()
;
	(function () {
		p5make_package("Perlito5::Grammar::Space");
		// use Perlito5::Grammar::Precedence
;
		var Hash_space = {};
		Hash_space = p5a_to_h(['#', p5sub(function (List__, p5want) {
					var v_m;
					v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "to_eol", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), 0));
					return ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
				}, null), p5pkg["Perlito5::Grammar::Space"].chr([9], 1), p5sub(function (List__, p5want) {
					return (List__.p5aget(1));
				}, null), p5pkg["Perlito5::Grammar::Space"].chr([10], 1), p5sub(function (List__, p5want) {
					var v_str;
					v_str = (List__.p5aget(0));
					var v_pos;
					v_pos = (List__.p5aget(1));
					if ( (p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_pos, 1], 0) == p5pkg["Perlito5::Grammar::Space"].chr([13], 0)) ) {
							(function (_tmp) { v_pos = p5incr_(_tmp); return _tmp })(v_pos)
						};
					var v_m;
					v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "start_of_line", p5list_to_a(List__.p5aget(0), v_pos), 0));
					return ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
				}, null), p5pkg["Perlito5::Grammar::Space"].chr([12], 1), p5sub(function (List__, p5want) {
					return (List__.p5aget(1));
				}, null), p5pkg["Perlito5::Grammar::Space"].chr([13], 1), p5sub(function (List__, p5want) {
					var v_str;
					v_str = (List__.p5aget(0));
					var v_pos;
					v_pos = (List__.p5aget(1));
					if ( (p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_pos, 1], 0) == p5pkg["Perlito5::Grammar::Space"].chr([10], 0)) ) {
							(function (_tmp) { v_pos = p5incr_(_tmp); return _tmp })(v_pos)
						};
					var v_m;
					v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "start_of_line", p5list_to_a(List__.p5aget(0), v_pos), 0));
					return ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
				}, null), p5pkg["Perlito5::Grammar::Space"].chr([32], 1), p5sub(function (List__, p5want) {
					return (List__.p5aget(1));
				}, null)]);
		p5typeglob_set("Perlito5::Grammar::Space", "term_space", p5sub(function (List__, p5want) {
			try {
				var v_str;
				v_str = (List__.p5aget(0));
				var v_pos;
				v_pos = (List__.p5aget(1));
				var v_p;
				v_p = (v_pos);
				p5while(function () {
						v_p = ((Hash_space.p5hget(p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 1], 0)))([v_str, (p5num(v_p) + 1)], 0));
					}, function () { return (Hash_space).hasOwnProperty(p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 1], p5want)) }, false, "");
				if ( ((p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 7], 0) == '__END__') || (p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 8], 0) == '__DATA__')) ) {
					(function () { throw(p5pkg["Perlito5::Grammar::Space"].term_end([v_str, v_p], p5want)) })()
				};
				return ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', v_pos, 'to', v_p, 'capture', (new p5ArrayRef(['space', ' '])))))));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Space", "term_end", p5sub(function (List__, p5want) {
			var v_str;
			v_str = (List__.p5aget(0));
			var v_p;
			v_p = (List__.p5aget(1));
			var v_is_data;
			v_is_data = (0);
			if ( ((p5pkg["Perlito5::Grammar::Space"].substr([v_str, List__.p5aget(1), 7], 0) == '__END__') && (p5str(p5make_package("Perlito5")["v_PKG_NAME"]) == 'main')) ) {
					v_p = ((p5num(v_p) + 7));
					v_is_data = (1);
				}
				else if ( (p5pkg["Perlito5::Grammar::Space"].substr([v_str, List__.p5aget(1), 8], 0) == '__DATA__') ) {
					v_p = ((p5num(v_p) + 8));
					v_is_data = (1);
				};
			var v_m;
			v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "to_eol", [v_str, v_p], 0));
			v_p = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
			if ( (p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 1], 0) == p5pkg["Perlito5::Grammar::Space"].chr([10], 0)) ) {
					(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
					if ( (p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 1], 0) == p5pkg["Perlito5::Grammar::Space"].chr([13], 0)) ) {
						(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p)
					};
				}
				else if ( (p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 1], 0) == p5pkg["Perlito5::Grammar::Space"].chr([13], 0)) ) {
					(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p);
					if ( (p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 1], 0) == p5pkg["Perlito5::Grammar::Space"].chr([10], 0)) ) {
						(function (_tmp) { v_p = p5incr_(_tmp); return _tmp })(v_p)
					};
				};
			if ( p5bool(v_is_data) ) {
					p5global_hash("Perlito5", "DATA_SECTION").p5hset(p5str(p5make_package("Perlito5")["v_PKG_NAME"]), (p5pkg["Perlito5::Grammar::Space"].substr([List__.p5aget(0), v_p], 0)));
				};
			return ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', List__.p5aget(1), 'to', p5pkg["Perlito5::Grammar::Space"].length([List__.p5aget(0)], 1), 'capture', (new p5ArrayRef(['space', ' '])))))));
		}, null));
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['#', p5pkg["Perlito5::Grammar::Space"].term_space], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term([p5pkg["Perlito5::Grammar::Space"].chr([9], 1), p5pkg["Perlito5::Grammar::Space"].term_space], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term([p5pkg["Perlito5::Grammar::Space"].chr([10], 1), p5pkg["Perlito5::Grammar::Space"].term_space], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term([p5pkg["Perlito5::Grammar::Space"].chr([12], 1), p5pkg["Perlito5::Grammar::Space"].term_space], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term([p5pkg["Perlito5::Grammar::Space"].chr([13], 1), p5pkg["Perlito5::Grammar::Space"].term_space], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term([p5pkg["Perlito5::Grammar::Space"].chr([32], 1), p5pkg["Perlito5::Grammar::Space"].term_space], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['__END__', p5pkg["Perlito5::Grammar::Space"].term_end], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['__DATA__', p5pkg["Perlito5::Grammar::Space"].term_end], null);
		p5typeglob_set("Perlito5::Grammar::Space", "to_eol", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_last_match_null;
							v_last_match_null = (0);
							var v_m;
							v_m = (v_MATCH);
							var v_to;
							v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							p5while(function () {
									if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
										v_last_match_null = ((p5num(v_last_match_null) + 1));
									}
									else {
										v_last_match_null = (0);
									};
									v_m = (v_MATCH);
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
								}, function () { return p5and(p5context([p5and(p5context([(function () {
								var v_tmp;
								v_tmp = (v_MATCH);
								v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
								var v_res;
								v_res = (p5context([(function () {
											var v_pos1;
											v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
											return (p5or(p5context([(function () {
												return (p5and((String.fromCharCode(10) == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
											})()], 0), function () { return p5context([(function () {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
												return (p5context([p5and((String.fromCharCode(13) == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
											})()], p5want) }));
										})()], 0));
								return ((v_MATCH = (( p5bool(v_res) ? 0 : v_tmp))));
							})()], 0), function () { return p5context([p5and(('' != p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) })], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
							v_MATCH = (v_m);
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
							return (p5context([1], p5want));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Space", "pod_pod_begin", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5and(p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and((String.fromCharCode(10) == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and((String.fromCharCode(13) == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
									})()], p5want) }));
								})()], 0), function () { return p5context([p5and(('=cut' == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 4], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((4 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "to_eol", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5context([p5and(('' != p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "to_eol", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "pod_pod_begin", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Space", "pod_begin", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5and(p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and((String.fromCharCode(10) == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and((String.fromCharCode(13) == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
									})()], p5want) }));
								})()], 0), function () { return p5context([p5and(('=end' == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 4], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((4 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "to_eol", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5context([p5and(('' != p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "to_eol", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "pod_begin", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Space", "start_of_line", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::String"], "here_doc", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5or(p5context([(function () {
								return (p5and(p5context([p5and(('=' == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5or(p5or(p5context([(function () {
										return (p5and(p5context([p5and(('pod' == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 3], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((3 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
											var v_m2;
											v_m2 = (p5call(v_grammar, "pod_pod_begin", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(p5context([p5and(('head' == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 4], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((4 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
											var v_m2;
											v_m2 = (p5call(v_grammar, "pod_pod_begin", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], p5want) })], p5want));
									})()], 0) }), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(p5context([p5and(('begin' == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 5], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((5 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
											var v_m2;
											v_m2 = (p5call(v_grammar, "pod_begin", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], p5want) })], p5want));
									})()], 0) }), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(p5context([p5and(('for' == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 3], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((3 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
											var v_m2;
											v_m2 = (p5call(v_grammar, "pod_begin", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], p5want) })], p5want));
									})()], p5want) }));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5and(p5and(p5and(p5and(p5and(p5context([p5and(('#' == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_last_match_null;
									v_last_match_null = (0);
									var v_m;
									v_m = (v_MATCH);
									var v_to;
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									p5while(function () {
											if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
												v_last_match_null = ((p5num(v_last_match_null) + 1));
											}
											else {
												v_last_match_null = (0);
											};
											v_m = (v_MATCH);
											v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
										}, function () { return p5and(p5context([(function () {
										var v_pos1;
										v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
										return (p5or(p5context([(function () {
											return (p5and((' ' == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
										})()], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
											return (p5context([p5and((String.fromCharCode(9) == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
										})()], p5want) }));
									})()], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
									v_MATCH = (v_m);
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
									return (p5context([1], p5want));
								})()], 0) }), function () { return p5context([p5and(('line' == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 4], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((4 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									var v_last_match_null;
									v_last_match_null = (0);
									var v_m;
									v_m = (v_MATCH);
									var v_to;
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									var v_count;
									v_count = (0);
									p5while(function () {
											if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
												v_last_match_null = ((p5num(v_last_match_null) + 1));
											}
											else {
												v_last_match_null = (0);
											};
											v_m = (v_MATCH);
											v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
											v_count = ((p5num(v_count) + 1));
										}, function () { return p5and(p5context([(function () {
										var v_pos1;
										v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
										return (p5or(p5context([(function () {
											return (p5and((' ' == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
										})()], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
											return (p5context([p5and((String.fromCharCode(9) == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
										})()], p5want) }));
									})()], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
									v_MATCH = (v_m);
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
									return (p5context([(p5num(v_count) > 0)], p5want));
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Number"], "digits", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Number.digits', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_last_match_null;
									v_last_match_null = (0);
									var v_m;
									v_m = (v_MATCH);
									var v_to;
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									p5while(function () {
											if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
												v_last_match_null = ((p5num(v_last_match_null) + 1));
											}
											else {
												v_last_match_null = (0);
											};
											v_m = (v_MATCH);
											v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
										}, function () { return p5and(p5context([(function () {
										var v_pos1;
										v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
										return (p5or(p5context([(function () {
											return (p5and((' ' == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
										})()], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
											return (p5context([p5and((String.fromCharCode(9) == p5pkg["Perlito5::Grammar::Space"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
										})()], p5want) }));
									})()], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
									v_MATCH = (v_m);
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
									return (p5context([1], p5want));
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "to_eol", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									p5make_package("Perlito5")["v_LINE_NUMBER"] = ((0 + p5num(p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Number.digits')), 0))));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([1], p5want));
							})()], p5want) }));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Space", "ws", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.shift());
				var v_str;
				v_str = (List__.shift());
				var v_pos;
				v_pos = (List__.shift());
				var v_p;
				v_p = (v_pos);
				p5while(function () {
						v_p = ((Hash_space.p5hget(p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 1], 0)))([v_str, (p5num(v_p) + 1)], 0));
					}, function () { return (Hash_space).hasOwnProperty(p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 1], p5want)) }, false, "");
				if ( ((p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 7], 0) == '__END__') || (p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 8], 0) == '__DATA__')) ) {
					(function () { throw(p5pkg["Perlito5::Grammar::Space"].term_end([v_str, v_p], p5want)) })()
				};
				if ( (p5num(v_p) == p5num(v_pos)) ) {
					(function () { throw(p5context([0], p5want)) })();
				};
				return ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_p})));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Space", "opt_ws", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.shift());
				var v_str;
				v_str = (List__.shift());
				var v_pos;
				v_pos = (List__.shift());
				var v_p;
				v_p = (v_pos);
				p5while(function () {
						v_p = ((Hash_space.p5hget(p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 1], 0)))([v_str, (p5num(v_p) + 1)], 0));
					}, function () { return (Hash_space).hasOwnProperty(p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 1], p5want)) }, false, "");
				if ( ((p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 7], 0) == '__END__') || (p5pkg["Perlito5::Grammar::Space"].substr([v_str, v_p, 8], 0) == '__DATA__')) ) {
					(function () { throw(p5pkg["Perlito5::Grammar::Space"].term_end([v_str, v_p], p5want)) })()
				};
				return ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_p})));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		1;
	})()
;
	(function () {
		p5make_package("Perlito5::Grammar::Print");
		// use strict
;
		if (typeof p5pkg["Perlito5::Grammar::Print"]["Hash_Print"] == "undefined" ) { p5pkg["Perlito5::Grammar::Print"]["Hash_Print"] = {};};
		p5pkg["Perlito5::Grammar::Print"]["Hash_Print"] = {'print' : 1, 'printf' : 1, 'say' : 1, 'exec' : 1, 'system' : 1};
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['print', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Print"], "term_print", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['printf', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Print"], "term_print", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['say', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Print"], "term_print", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['exec', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Print"], "term_print", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['system', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Print"], "term_print", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5typeglob_set("Perlito5::Grammar::Print", "print_decl", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5or(p5or(p5or(p5context([(function () {
								return (p5and(('print' == p5pkg["Perlito5::Grammar::Print"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 5], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((5 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('printf' == p5pkg["Perlito5::Grammar::Print"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 6], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((6 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('say' == p5pkg["Perlito5::Grammar::Print"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 3], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((3 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('exec' == p5pkg["Perlito5::Grammar::Print"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 4], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((4 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('system' == p5pkg["Perlito5::Grammar::Print"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 6], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((6 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Print", "the_object", p5sub(function (List__, p5want) {
			try {
				var v_grammar;
				v_grammar = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_MATCH;
				v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
				var v_tmp;
				v_tmp = (p5context([p5context([p5and(p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5or(p5context([(function () {
								return (p5and(p5and(p5and(p5context([(function () {
									var v_tmp;
									v_tmp = (v_MATCH);
									v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
									var v_res;
									v_res = (p5context([p5and(('$' == p5pkg["Perlito5::Grammar::Print"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
									return ((v_MATCH = (( p5bool(v_res) ? v_tmp : 0))));
								})()], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Sigil"], "term_sigil", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Sigil.term_sigil', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_tmp;
									v_tmp = (v_MATCH);
									v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
									var v_res;
									v_res = (p5context([p5and(('+' == p5pkg["Perlito5::Grammar::Print"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
									return ((v_MATCH = (( p5bool(v_res) ? 0 : v_tmp))));
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Sigil.term_sigil')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Sigil.term_sigil')), p5want) = new p5ArrayRef([])))._array_.p5aget(1)));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5context([(function () {
									var v_tmp;
									v_tmp = (v_MATCH);
									v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
									var v_res;
									v_res = (p5context([p5and(('{' == p5pkg["Perlito5::Grammar::Print"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
									return ((v_MATCH = (( p5bool(v_res) ? v_tmp : 0))));
								})()], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.term_curly', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar::Expression.term_curly')._hash_.p5hget_array('capture')._array_.p5aget(2)), 0)));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "typeglob", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('typeglob', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									var v_tmp;
									v_tmp = (v_MATCH);
									v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
									var v_res;
									v_res = (p5context([p5and(('(' == p5pkg["Perlito5::Grammar::Print"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
									return ((v_MATCH = (( p5bool(v_res) ? 0 : v_tmp))));
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('typeglob')), 0)));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							var v_pos;
							v_pos = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							var v_m;
							v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('str'), v_pos), 0));
							if ( p5bool(v_m) ) {
								v_pos = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'))
							};
							var v_s;
							v_s = (p5pkg["Perlito5::Grammar::Print"].substr([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('str'), v_pos, 1], 0));
							var v_s2;
							v_s2 = (p5pkg["Perlito5::Grammar::Print"].substr([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('str'), v_pos, 2], 0));
							if ( (((((p5str(v_s) == ',') || (p5str(v_s) == '?')) || (p5str(v_s2) == '->')) || (p5str(v_s) == '[')) || (p5str(v_s) == '{')) ) {
								(function () { throw(p5context([], p5want)) })();
							};
							if ( (p5str(v_s) == '+') ) {
								(function () {
									var v_m;
									v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('str'), (p5num(v_pos) + 1)), 0));
									if ( p5bool(v_m) ) {
										(function () { throw(p5context([], p5want)) })();
									};
								})();
							}
							else {
								(function () {
									var v_m;
									v_m = (p5call(p5pkg["Perlito5::Grammar::Precedence"], "op_parse", p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('str'), v_pos, 1), 0));
									var v_next_op;
									v_next_op = (( p5bool(v_m) ? (p5pkg["Perlito5::Match"].flat([v_m], p5want) || (p5pkg["Perlito5::Match"].flat([v_m], p5want) = new p5ArrayRef([])))._array_.p5aget(1) : ''));
									var v_is_infix;
									v_is_infix = (p5pkg["Perlito5::Grammar::Precedence"].is_fixity_type(['infix', v_next_op], 0));
									if ( p5bool(v_is_infix) ) {
										(function () { throw(p5context([], p5want)) })()
									};
								})();
							};
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
				return (( p5bool(v_tmp) ? v_MATCH : 0));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Print", "typeglob", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_p;
				v_p = (v_pos);
				var v_m_namespace;
				v_m_namespace = (p5call(p5pkg["Perlito5::Grammar"], "optional_namespace_before_ident", [v_str, v_p], 0));
				var v_namespace;
				v_namespace = (p5pkg["Perlito5::Match"].flat([v_m_namespace], 0));
				v_p = ((v_m_namespace || (v_m_namespace = new p5HashRef({})))._hash_.p5hget('to'));
				var v_m_name;
				v_m_name = (p5call(p5pkg["Perlito5::Grammar"], "ident", [v_str, v_p], 0));
				if ( !( p5bool(v_m_name)) ) {
					if ( p5bool(v_namespace) ) {
						(v_m_namespace || (v_m_namespace = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Var"], "new", ['sigil', '::', 'name', '', 'namespace', v_namespace], 0)));
						(function () { throw(p5context([v_m_namespace], p5want)) })();
					};
					(function () { throw(p5context([], p5want)) })();
				};
				var v_name;
				v_name = (p5pkg["Perlito5::Match"].flat([v_m_name], 0));
				v_p = ((v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hget('to'));
				if ( (p5pkg["Perlito5::Grammar::Print"].substr([v_str, v_p, 2], 0) == '::') ) {
					(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('to', ((p5num(v_p) + 2)));
					(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Var"], "new", ['sigil', '::', 'name', '', 'namespace', (p5str(v_namespace) + '::' + p5str(v_name))], 0)));
					(function () { throw(p5context([v_m_name], p5want)) })();
				};
				var v_effective_name;
				v_effective_name = ((p5str(p5or(v_namespace, function () { return p5make_package("Perlito5")["v_PKG_NAME"] })) + '::' + p5str(v_name)));
				if ( ((p5make_package("Perlito5")["v_PROTO"])._hash_.hasOwnProperty(v_effective_name) || p5sub_exists(p5str(v_effective_name), 'Perlito5::Grammar::Print')) ) {
					(function () { throw(p5context([], p5want)) })();
				};
				if ( ((!( p5bool(v_namespace)) || (p5str(v_namespace) == 'CORE')) && (p5make_package("Perlito5")["v_CORE_PROTO"])._hash_.hasOwnProperty(('CORE::' + p5str(v_name)))) ) {
					(function () { throw(p5context([], p5want)) })();
				};
				var v_full_name;
				v_full_name = (v_name);
				if ( p5bool(v_namespace) ) {
					v_full_name = ((p5str(v_namespace) + '::' + p5str(v_name)))
				};
				(v_m_name || (v_m_name = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Var"], "new", ['sigil', '::', 'name', '', 'namespace', v_full_name], 0)));
				return (p5context([v_m_name], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Print", "print_ast", p5sub(function (List__, p5want) {
			var v_decl;
			var v_the_object;
			var v_expr;
			(function () {
					var tmp101 = p5list_to_a(List__);
					var tmp102 = tmp101.slice(0);
					v_decl = tmp101.shift();
					v_the_object = tmp101.shift();
					v_expr = tmp101.shift();
					return tmp102
				})();
			return (p5call(p5pkg["Perlito5::AST::Apply"], "new", ['namespace', '', 'code', v_decl, 'special_arg', v_the_object, 'arguments', v_expr], p5want));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Print", "term_print", p5sub(function (List__, p5want) {
			try {
				var v_grammar;
				v_grammar = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_MATCH;
				v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
				var v_tmp;
				v_tmp = (p5context([p5context([p5and(p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "print_decl", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('print_decl', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5and(p5and(p5and(p5and(p5context([p5and(('(' == p5pkg["Perlito5::Grammar::Print"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "the_object", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('the_object', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "list_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.list_parse', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and((')' == p5pkg["Perlito5::Grammar::Print"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									var v_list;
									v_list = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.list_parse')), 0));
									if ( !( p5bool(p5pkg["Perlito5::Grammar::Print"].ref([v_list], 0))) ) {
										(function () { throw(p5context([], p5want)) })()
									};
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Grammar::Print"].print_ast(p5list_to_a(p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('print_decl')), 1), p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('the_object')), 1), p5pkg["Perlito5::Grammar::Expression"].expand_list([v_list], 1)), 1))))));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "the_object", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('the_object', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "list_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.list_parse', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									var v_list;
									v_list = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.list_parse')), 0));
									if ( !( p5bool(p5pkg["Perlito5::Grammar::Print"].ref([v_list], 0))) ) {
										(function () { throw(p5context([], p5want)) })()
									};
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Grammar::Print"].print_ast(p5list_to_a(p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('print_decl')), 1), p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('the_object')), 1), p5pkg["Perlito5::Grammar::Expression"].expand_list([v_list], 1)), 1))))));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0) })], 0)], 0));
				return (( p5bool(v_tmp) ? v_MATCH : 0));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		1;
	})()
;
	(function () {
		p5make_package("Perlito5::Grammar::Map");
		// use strict
;
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['map', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Map"], "term_map_or_grep", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['grep', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Map"], "term_map_or_grep", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['sort', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Map"], "term_sort", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5typeglob_set("Perlito5::Grammar::Map", "map_or_grep", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(('map' == p5pkg["Perlito5::Grammar::Map"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 3], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((3 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('grep' == p5pkg["Perlito5::Grammar::Map"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 4], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((4 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Map", "term_map_or_grep", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "map_or_grep", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('map_or_grep', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.term_curly', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "list_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.list_parse', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('map_or_grep')), 1), 'special_arg', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar::Expression.term_curly')._hash_.p5hget_array('capture')._array_.p5aget(2)), 1), 'arguments', p5pkg["Perlito5::Grammar::Expression"].expand_list(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar::Expression.list_parse')._hash_.p5hget('capture')), 1), 'namespace', ''), 1))))));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5and(p5and(p5and(p5context([p5and(('(' == p5pkg["Perlito5::Grammar::Map"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.term_curly', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "list_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.list_parse', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and((')' == p5pkg["Perlito5::Grammar::Map"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('map_or_grep')), 1), 'special_arg', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar::Expression.term_curly')._hash_.p5hget_array('capture')._array_.p5aget(2)), 1), 'arguments', p5pkg["Perlito5::Grammar::Expression"].expand_list(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar::Expression.list_parse')._hash_.p5hget('capture')), 1), 'namespace', ''), 1))))));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Map", "term_sort", p5sub(function (List__, p5want) {
			try {
				var v_grammar;
				v_grammar = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_MATCH;
				v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
				var v_tmp;
				v_tmp = (p5context([p5context([p5and(p5and(p5context([p5and(('sort' == p5pkg["Perlito5::Grammar::Map"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 4], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((4 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5and(p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5or(p5context([(function () {
										return (p5and(p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.term_curly', (v_m2));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('_tmp', (p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar::Expression.term_curly')._hash_.p5hget_array('capture')._array_.p5aget(2)), 0)));
											return (p5context([1], p5want));
										})()], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "full_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.full_ident', (v_m2));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											var v_name;
											v_name = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.full_ident')), 0));
											if ( (p5bool((p5make_package("Perlito5")["v_CORE_PROTO"] || (p5make_package("Perlito5")["v_CORE_PROTO"] = new p5HashRef({})))._hash_.p5hget(p5str(v_name))) || p5bool((p5make_package("Perlito5")["v_CORE_PROTO"] || (p5make_package("Perlito5")["v_CORE_PROTO"] = new p5HashRef({})))._hash_.p5hget(('CORE::' + p5str(v_name))))) ) {
												(function () { throw(p5context([], p5want)) })()
											};
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('_tmp', (v_name));
											return (p5context([1], p5want));
										})()], p5want) })], p5want));
									})()], 0) }), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(p5and(p5context([(function () {
											var v_tmp;
											v_tmp = (v_MATCH);
											v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
											var v_res;
											v_res = (p5context([p5and(('$' == p5pkg["Perlito5::Grammar::Map"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
											return ((v_MATCH = (( p5bool(v_res) ? v_tmp : 0))));
										})()], 0), function () { return p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar::Sigil"], "term_sigil", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Sigil.term_sigil', (v_m2));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0) }), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											var v_var;
											v_var = ((p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Sigil.term_sigil')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Sigil.term_sigil')), p5want) = new p5ArrayRef([])))._array_.p5aget(1));
											if ( (p5str(p5pkg["Perlito5::Grammar::Map"].ref([v_var], 0)) != 'Perlito5::AST::Var') ) {
												(function () { throw(p5context([], p5want)) })()
											};
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('_tmp', (v_var));
											return (p5context([1], p5want));
										})()], p5want) })], p5want));
									})()], p5want) }));
								})()], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "list_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.list_parse', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'sort', 'special_arg', (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('_tmp'), 'arguments', p5pkg["Perlito5::Grammar::Expression"].expand_list(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar::Expression.list_parse')._hash_.p5hget('capture')), 1), 'namespace', ''), 1))))));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5and(p5and(p5and(p5context([p5and(('(' == p5pkg["Perlito5::Grammar::Map"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5or(p5context([(function () {
										return (p5and(p5and(p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "full_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar.full_ident', (v_m2));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0), function () { return p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0) }), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											var v_name;
											v_name = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar.full_ident')), 0));
											if ( (p5bool((p5make_package("Perlito5")["v_CORE_PROTO"] || (p5make_package("Perlito5")["v_CORE_PROTO"] = new p5HashRef({})))._hash_.p5hget(p5str(v_name))) || p5bool((p5make_package("Perlito5")["v_CORE_PROTO"] || (p5make_package("Perlito5")["v_CORE_PROTO"] = new p5HashRef({})))._hash_.p5hget(('CORE::' + p5str(v_name))))) ) {
												(function () { throw(p5context([], p5want)) })()
											};
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('_tmp', (v_name));
											return (p5context([1], p5want));
										})()], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_curly", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.term_curly', (v_m2));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('_tmp', (p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar::Expression.term_curly')._hash_.p5hget_array('capture')._array_.p5aget(2)), 0)));
											return (p5context([1], p5want));
										})()], p5want) })], p5want));
									})()], 0) }), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(p5and(p5context([(function () {
											var v_tmp;
											v_tmp = (v_MATCH);
											v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
											var v_res;
											v_res = (p5context([p5and(('$' == p5pkg["Perlito5::Grammar::Map"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
											return ((v_MATCH = (( p5bool(v_res) ? v_tmp : 0))));
										})()], 0), function () { return p5context([(function () {
											var v_m2;
											v_m2 = (p5call(p5pkg["Perlito5::Grammar::Sigil"], "term_sigil", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Sigil.term_sigil', (v_m2));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})()], 0) }), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
											var v_var;
											v_var = ((p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Sigil.term_sigil')), p5want) || (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Sigil.term_sigil')), p5want) = new p5ArrayRef([])))._array_.p5aget(1));
											if ( (p5str(p5pkg["Perlito5::Grammar::Map"].ref([v_var], 0)) != 'Perlito5::AST::Var') ) {
												(function () { throw(p5context([], p5want)) })()
											};
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('_tmp', (v_var));
											return (p5context([1], p5want));
										})()], p5want) })], p5want));
									})()], p5want) }));
								})()], 0) }), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "list_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.list_parse', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([p5and((')' == p5pkg["Perlito5::Grammar::Map"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'sort', 'special_arg', (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('_tmp'), 'arguments', p5pkg["Perlito5::Grammar::Expression"].expand_list(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('Perlito5::Grammar::Expression.list_parse')._hash_.p5hget('capture')), 1), 'namespace', ''), 1))))));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0) })], 0)], 0));
				return (( p5bool(v_tmp) ? v_MATCH : 0));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		1;
	})()
;
	(function () {
		p5make_package("Perlito5::Grammar::Number");
		// use strict
;
		// use Perlito5::Grammar::Precedence
;
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['.', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['0', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['1', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['2', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['3', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['4', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['5', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['6', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['7', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['8', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5pkg["Perlito5::Grammar::Precedence"].add_term(['9', p5sub(function (List__, p5want) {
	return (p5call(p5pkg["Perlito5::Grammar::Number"], "term_digit", p5list_to_a(List__.p5aget(0), List__.p5aget(1)), p5want));
}, null)], null);
		p5typeglob_set("Perlito5::Grammar::Number", "term_digit", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5or(p5or(p5context([(function () {
								return (p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Number"], "val_octal", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Number.val_octal', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Number.val_octal')), 1))))));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Number"], "val_vstring", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Number.val_vstring', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Number.val_vstring')), 1))))));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Number"], "val_num", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Number.val_num', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Number.val_num')), 1))))));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Number"], "val_int", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Number.val_int', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((new p5ArrayRef(p5list_to_a('term', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Number.val_int')), 1))))));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Number", "digit", p5sub(function (List__, p5want) {
			return (( p5bool((p5str(p5pkg["Perlito5::Grammar::Number"].substr([List__.p5aget(1), List__.p5aget(2), 1], p5want)).match(/\d/) ? 1 : 0)) ? (new p5HashRef(p5a_to_h(p5list_to_a('str', List__.p5aget(1), 'from', List__.p5aget(2), 'to', (p5num(List__.p5aget(2)) + 1))))) : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Number", "exponent", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(('e' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('E' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], p5want) }));
						})()], 0), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5or(p5context([(function () {
								return (p5and(('+' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('-' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([1], p5want));
							})()], p5want) }));
						})()], 0) }), function () { return p5context([(function () {
							var v_last_match_null;
							v_last_match_null = (0);
							var v_m;
							v_m = (v_MATCH);
							var v_to;
							v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							var v_count;
							v_count = (0);
							p5while(function () {
									if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
										v_last_match_null = ((p5num(v_last_match_null) + 1));
									}
									else {
										v_last_match_null = (0);
									};
									v_m = (v_MATCH);
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									v_count = ((p5num(v_count) + 1));
								}, function () { return p5and(p5context([(function () {
								var v_pos1;
								v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
								return (p5or(p5context([(function () {
									return (p5and(('_' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
								})()], 0), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
									return (p5context([(function () {
										var v_m2;
										v_m2 = (p5call(v_grammar, "digit", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
										if ( p5bool(v_m2) ) {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
											return (p5context([1], p5want));
										}
										else {
											return (p5context([0], p5want));
										}
									})()], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
							v_MATCH = (v_m);
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
							return (p5context([(p5num(v_count) > 0)], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Number", "val_num", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5and(p5and(p5context([p5and(('.' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "digit", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									var v_last_match_null;
									v_last_match_null = (0);
									var v_m;
									v_m = (v_MATCH);
									var v_to;
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									p5while(function () {
											if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
												v_last_match_null = ((p5num(v_last_match_null) + 1));
											}
											else {
												v_last_match_null = (0);
											};
											v_m = (v_MATCH);
											v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
										}, function () { return p5and(p5context([(function () {
										var v_pos1;
										v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
										return (p5or(p5context([(function () {
											return (p5and(('_' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
										})()], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
											return (p5context([(function () {
												var v_m2;
												v_m2 = (p5call(v_grammar, "digit", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
												if ( p5bool(v_m2) ) {
													(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
													return (p5context([1], p5want));
												}
												else {
													return (p5context([0], p5want));
												}
											})()], p5want));
										})()], p5want) }));
									})()], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
									v_MATCH = (v_m);
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
									return (p5context([1], p5want));
								})()], 0) }), function () { return p5context([(function () {
									var v_m;
									v_m = (v_MATCH);
									if ( !( p5bool((function () {
											var v_m2;
											v_m2 = (p5call(v_grammar, "exponent", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
											if ( p5bool(v_m2) ) {
												(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
												return (p5context([1], p5want));
											}
											else {
												return (p5context([0], p5want));
											}
										})())) ) {
										v_MATCH = (v_m);
									};
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "digit", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									var v_last_match_null;
									v_last_match_null = (0);
									var v_m;
									v_m = (v_MATCH);
									var v_to;
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									p5while(function () {
											if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
												v_last_match_null = ((p5num(v_last_match_null) + 1));
											}
											else {
												v_last_match_null = (0);
											};
											v_m = (v_MATCH);
											v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
										}, function () { return p5and(p5context([(function () {
										var v_pos1;
										v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
										return (p5or(p5context([(function () {
											return (p5and(('_' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
										})()], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
											return (p5context([(function () {
												var v_m2;
												v_m2 = (p5call(v_grammar, "digit", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
												if ( p5bool(v_m2) ) {
													(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
													return (p5context([1], p5want));
												}
												else {
													return (p5context([0], p5want));
												}
											})()], p5want));
										})()], p5want) }));
									})()], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
									v_MATCH = (v_m);
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
									return (p5context([1], p5want));
								})()], 0) }), function () { return p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										var v_m2;
										v_m2 = (p5call(v_grammar, "exponent", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
										if ( p5bool(v_m2) ) {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
											return (p5context([1], p5want));
										}
										else {
											return (p5context([0], p5want));
										}
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(p5and(p5and(p5context([p5and(('.' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
											var v_tmp;
											v_tmp = (v_MATCH);
											v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
											var v_res;
											v_res = (p5context([p5and(('.' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
											return ((v_MATCH = (( p5bool(v_res) ? 0 : v_tmp))));
										})()], 0) }), function () { return p5context([(function () {
											var v_last_match_null;
											v_last_match_null = (0);
											var v_m;
											v_m = (v_MATCH);
											var v_to;
											v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
											p5while(function () {
													if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
														v_last_match_null = ((p5num(v_last_match_null) + 1));
													}
													else {
														v_last_match_null = (0);
													};
													v_m = (v_MATCH);
													v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
												}, function () { return p5and(p5context([(function () {
												var v_pos1;
												v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
												return (p5or(p5context([(function () {
													return (p5and(('_' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
												})()], 0), function () { return p5context([(function () {
													(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
													return (p5context([(function () {
														var v_m2;
														v_m2 = (p5call(v_grammar, "digit", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
														if ( p5bool(v_m2) ) {
															(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
															return (p5context([1], p5want));
														}
														else {
															return (p5context([0], p5want));
														}
													})()], p5want));
												})()], p5want) }));
											})()], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
											v_MATCH = (v_m);
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
											return (p5context([1], p5want));
										})()], 0) }), function () { return p5context([(function () {
											var v_m;
											v_m = (v_MATCH);
											if ( !( p5bool((function () {
													var v_m2;
													v_m2 = (p5call(v_grammar, "exponent", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
													if ( p5bool(v_m2) ) {
														(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
														return (p5context([1], p5want));
													}
													else {
														return (p5context([0], p5want));
													}
												})())) ) {
												v_MATCH = (v_m);
											};
											return (p5context([1], p5want));
										})()], p5want) })], p5want));
									})()], p5want) }));
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							var v_s;
							v_s = (p5pkg["Perlito5::Match"].flat([v_MATCH], 0));
							v_s = p5str(v_s).replace(/_/g, '');
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Val::Num"], "new", ['num', v_s], 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Number", "digits", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_last_match_null;
							v_last_match_null = (0);
							var v_m;
							v_m = (v_MATCH);
							var v_to;
							v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							var v_count;
							v_count = (0);
							p5while(function () {
									if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
										v_last_match_null = ((p5num(v_last_match_null) + 1));
									}
									else {
										v_last_match_null = (0);
									};
									v_m = (v_MATCH);
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									v_count = ((p5num(v_count) + 1));
								}, function () { return p5and(p5context([(function () {
								var v_m2;
								v_m2 = (p5call(v_grammar, "digit", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
								if ( p5bool(v_m2) ) {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
									return (p5context([1], p5want));
								}
								else {
									return (p5context([0], p5want));
								}
							})()], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
							v_MATCH = (v_m);
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
							return (p5context([(p5num(v_count) > 0)], p5want));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Number", "digits_underscore", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "digit", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							var v_last_match_null;
							v_last_match_null = (0);
							var v_m;
							v_m = (v_MATCH);
							var v_to;
							v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							p5while(function () {
									if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
										v_last_match_null = ((p5num(v_last_match_null) + 1));
									}
									else {
										v_last_match_null = (0);
									};
									v_m = (v_MATCH);
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
								}, function () { return p5and(p5context([(function () {
								var v_pos1;
								v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
								return (p5or(p5context([(function () {
									return (p5and(('_' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
								})()], 0), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
									return (p5context([(function () {
										var v_m2;
										v_m2 = (p5call(v_grammar, "digit", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
										if ( p5bool(v_m2) ) {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
											return (p5context([1], p5want));
										}
										else {
											return (p5context([0], p5want));
										}
									})()], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
							v_MATCH = (v_m);
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Number", "val_octal", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5context([p5and(('0' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5or(p5context([(function () {
								return (p5and(p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and(('x' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(('X' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
									})()], p5want) }));
								})()], 0), function () { return p5context([(function () {
									var v_last_match_null;
									v_last_match_null = (0);
									var v_m;
									v_m = (v_MATCH);
									var v_to;
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									var v_count;
									v_count = (0);
									p5while(function () {
											if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
												v_last_match_null = ((p5num(v_last_match_null) + 1));
											}
											else {
												v_last_match_null = (0);
											};
											v_m = (v_MATCH);
											v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
											v_count = ((p5num(v_count) + 1));
										}, function () { return p5and(p5context([(function () {
										var v_m2;
										v_m2 = (p5call(p5pkg["Perlito5::Grammar"], "word", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
										if ( p5bool(v_m2) ) {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
											return (p5context([1], p5want));
										}
										else {
											return (p5context([0], p5want));
										}
									})()], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
									v_MATCH = (v_m);
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
									return (p5context([(p5num(v_count) > 0)], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5context([(function () {
									var v_pos1;
									v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									return (p5or(p5context([(function () {
										return (p5and(('b' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
									})()], 0), function () { return p5context([(function () {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
										return (p5context([p5and(('B' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
									})()], p5want) }));
								})()], 0), function () { return p5context([(function () {
									var v_last_match_null;
									v_last_match_null = (0);
									var v_m;
									v_m = (v_MATCH);
									var v_to;
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									var v_count;
									v_count = (0);
									p5while(function () {
											if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
												v_last_match_null = ((p5num(v_last_match_null) + 1));
											}
											else {
												v_last_match_null = (0);
											};
											v_m = (v_MATCH);
											v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
											v_count = ((p5num(v_count) + 1));
										}, function () { return p5and(p5context([(function () {
										var v_pos1;
										v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
										return (p5or(p5or(p5context([(function () {
											return (p5and(('_' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
										})()], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
											return (p5context([p5and(('0' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
										})()], 0) }), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
											return (p5context([p5and(('1' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
										})()], p5want) }));
									})()], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
									v_MATCH = (v_m);
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
									return (p5context([(p5num(v_count) > 0)], p5want));
								})()], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([(function () {
									var v_last_match_null;
									v_last_match_null = (0);
									var v_m;
									v_m = (v_MATCH);
									var v_to;
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									var v_count;
									v_count = (0);
									p5while(function () {
											if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
												v_last_match_null = ((p5num(v_last_match_null) + 1));
											}
											else {
												v_last_match_null = (0);
											};
											v_m = (v_MATCH);
											v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
											v_count = ((p5num(v_count) + 1));
										}, function () { return p5and(p5context([(function () {
										var v_pos1;
										v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
										return (p5or(p5context([(function () {
											return (p5and(('_' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
										})()], 0), function () { return p5context([(function () {
											(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
											return (p5context([(function () {
												var v_m2;
												v_m2 = (p5call(v_grammar, "digit", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
												if ( p5bool(v_m2) ) {
													(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
													return (p5context([1], p5want));
												}
												else {
													return (p5context([0], p5want));
												}
											})()], p5want));
										})()], p5want) }));
									})()], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
									v_MATCH = (v_m);
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
									return (p5context([(p5num(v_count) > 0)], p5want));
								})()], p5want));
							})()], p5want) }));
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Val::Int"], "new", ['int', p5pkg["Perlito5::Grammar::Number"].oct([p5pkg["Perlito5::Grammar::Number"].lc([p5pkg["Perlito5::Match"].flat([v_MATCH], 0)], 0)], 1)], 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Number", "val_int", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "digits_underscore", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							var v_s;
							v_s = (p5pkg["Perlito5::Match"].flat([v_MATCH], 0));
							v_s = p5str(v_s).replace(/_/g, '');
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Val::Int"], "new", ['int', v_s], 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar::Number", "val_vstring", p5sub(function (List__, p5want) {
			try {
				var v_grammar;
				v_grammar = (List__.p5aget(0));
				var v_str;
				v_str = (List__.p5aget(1));
				var v_pos;
				v_pos = (List__.p5aget(2));
				var v_MATCH;
				v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
				var v_tmp;
				v_tmp = (p5context([p5context([p5and(p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "val_int", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('val_int', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							var v_last_match_null;
							v_last_match_null = (0);
							var v_m;
							v_m = (v_MATCH);
							var v_to;
							v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							var v_count;
							v_count = (0);
							p5while(function () {
									if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
										v_last_match_null = ((p5num(v_last_match_null) + 1));
									}
									else {
										v_last_match_null = (0);
									};
									v_m = (v_MATCH);
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									v_count = ((p5num(v_count) + 1));
								}, function () { return p5and(p5context([p5and(p5context([p5and(('.' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
								var v_m2;
								v_m2 = (p5call(v_grammar, "digits_underscore", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
								if ( p5bool(v_m2) ) {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
									if ( (v_MATCH)._hash_.hasOwnProperty('digits_underscore') ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_array('digits_underscore')._array_.p5push([v_m2]);
									}
									else {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('digits_underscore', ((new p5ArrayRef([v_m2]))));
									};
									return (p5context([1], p5want));
								}
								else {
									return (p5context([0], p5want));
								}
							})()], 0) })], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
							v_MATCH = (v_m);
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
							return (p5context([(p5num(v_count) > 0)], p5want));
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							var List_parts= [];
							List_parts = p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_array('digits_underscore')._array_);
							if ( (p5num(List_parts.length) < 2) ) {
								(function () { throw(p5context([], p5want)) })()
							};
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'p5:vstring', 'namespace', '', 'arguments', (new p5ArrayRef(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('val_int')._hash_.p5hget_hash('capture')._hash_.p5hget('int'), p5map(p5pkg["Perlito5::Grammar::Number"], function (p5want) {
return (p5pkg["Perlito5::Match"].flat([p5pkg["Perlito5::Grammar::Number"]["v__"]], p5want));
}, p5list_to_a(List_parts)))))), 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
				return (( p5bool(v_tmp) ? v_MATCH : 0));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar::Number", "val_version", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5context([p5and(('v' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "val_int", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('val_int', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_last_match_null;
							v_last_match_null = (0);
							var v_m;
							v_m = (v_MATCH);
							var v_to;
							v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							p5while(function () {
									if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
										v_last_match_null = ((p5num(v_last_match_null) + 1));
									}
									else {
										v_last_match_null = (0);
									};
									v_m = (v_MATCH);
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
								}, function () { return p5and(p5context([p5and(p5context([p5and(('.' == p5pkg["Perlito5::Grammar::Number"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
								var v_m2;
								v_m2 = (p5call(v_grammar, "digits_underscore", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
								if ( p5bool(v_m2) ) {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
									if ( (v_MATCH)._hash_.hasOwnProperty('digits_underscore') ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_array('digits_underscore')._array_.p5push([v_m2]);
									}
									else {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('digits_underscore', ((new p5ArrayRef([v_m2]))));
									};
									return (p5context([1], p5want));
								}
								else {
									return (p5context([0], p5want));
								}
							})()], 0) })], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
							v_MATCH = (v_m);
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
							return (p5context([1], p5want));
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							var List_parts= [];
							List_parts = p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_array('digits_underscore')._array_);
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'p5:vstring', 'namespace', '', 'arguments', (new p5ArrayRef(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget_hash('val_int')._hash_.p5hget_hash('capture')._hash_.p5hget('int'), p5map(p5pkg["Perlito5::Grammar::Number"], function (p5want) {
return (p5pkg["Perlito5::Match"].flat([p5pkg["Perlito5::Grammar::Number"]["v__"]], p5want));
}, p5list_to_a(List_parts)))))), 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		1;
	})()
;
	(function () {
		p5make_package("Perlito5::Grammar");
		// use Perlito5::Grammar::Expression
;
		// use Perlito5::Grammar::Statement
;
		// use Perlito5::Grammar::Control
;
		// use Perlito5::Grammar::String
;
		// use Perlito5::Grammar::Sigil
;
		// use Perlito5::Grammar::Use
;
		// use Perlito5::Grammar::Block
;
		// use Perlito5::Grammar::Space
;
		// use Perlito5::Grammar::Print
;
		// use Perlito5::Grammar::Map
;
		// use Perlito5::Grammar::Attribute
;
		// use Perlito5::Grammar::Number
;
		p5typeglob_set("Perlito5::Grammar", "word", p5sub(function (List__, p5want) {
			return (( p5bool((p5str(p5pkg["Perlito5::Grammar"].substr([List__.p5aget(1), List__.p5aget(2), 1], p5want)).match(/\w/) ? 1 : 0)) ? (new p5HashRef(p5a_to_h(p5list_to_a('str', List__.p5aget(1), 'from', List__.p5aget(2), 'to', (p5num(List__.p5aget(2)) + 1))))) : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "ident", p5sub(function (List__, p5want) {
			try {
				if ( (p5bool(!((p5str(p5pkg["Perlito5::Grammar"].substr([List__.p5aget(1), List__.p5aget(2), 1], p5want)).match(/\w/) ? 1 : 0))) || p5bool((p5str(p5pkg["Perlito5::Grammar"].substr([List__.p5aget(1), List__.p5aget(2), 1], p5want)).match(/\d/) ? 1 : 0))) ) {
					(function () { throw(p5context([], p5want)) })()
				};
				var v_m;
				v_m = ((new p5HashRef(p5a_to_h(p5list_to_a('str', List__.p5aget(1), 'from', List__.p5aget(2), 'to', (p5num(List__.p5aget(2)) + 1))))));
				p5while(function () {
						(v_m || (v_m = new p5HashRef({})))._hash_.p5postincr('to');
					}, function () { return (p5str(p5pkg["Perlito5::Grammar"].substr([List__.p5aget(1), (v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'), 1], p5want)).match(/\w/) ? 1 : 0) }, false, "");
				return (p5context([v_m], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar", "caret_char", p5sub(function (List__, p5want) {
			try {
				var v_c;
				v_c = (p5pkg["Perlito5::Grammar"].substr([List__.p5aget(1), List__.p5aget(2), 1], 0));
				var v_pos;
				v_pos = (List__.p5aget(2));
				if ( (p5str(v_c) == '^') ) {
					(function (_tmp) { v_pos = p5incr_(_tmp); return _tmp })(v_pos);
					v_c = (p5pkg["Perlito5::Grammar"].substr([List__.p5aget(1), v_pos, 1], 0));
					if ( ((p5str(v_c) < 'A') || (p5str(v_c) > 'Z')) ) {
						(function () { throw(p5context([0], p5want)) })()
					};
					v_c = (p5pkg["Perlito5::Grammar"].chr([((p5pkg["Perlito5::Grammar"].ord([v_c], 0) - p5pkg["Perlito5::Grammar"].ord(['A'], 0)) + 1)], 0));
				}
				else if ( p5bool(p5call(p5pkg["Perlito5::Grammar::Space"], "ws", p5list_to_a(List__.p5aget(1), v_pos), 0)) ) {
					(function () { throw(p5context([0], p5want)) })();
				};
				if ( ((p5str(v_c) < String.fromCharCode(1)) || (p5str(v_c) > String.fromCharCode(26))) ) {
					(function () { throw(p5context([0], p5want)) })()
				};
				return ((new p5HashRef(p5a_to_h(p5list_to_a('str', List__.p5aget(1), 'from', List__.p5aget(2), 'to', (p5num(v_pos) + 1), 'capture', v_c)))));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Grammar", "full_ident", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							var v_last_match_null;
							v_last_match_null = (0);
							var v_m;
							v_m = (v_MATCH);
							var v_to;
							v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							p5while(function () {
									if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
										v_last_match_null = ((p5num(v_last_match_null) + 1));
									}
									else {
										v_last_match_null = (0);
									};
									v_m = (v_MATCH);
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
								}, function () { return p5and(p5context([p5and(p5context([p5and(('::' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
								var v_m2;
								v_m2 = (p5call(v_grammar, "ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
								if ( p5bool(v_m2) ) {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
									return (p5context([1], p5want));
								}
								else {
									return (p5context([0], p5want));
								}
							})()], 0) })], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
							v_MATCH = (v_m);
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "namespace_before_ident", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							var v_tmp;
							v_tmp = (v_MATCH);
							v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
							var v_res;
							v_res = (p5context([p5and(('::' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
							return ((v_MATCH = (( p5bool(v_res) ? v_tmp : 0))));
						})()], 0) }), function () { return p5context([(function () {
							var v_last_match_null;
							v_last_match_null = (0);
							var v_m;
							v_m = (v_MATCH);
							var v_to;
							v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							p5while(function () {
									if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
										v_last_match_null = ((p5num(v_last_match_null) + 1));
									}
									else {
										v_last_match_null = (0);
									};
									v_m = (v_MATCH);
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
								}, function () { return p5and(p5context([p5and(p5and(p5context([p5and(('::' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
								var v_m2;
								v_m2 = (p5call(v_grammar, "ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
								if ( p5bool(v_m2) ) {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
									return (p5context([1], p5want));
								}
								else {
									return (p5context([0], p5want));
								}
							})()], 0) }), function () { return p5context([(function () {
								var v_tmp;
								v_tmp = (v_MATCH);
								v_MATCH = ((new p5HashRef(p5a_to_h(p5list_to_a('str', v_str, 'from', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'), 'to', (v_tmp || (v_tmp = new p5HashRef({})))._hash_.p5hget('to'))))));
								var v_res;
								v_res = (p5context([p5and(('::' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0));
								return ((v_MATCH = (( p5bool(v_res) ? v_tmp : 0))));
							})()], 0) })], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
							v_MATCH = (v_m);
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "optional_namespace_before_ident", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5or(p5context([(function () {
								return (p5and(p5and(p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "namespace_before_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('namespace_before_ident', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0), function () { return p5context([(function () {
									var v_last_match_null;
									v_last_match_null = (0);
									var v_m;
									v_m = (v_MATCH);
									var v_to;
									v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
									p5while(function () {
											if ( (p5num(v_to) == p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'))) ) {
												v_last_match_null = ((p5num(v_last_match_null) + 1));
											}
											else {
												v_last_match_null = (0);
											};
											v_m = (v_MATCH);
											v_to = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
										}, function () { return p5and(p5context([p5and(('::' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(p5num(v_last_match_null) < 2)], 0) }) }, false, "");
									v_MATCH = (v_m);
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_to));
									return (p5context([1], p5want));
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('namespace_before_ident')), 0)));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(p5and(p5context([p5and(('::' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], 0) })], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "optional_namespace_before_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('optional_namespace_before_ident', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									var v_name;
									v_name = (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('optional_namespace_before_ident')), 0));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ('main'));
									if ( (p5str(v_name) != '') ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', ((p5str((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('capture')) + ('::' + p5str(v_name)))))
									};
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(1, function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (''));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "exp_stmts2", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "exp_stmts", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('exp_stmts', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('exp_stmts')), 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "exp", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "exp_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.exp_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.exp_parse')), 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "exp2", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(p5pkg["Perlito5::Grammar::Expression"], "exp_parse", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Expression.exp_parse', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('Perlito5::Grammar::Expression.exp_parse')), 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "opt_type", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								return (p5and(p5and(p5context([(function () {
									var v_m;
									v_m = (v_MATCH);
									if ( !( (('::' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 2], 0)) && p5bool((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((2 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))))) ) {
										v_MATCH = (v_m);
									};
									return (p5context([1], p5want));
								})()], 0), function () { return p5context([(function () {
									var v_m2;
									v_m2 = (p5call(v_grammar, "full_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('full_ident', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], 0) }), function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('full_ident')), 0)));
									return (p5context([1], p5want));
								})()], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(1, function () { return p5context([(function () {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (''));
									return (p5context([1], p5want));
								})()], p5want) })], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "var_sigil", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5or(p5or(p5or(p5context([(function () {
								return (p5and(('$' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) }));
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('%' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('@' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('&' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], 0) }), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([p5and(('*' == p5pkg["Perlito5::Grammar"].substr([v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'), 1], 0)), function () { return p5context([(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((1 + p5num((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')))))], p5want) })], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "var_name", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([(function () {
							var v_pos1;
							v_pos1 = ((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to'));
							return (p5or(p5context([(function () {
								var v_m2;
								v_m2 = (p5call(v_grammar, "full_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
								if ( p5bool(v_m2) ) {
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
									(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('full_ident', (v_m2));
									return (p5context([1], p5want));
								}
								else {
									return (p5context([0], p5want));
								}
							})()], 0), function () { return p5context([(function () {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', (v_pos1));
								return (p5context([(function () {
									var v_m2;
									v_m2 = (p5call(p5pkg["Perlito5::Grammar::Number"], "digit", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
									if ( p5bool(v_m2) ) {
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
										(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('Perlito5::Grammar::Number.digit', (v_m2));
										return (p5context([1], p5want));
									}
									else {
										return (p5context([0], p5want));
									}
								})()], p5want));
							})()], p5want) }));
						})()], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		p5typeglob_set("Perlito5::Grammar", "var_ident", p5sub(function (List__, p5want) {
			var v_grammar;
			v_grammar = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			var v_MATCH;
			v_MATCH = ((new p5HashRef({'str' : v_str, 'from' : v_pos, 'to' : v_pos})));
			var v_tmp;
			v_tmp = (p5context([p5context([p5and(p5and(p5and(p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "var_sigil", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('var_sigil', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "optional_namespace_before_ident", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('optional_namespace_before_ident', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							var v_m2;
							v_m2 = (p5call(v_grammar, "var_name", p5list_to_a(v_str, (v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('to')), 0));
							if ( p5bool(v_m2) ) {
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('to', ((v_m2 || (v_m2 = new p5HashRef({})))._hash_.p5hget('to')));
								(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('var_name', (v_m2));
								return (p5context([1], p5want));
							}
							else {
								return (p5context([0], p5want));
							}
						})()], 0) }), function () { return p5context([(function () {
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('str', (v_str));
							(v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hset('capture', (p5call(p5pkg["Perlito5::AST::Var"], "new", p5list_to_a('sigil', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('var_sigil')), 1), 'namespace', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('optional_namespace_before_ident')), 1), 'name', p5pkg["Perlito5::Match"].flat(p5list_to_a((v_MATCH || (v_MATCH = new p5HashRef({})))._hash_.p5hget('var_name')), 1)), 0)));
							return (p5context([1], p5want));
						})()], 0) })], 0)], 0));
			return (( p5bool(v_tmp) ? v_MATCH : 0));
		}, null));
		var List_PKG= [];
		p5typeglob_set("Perlito5::Grammar", "exp_stmts", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.p5aget(0));
			var v_str;
			v_str = (List__.p5aget(1));
			var v_pos;
			v_pos = (List__.p5aget(2));
			List_PKG.p5push([p5make_package("Perlito5")["v_PKG_NAME"]]);
			var List_stmts= [];
			var v_m;
			v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, v_pos], 0));
			v_pos = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
			p5while(function () {
						if ( (p5pkg["Perlito5::Grammar"].substr([v_str, v_pos, 1], 0) == ';') ) {
							v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, (p5num(v_pos) + 1)], 0));
							v_pos = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
						}
						else {
							v_m = (p5call(p5pkg["Perlito5::Grammar::Statement"], "statement_parse", [v_str, v_pos], 0));
							if ( p5bool(v_m) ) {
								List_stmts.p5push(p5list_to_a((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('capture')));
								v_pos = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
								if ( (p5pkg["Perlito5::Grammar"].substr([v_str, v_pos, 1], 0) == ';') ) {
									v_pos = ((p5num(v_pos) + 1));
								};
								v_m = (p5call(p5pkg["Perlito5::Grammar::Space"], "opt_ws", [v_str, v_pos], 0));
								v_pos = ((v_m || (v_m = new p5HashRef({})))._hash_.p5hget('to'));
							};
						};
					}, function () { return v_m }, false, "");
			p5make_package("Perlito5")["v_PKG_NAME"] = (List_PKG.pop());
			return ((new p5HashRef({'str' : v_str, 'to' : v_pos, 'capture' : (new p5ArrayRef(List_stmts))})));
		}, null));
	})()
;
	// use Perlito5::Grammar
;
	// use Perlito5::Grammar::Control
;
	// use Perlito5::Grammar::Precedence
;
	// use Perlito5::Grammar::Expression
;
	(function () {
		null;
		p5make_package("Perlito5::AST::Apply");
		var Hash_op = {};
		Hash_op = {'infix:<+=>' : 'infix:<+>', 'infix:<-=>' : 'infix:<->', 'infix:<*=>' : 'infix:<*>', 'infix:</=>' : 'infix:</>', 'infix:<||=>' : 'infix:<||>', 'infix:<&&=>' : 'infix:<&&>', 'infix:<|=>' : 'infix:<|>', 'infix:<&=>' : 'infix:<&>', 'infix:<//=>' : 'infix:<//>', 'infix:<.=>' : 'list:<.>'};
		p5typeglob_set("Perlito5::AST::Apply", "op_assign", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_code;
				v_code = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('code'));
				if ( p5bool(p5pkg["Perlito5::AST::Apply"].ref([v_code], 0)) ) {
					(function () { throw(p5context([0], p5want)) })()
				};
				if ( (Hash_op).hasOwnProperty(v_code) ) {
					(function () { throw(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'infix:<=>', 'arguments', (new p5ArrayRef(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', Hash_op.p5hget(p5str(v_code)), 'arguments', (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments')), 1))))), p5want)) })();
				};
				return (p5context([0], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5make_package("Perlito5::AST::Do");
		p5typeglob_set("Perlito5::AST::Do", "simplify", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.p5aget(0));
				var v_block;
				if ( p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('block'), "isa", ['Perlito5::AST::Lit::Block'], 0)) ) {
					v_block = (p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('block'), "stmts", [], 0));
				}
				else {
					v_block = ((new p5ArrayRef(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('block')))));
				};
				if ( (p5num(((v_block || (v_block = new p5ArrayRef([])))._array_)) == 1) ) {
					(function () {
						var v_stmt;
						v_stmt = ((v_block || (v_block = new p5ArrayRef([])))._array_.p5aget(0));
						if ( (p5bool(p5call(v_stmt, "isa", ['Perlito5::AST::Apply'], 0)) && (p5str(p5call(v_stmt, "code", [], 0)) == 'circumfix:<( )>')) ) {
							(function () {
								var v_args;
								v_args = (p5call(v_stmt, "arguments", [], 0));
								if ( (p5num((v_args || (v_args = new p5ArrayRef([])))._array_) == 1) ) {
									(function () { throw(p5call(p5call(p5pkg["Perlito5::AST::Do"], "new", p5list_to_a('block', (v_args || (v_args = new p5ArrayRef([])))._array_.p5aget(0)), 0), "simplify", [], p5want)) })()
								};
								(function () { throw(p5call(p5pkg["Perlito5::AST::Do"], "new", ['block', v_block], p5want)) })();
							})();
						};
						if ( p5bool(p5call(v_stmt, "isa", ['Perlito5::AST::Do'], 0)) ) {
							(function () { throw(p5call(v_stmt, "simplify", [], p5want)) })();
						};
					})();
				};
				return (p5call(p5pkg["Perlito5::AST::Do"], "new", ['block', v_block], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
	})()
;
	// use Perlito5::Macro
;
	(function () {
		p5make_package("Perlito5::strict");
		p5typeglob_set("Perlito5::strict", "import", p5sub(function (List__, p5want) {
			return ((p5make_package("Perlito5")["v_STRICT"] = (1)));
		}, null));
		p5typeglob_set("Perlito5::strict", "unimport", p5sub(function (List__, p5want) {
			return ((p5make_package("Perlito5")["v_STRICT"] = (0)));
		}, null));
		1;
	})()
;
	(function () {
		p5make_package("Perlito5");
		// use Perlito5::strict
;
		if ( (p5scalar_deref((String.fromCharCode(15) || (String.fromCharCode(15) = new p5ScalarRef(null))), 'Perlito5') != null) ) {}
		else {
			p5scalar_deref_set((String.fromCharCode(15) || (String.fromCharCode(15) = new p5ScalarRef(null))), ('perlito5'), 'Perlito5')
		};
		if ( p5bool(p5make_package("main")["v_]"]) ) {}
		else {
			p5make_package("main")["v_]"] = (5.014001)
		};
		if ( (p5pkg["main"]["v_/"] != null) ) {}
		else {
			p5pkg["main"]["v_/"] = (p5pkg["Perlito5"].chr([10], 0))
		};
		if ( (p5pkg["main"]["v_\""] != null) ) {}
		else {
			p5pkg["main"]["v_\""] = (' ')
		};
		if ( (p5pkg["main"]["v_,"] != null) ) {}
		else {
			p5pkg["main"]["v_,"] = (null)
		};
		if ( (p5pkg["main"]["v_!"] != null) ) {}
		else {
			p5pkg["main"]["v_!"] = ('')
		};
		if ( (p5pkg["main"]["v_;"] != null) ) {}
		else {
			p5pkg["main"]["v_;"] = (p5pkg["Perlito5"].chr([28], 0))
		};
		if ( (p5pkg["main"]["v_?"] != null) ) {}
		else {
			p5pkg["main"]["v_?"] = (0)
		};
		if ( (p5pkg["main"]["v_["] != null) ) {}
		else {
			p5pkg["main"]["v_["] = (0)
		};
		if ( (p5scalar_deref((String.fromCharCode(22) || (String.fromCharCode(22) = new p5ScalarRef(null))), 'Perlito5') != null) ) {}
		else {
			p5scalar_deref_set((String.fromCharCode(22) || (String.fromCharCode(22) = new p5ScalarRef(null))), (p5pkg["Perlito5"].bless([(new p5HashRef(p5a_to_h(p5list_to_a('original', 'v5.14.1', 'qv', 1, 'version', (new p5ArrayRef([5, 14, 1])))))), 'version'], 0)), 'Perlito5')
		};
		// our p5pkg["Perlito5"]["v_EXPAND_USE"]
		p5pkg["Perlito5"]["v_EXPAND_USE"] = (1);
		// our p5pkg["Perlito5"]["v_STRICT"]
		p5pkg["Perlito5"]["v_STRICT"] = (0);
		// our p5pkg["Perlito5"]["v_WARNINGS"]
		p5pkg["Perlito5"]["v_WARNINGS"] = (0);
		// our p5pkg["Perlito5"]["v_UTF8"]
		p5pkg["Perlito5"]["v_UTF8"] = (0);
		// our p5pkg["Perlito5"]["v_BYTES"]
		p5pkg["Perlito5"]["v_BYTES"] = (0);
		// our p5pkg["Perlito5"]["v_CALLER"]
		p5pkg["Perlito5"]["v_CALLER"] = ((new p5ArrayRef([])));
		if (typeof p5pkg["Perlito5"]["Hash_DATA_SECTION"] == "undefined" ) { p5pkg["Perlito5"]["Hash_DATA_SECTION"] = {};};
		p5pkg["Perlito5"]["Hash_DATA_SECTION"] = {};
		// our p5pkg["Perlito5"]["v_PKG_NAME"]
		p5pkg["Perlito5"]["v_PKG_NAME"] = ('');
		// our p5pkg["Perlito5"]["v_LINE_NUMBER"]
		p5pkg["Perlito5"]["v_LINE_NUMBER"] = (0);
		// our p5pkg["Perlito5"]["v_FILE_NAME"]
		p5pkg["Perlito5"]["v_FILE_NAME"] = ('');
		// our p5pkg["Perlito5"]["v_PACKAGES"]
		p5pkg["Perlito5"]["v_PACKAGES"] = ((new p5HashRef({'STDERR' : 1, 'STDOUT' : 1, 'STDIN' : 1, 'main' : 1, 'strict' : 1, 'warnings' : 1, 'utf8' : 1, 'bytes' : 1, 'encoding' : 1, 'UNIVERSAL' : 1, 'CORE' : 1, 'CORE::GLOBAL' : 1, 'Perlito5::IO' : 1})));
		p5for(p5make_package("Perlito5"), "v__", function () {
			p5pkg["main"]["List_INC"].p5push([p5pkg["Perlito5"]["v__"]]);
			}, p5list_to_a(p5pkg["Perlito5"].split(p5list_to_a(':', p5or(p5pkg["main"]["Hash_ENV"].p5hget('PERL5LIB'), function () { return '' })), 1)), false, "");
		// our p5pkg["Perlito5"]["v_SPECIAL_VAR"]
		p5pkg["Perlito5"]["v_SPECIAL_VAR"] = ((new p5HashRef(p5a_to_h(p5list_to_a('$_', 'ARG', '$&', '$MATCH', '$`', '$PREMATCH', '$' + String.fromCharCode(39), '$POSTMATCH', '$+', '$LAST_PAREN_MATCH', '@+', '@LAST_MATCH_END', '%+', '%LAST_PAREN_MATCH', '@-', '@LAST_MATCH_START', '$|', 'autoflush', '$/', '$RS', '@_', '@ARG', '< $', '$EUID', '$.', '$NR', '< $< ', '$UID', '$(', '$GID', '$#', null, '$@', '$EVAL_ERROR', '$=', '$FORMAT_LINES_PER_PAGE', '$,', '$OFS', '$?', '$CHILD_ERROR', '$*', null, '$[', null, '$$', '$PID', '%-', null, '$~', '$FORMAT_NAME', '$-', '$FORMAT_LINES_LEFT', '$&', '$MATCH', '$%', '$FORMAT_PAGE_NUMBER', '$)', '$EGID', '$]', null, '$!', '$ERRNO', '$;', '$SUBSEP', '$' + String.fromCharCode(92), '$ORS', '%!', null, '$"', '$LIST_SEPARATOR', '$_', '$ARG', '$:', 'FORMAT_LINE_BREAK_CHARACTERS')))));
		// our p5pkg["Perlito5"]["v_CORE_OVERRIDABLE"]
		p5pkg["Perlito5"]["v_CORE_OVERRIDABLE"] = ((new p5HashRef({'say' : 1, 'break' : 1, 'given' : 1, 'when' : 1, 'default' : 1, 'state' : 1, 'lock' : 1})));
		// our p5pkg["Perlito5"]["v_CORE_PROTO"]
		p5pkg["Perlito5"]["v_CORE_PROTO"] = ((new p5HashRef(p5a_to_h(p5list_to_a('CORE::shutdown', '*$', 'CORE::chop', null, 'CORE::lstat', '*', 'CORE::rename', '$$', 'CORE::lock', String.fromCharCode(92) + '$', 'CORE::rand', ';$', 'CORE::gmtime', ';$', 'CORE::gethostbyname', '$', 'CORE::each', String.fromCharCode(92) + '[@%]', 'CORE::ref', '_', 'CORE::syswrite', '*$;$$', 'CORE::msgctl', '$$$', 'CORE::getnetbyname', '$', 'CORE::write', ';*', 'CORE::alarm', '_', 'CORE::print', null, 'CORE::getnetent', '', 'CORE::semget', '$$$', 'CORE::use', null, 'CORE::abs', '_', 'CORE::break', '', 'CORE::undef', null, 'CORE::no', null, 'CORE::eval', '_', 'CORE::split', null, 'CORE::localtime', ';$', 'CORE::sort', null, 'CORE::chown', '@', 'CORE::endpwent', '', 'CORE::getpwent', '', 'CORE::pos', null, 'CORE::lcfirst', '_', 'CORE::kill', '@', 'CORE::send', '*$$;$', 'CORE::endprotoent', '', 'CORE::semctl', '$$$$', 'CORE::waitpid', '$$', 'CORE::utime', '@', 'CORE::dbmclose', String.fromCharCode(92) + '%', 'CORE::getpwnam', '$', 'CORE::substr', '$$;$$', 'CORE::listen', '*$', 'CORE::getprotoent', '', 'CORE::shmget', '$$$', 'CORE::our', null, 'CORE::readlink', '_', 'CORE::shmwrite', '$$$$', 'CORE::times', '', 'CORE::package', null, 'CORE::map', null, 'CORE::join', '$@', 'CORE::rmdir', '_', 'CORE::shmread', '$$$$', 'CORE::uc', '_', 'CORE::bless', '$;$', 'CORE::closedir', '*', 'CORE::getppid', '', 'CORE::tie', String.fromCharCode(92) + '[$@%]$;@', 'CORE::readdir', '*', 'CORE::gethostent', '', 'CORE::getlogin', '', 'CORE::last', null, 'CORE::gethostbyaddr', '$$', 'CORE::accept', '**', 'CORE::log', '_', 'CORE::tell', ';*', 'CORE::readline', ';*', 'CORE::tied', null, 'CORE::socket', '*$$$', 'CORE::umask', ';$', 'CORE::sysread', '*' + String.fromCharCode(92) + '$$;$', 'CORE::syscall', '$@', 'CORE::quotemeta', '_', 'CORE::dump', '', 'CORE::opendir', '*$', 'CORE::untie', null, 'CORE::truncate', '$$', 'CORE::select', ';*', 'CORE::sleep', ';$', 'CORE::seek', '*$$', 'CORE::read', '*' + String.fromCharCode(92) + '$$;$', 'CORE::rewinddir', '*', 'CORE::scalar', null, 'CORE::wantarray', '', 'CORE::oct', '_', 'CORE::bind', '*$', 'CORE::stat', '*', 'CORE::sqrt', '_', 'CORE::getc', ';*', 'CORE::fileno', '*', 'CORE::getpeername', '*', 'CORE::sin', '_', 'CORE::getnetbyaddr', '$$', 'CORE::grep', null, 'CORE::setservent', '$', 'CORE::sub', null, 'CORE::shmctl', '$$$', 'CORE::study', null, 'CORE::msgrcv', '$$$$$', 'CORE::setsockopt', '*$$$', 'CORE::int', '_', 'CORE::pop', ';' + String.fromCharCode(92) + '@', 'CORE::link', '$$', 'CORE::exec', null, 'CORE::setpwent', '', 'CORE::mkdir', '_;$', 'CORE::sysseek', '*$$', 'CORE::endservent', '', 'CORE::chr', '_', 'CORE::when', null, 'CORE::getpwuid', '$', 'CORE::setprotoent', '$', 'CORE::reverse', '@', 'CORE::say', null, 'CORE::goto', null, 'CORE::getgrent', '', 'CORE::endnetent', '', 'CORE::hex', '_', 'CORE::binmode', '*;$', 'CORE::formline', '$@', 'CORE::getgrnam', '$', 'CORE::ucfirst', '_', 'CORE::chdir', ';$', 'CORE::setnetent', '$', 'CORE::splice', String.fromCharCode(92) + '@;$$@', 'CORE::unlink', '@', 'CORE::time', '', 'CORE::push', String.fromCharCode(92) + '@@', 'CORE::exit', ';$', 'CORE::endgrent', '', 'CORE::unshift', String.fromCharCode(92) + '@@', 'CORE::local', null, 'CORE::my', null, 'CORE::cos', '_', 'CORE::redo', null, 'CORE::warn', '@', 'CORE::getsockname', '*', 'CORE::pipe', '**', 'CORE::sprintf', '$@', 'CORE::open', '*;$@', 'CORE::setpgrp', ';$$', 'CORE::exp', '_', 'CORE::seekdir', '*$', 'CORE::getservbyport', '$$', 'CORE::given', null, 'CORE::pack', '$@', 'CORE::msgget', '$$', 'CORE::rindex', '$$;$', 'CORE::srand', ';$', 'CORE::telldir', '*', 'CORE::connect', '*$', 'CORE::getprotobyname', '$', 'CORE::msgsnd', '$$$', 'CORE::length', '_', 'CORE::state', null, 'CORE::die', '@', 'CORE::delete', null, 'CORE::getservent', '', 'CORE::getservbyname', '$$', 'CORE::setpriority', '$$$', 'CORE::lc', '_', 'CORE::fcntl', '*$$', 'CORE::chroot', '_', 'CORE::recv', '*' + String.fromCharCode(92) + '$$$', 'CORE::dbmopen', String.fromCharCode(92) + '%$$', 'CORE::socketpair', '**$$$', 'CORE::vec', '$$$', 'CORE::system', null, 'CORE::defined', '_', 'CORE::index', '$$;$', 'CORE::caller', ';$', 'CORE::close', ';*', 'CORE::atan2', '$$', 'CORE::semop', '$$', 'CORE::unpack', '$;$', 'CORE::ord', '_', 'CORE::chmod', '@', 'CORE::prototype', null, 'CORE::getprotobynumber', '$', 'CORE::values', String.fromCharCode(92) + '[@%]', 'CORE::chomp', null, 'CORE::ioctl', '*$$', 'CORE::eof', ';*', 'CORE::crypt', '$$', 'CORE::do', null, 'CORE::flock', '*$', 'CORE::wait', '', 'CORE::sethostent', '$', 'CORE::return', null, 'CORE::getsockopt', '*$$', 'CORE::fork', '', 'CORE::require', null, 'CORE::format', null, 'CORE::readpipe', '_', 'CORE::endhostent', '', 'CORE::getpgrp', ';$', 'CORE::setgrent', '', 'CORE::keys', String.fromCharCode(92) + '[@%]', 'CORE::glob', null, 'CORE::getpriority', '$$', 'CORE::reset', ';$', 'CORE::sysopen', '*$$;$', 'CORE::continue', '', 'CORE::next', null, 'CORE::getgrgid', '$', 'CORE::default', null, 'CORE::shift', ';' + String.fromCharCode(92) + '@', 'CORE::symlink', '$$', 'CORE::exists', '$', 'CORE::printf', '$@', 'CORE::m', null, 'CORE::q', null, 'CORE::qq', null, 'CORE::qw', null, 'CORE::qx', null, 'CORE::qr', null, 'CORE::s', null, 'CORE::tr', null, 'CORE::y', null, 'CORE::if', null, 'CORE::unless', null, 'CORE::when', null, 'CORE::for', null, 'CORE::foreach', null, 'CORE::while', null, 'CORE::given', null, 'CORE::and', null, 'CORE::or', null, 'CORE::xor', null, 'CORE::not', null, 'CORE::cmp', null)))));
		1;
	})()
;
	// use Perlito5::Runtime
;
	(function () {
		null;
		p5make_package("Perlito5::AST::CompUnit");
		p5typeglob_set("Perlito5::AST::CompUnit", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::CompUnit"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::CompUnit", "name", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('name'));
		}, null));
		p5typeglob_set("Perlito5::AST::CompUnit", "body", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('body'));
		}, null));
		p5make_package("Perlito5::AST::Val::Int");
		p5typeglob_set("Perlito5::AST::Val::Int", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Val::Int"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Val::Int", "int", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('int'));
		}, null));
		p5make_package("Perlito5::AST::Val::Num");
		p5typeglob_set("Perlito5::AST::Val::Num", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Val::Num"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Val::Num", "num", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('num'));
		}, null));
		p5make_package("Perlito5::AST::Val::Buf");
		p5typeglob_set("Perlito5::AST::Val::Buf", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Val::Buf"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Val::Buf", "buf", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('buf'));
		}, null));
		p5make_package("Perlito5::AST::Lit::Block");
		p5typeglob_set("Perlito5::AST::Lit::Block", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Lit::Block"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Lit::Block", "sig", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('sig'));
		}, null));
		p5typeglob_set("Perlito5::AST::Lit::Block", "stmts", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('stmts'));
		}, null));
		p5make_package("Perlito5::AST::Index");
		p5typeglob_set("Perlito5::AST::Index", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Index"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Index", "obj", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('obj'));
		}, null));
		p5typeglob_set("Perlito5::AST::Index", "index_exp", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('index_exp'));
		}, null));
		p5make_package("Perlito5::AST::Lookup");
		p5typeglob_set("Perlito5::AST::Lookup", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Lookup"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Lookup", "obj", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('obj'));
		}, null));
		p5typeglob_set("Perlito5::AST::Lookup", "index_exp", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('index_exp'));
		}, null));
		p5typeglob_set("Perlito5::AST::Lookup", "autoquote", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.shift());
				var v_index;
				v_index = (List__.shift());
				if ( (p5bool(p5call(v_index, "isa", ['Perlito5::AST::Apply'], 0)) && p5bool((v_index || (v_index = new p5HashRef({})))._hash_.p5hget('bareword'))) ) {
					(function () {
						var v_full_name;
						v_full_name = ((p5str(( p5bool((v_index || (v_index = new p5HashRef({})))._hash_.p5hget('namespace')) ? (p5str((v_index || (v_index = new p5HashRef({})))._hash_.p5hget('namespace')) + '::') : '')) + p5str((v_index || (v_index = new p5HashRef({})))._hash_.p5hget('code'))));
						if ( !( (p5make_package("Perlito5")["v_PROTO"])._hash_.hasOwnProperty(v_full_name)) ) {
							(function () { throw(p5call(p5pkg["Perlito5::AST::Val::Buf"], "new", ['buf', v_full_name], p5want)) })();
						};
					})();
				}
				else if ( (p5bool(p5call(v_index, "isa", ['Perlito5::AST::Apply'], 0)) && ((p5str(p5call(v_index, "code", [], 0)) == 'prefix:<->') || (p5str(p5call(v_index, "code", [], 0)) == 'prefix:<+>'))) ) {
					(function () {
						var v_arg;
						v_arg = (p5call(v_index, "arguments", [], p5want)._array_.p5aget(0));
						if ( p5bool(v_arg) ) {
							(function () { throw(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', p5call(v_index, "code", [], 1), 'namespace', p5call(v_index, "namespace", [], 1), 'arguments', (new p5ArrayRef(p5list_to_a(p5call(v_self, "autoquote", [v_arg], 1))))), p5want)) })()
						};
					})();
				};
				return (p5context([v_index], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5make_package("Perlito5::AST::Var");
		p5typeglob_set("Perlito5::AST::Var", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Var"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Var", "sigil", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('sigil'));
		}, null));
		p5typeglob_set("Perlito5::AST::Var", "namespace", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('namespace'));
		}, null));
		p5typeglob_set("Perlito5::AST::Var", "name", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('name'));
		}, null));
		p5typeglob_set("Perlito5::AST::Var", "plain_name", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.shift());
				if ( p5bool(p5call(v_self, "namespace", [], 0)) ) {
					(function () { throw(p5context([(p5str(p5call(v_self, "namespace", [], 0)) + '::' + p5str(p5call(v_self, "name", [], 0)))], p5want)) })();
				};
				return (p5call(v_self, "name", [], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::AST::Var", "perl5_name", p5sub(function (List__, p5want) {
			var v_self;
			v_self = (List__.shift());
			var v_sigil;
			v_sigil = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil'));
			if ( (p5str(v_sigil) == '$#') ) {
					v_sigil = ('@')
				};
			return (p5context([(p5str(v_sigil) + p5str(( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) ? (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) + '::') : '')) + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('name')))], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Var", "perl5_get_decl", p5sub(function (List__, p5want) {
			try {
				var v_self;
				v_self = (List__.shift());
				var v_perl5_name;
				v_perl5_name = (List__.shift());
				if ( (p5pkg["Perlito5::AST::Var"].substr([v_perl5_name, 0, 1], 0) == '&') ) {
					(function () { throw((new p5HashRef({'decl' : 'our'}))) })()
				};
				p5for(p5make_package("Perlito5::AST::Var"), "v__", function () {
					if ( (p5pkg["Perlito5::AST::Var"]["v__"])._hash_.hasOwnProperty(v_perl5_name) ) {
							(function () { throw((p5pkg["Perlito5::AST::Var"]["v__"] || (p5pkg["Perlito5::AST::Var"]["v__"] = new p5HashRef({})))._hash_.p5hget(p5str(v_perl5_name))) })()
						};
					}, p5list_to_a((p5make_package("Perlito5")["v_VAR"] || (p5make_package("Perlito5")["v_VAR"] = new p5ArrayRef([])))._array_), false, "");
				return (null);
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5make_package("Perlito5::AST::Proto");
		p5typeglob_set("Perlito5::AST::Proto", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Proto"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Proto", "name", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('name'));
		}, null));
		p5make_package("Perlito5::AST::Call");
		p5typeglob_set("Perlito5::AST::Call", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Call"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Call", "invocant", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('invocant'));
		}, null));
		p5typeglob_set("Perlito5::AST::Call", "method", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('method'));
		}, null));
		p5typeglob_set("Perlito5::AST::Call", "arguments", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('arguments'));
		}, null));
		p5make_package("Perlito5::AST::Apply");
		p5typeglob_set("Perlito5::AST::Apply", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Apply"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Apply", "code", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('code'));
		}, null));
		p5typeglob_set("Perlito5::AST::Apply", "special_arg", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('special_arg'));
		}, null));
		p5typeglob_set("Perlito5::AST::Apply", "arguments", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('arguments'));
		}, null));
		p5typeglob_set("Perlito5::AST::Apply", "namespace", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('namespace'));
		}, null));
		p5make_package("Perlito5::AST::If");
		p5typeglob_set("Perlito5::AST::If", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::If"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::If", "cond", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('cond'));
		}, null));
		p5typeglob_set("Perlito5::AST::If", "body", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('body'));
		}, null));
		p5typeglob_set("Perlito5::AST::If", "otherwise", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('otherwise'));
		}, null));
		p5make_package("Perlito5::AST::When");
		p5typeglob_set("Perlito5::AST::When", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::When"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::When", "cond", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('cond'));
		}, null));
		p5typeglob_set("Perlito5::AST::When", "body", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('body'));
		}, null));
		p5make_package("Perlito5::AST::While");
		p5typeglob_set("Perlito5::AST::While", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::While"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::While", "init", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('init'));
		}, null));
		p5typeglob_set("Perlito5::AST::While", "cond", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('cond'));
		}, null));
		p5typeglob_set("Perlito5::AST::While", "continue", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('continue'));
		}, null));
		p5typeglob_set("Perlito5::AST::While", "body", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('body'));
		}, null));
		p5make_package("Perlito5::AST::For");
		p5typeglob_set("Perlito5::AST::For", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::For"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::For", "cond", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('cond'));
		}, null));
		p5typeglob_set("Perlito5::AST::For", "continue", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('continue'));
		}, null));
		p5typeglob_set("Perlito5::AST::For", "body", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('body'));
		}, null));
		p5make_package("Perlito5::AST::Given");
		p5typeglob_set("Perlito5::AST::Given", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Given"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Given", "cond", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('cond'));
		}, null));
		p5typeglob_set("Perlito5::AST::Given", "body", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('body'));
		}, null));
		p5make_package("Perlito5::AST::Decl");
		p5typeglob_set("Perlito5::AST::Decl", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Decl"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Decl", "decl", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('decl'));
		}, null));
		p5typeglob_set("Perlito5::AST::Decl", "type", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('type'));
		}, null));
		p5typeglob_set("Perlito5::AST::Decl", "var", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('var'));
		}, null));
		p5typeglob_set("Perlito5::AST::Decl", "attributes", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('attributes'));
		}, null));
		p5make_package("Perlito5::AST::Sig");
		p5typeglob_set("Perlito5::AST::Sig", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Sig"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Sig", "positional", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('positional'));
		}, null));
		p5make_package("Perlito5::AST::Sub");
		p5typeglob_set("Perlito5::AST::Sub", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Sub"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Sub", "name", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('name'));
		}, null));
		p5typeglob_set("Perlito5::AST::Sub", "sig", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('sig'));
		}, null));
		p5typeglob_set("Perlito5::AST::Sub", "block", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('block'));
		}, null));
		p5typeglob_set("Perlito5::AST::Sub", "attributes", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('attributes'));
		}, null));
		p5make_package("Perlito5::AST::Do");
		p5typeglob_set("Perlito5::AST::Do", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Do"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Do", "block", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('block'));
		}, null));
		p5make_package("Perlito5::AST::Use");
		p5typeglob_set("Perlito5::AST::Use", "new", p5sub(function (List__, p5want) {
			var v_class;
			v_class = (List__.shift());
			return (p5pkg["Perlito5::AST::Use"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
		}, null));
		p5typeglob_set("Perlito5::AST::Use", "mod", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('mod'));
		}, null));
		p5typeglob_set("Perlito5::AST::Use", "code", p5sub(function (List__, p5want) {
			return (List__.p5aget_hash(0)._hash_.p5hget('code'));
		}, null));
		1;
	})()
;
	(function () {
		p5make_package("Perlito5::Dumper");
		p5typeglob_set("Perlito5::Dumper", "import", p5sub(function (List__, p5want) {
			try {
				var v_pkg;
				v_pkg = (List__.shift());
				var v_callpkg;
				v_callpkg = (p5pkg["Perlito5::Dumper"].caller([0], 0));
				p5typeglob_deref_set(((p5str(v_callpkg) + '::Dumper')), (p5pkg["Perlito5::Dumper"].Dumper), 'Perlito5::Dumper');
				(function () { throw(p5context([], p5want)) })()
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Dumper", "Dumper", p5sub(function (List__, p5want) {
			var v_seen;
			v_seen = ((new p5HashRef({})));
			var v_level;
			v_level = ('    ');
			var List_out= [];
			p5for_lex(function (v_i) {
						var v_pos;
						v_pos = (('$VAR' + p5str((p5num(v_i) + 1))));
						List_out.p5push([(p5str(v_pos) + ' = ' + p5str(p5pkg["Perlito5::Dumper"]._dumper(p5list_to_a(List__.p5aget(p5num(v_i)), v_level, v_seen, v_pos), 0)) + ';' + String.fromCharCode(10))]);
					}, p5list_to_a((function (a) { for (var i=0, l=(List__.length - 1); i<=l; ++i){ a.push(i) }; return a })([])), false, "");
			return (p5context([p5pkg["Perlito5::Dumper"].join(['', p5list_to_a(List_out)], p5want)], p5want));
		}, null));
		p5typeglob_set("Perlito5::Dumper", "ast_dumper", p5sub(function (List__, p5want) {
			var v_seen;
			v_seen = ((new p5HashRef({})));
			var v_level;
			v_level = ('    ');
			var v_pos;
			v_pos = ('[TODO - recursive structure in AST is not supported]');
			return (p5pkg["Perlito5::Dumper"]._dumper(p5list_to_a(List__.p5aget(0), v_level, v_seen, v_pos), p5want));
		}, null));
		p5typeglob_set("Perlito5::Dumper", "_dumper", p5sub(function (List__, p5want) {
			try {
				var v_obj;
				var v_tab;
				var v_seen;
				var v_pos;
				(function () {
					var tmp103 = p5list_to_a(List__);
					var tmp104 = tmp103.slice(0);
					v_obj = tmp103.shift();
					v_tab = tmp103.shift();
					v_seen = tmp103.shift();
					v_pos = tmp103.shift();
					return tmp104
				})();
				if ( !( (v_obj != null)) ) {
					(function () { throw(p5context(['undef'], p5want)) })()
				};
				var v_ref;
				v_ref = (p5pkg["Perlito5::Dumper"].ref([v_obj], 0));
				if ( !( p5bool(v_ref)) ) {
					(function () { throw(p5pkg["Perlito5::Dumper"].escape_string([v_obj], p5want)) })()
				};
				var v_as_string;
				v_as_string = (v_obj);
				if ( p5bool((v_seen || (v_seen = new p5HashRef({})))._hash_.p5hget(p5str(v_as_string))) ) {
					(function () { throw((v_seen || (v_seen = new p5HashRef({})))._hash_.p5hget(p5str(v_as_string))) })()
				};
				(v_seen || (v_seen = new p5HashRef({})))._hash_.p5hset(p5str(v_as_string), (v_pos));
				var v_tab1;
				v_tab1 = ((p5str(v_tab) + '    '));
				if ( (p5str(v_ref) == 'ARRAY') ) {
					(function () {
						if ( p5bool((v_obj || (v_obj = new p5ArrayRef([])))._array_) ) {}
						else {
							(function () { throw(p5context(['[]'], p5want)) })()
						};
						var List_out= [];
						p5for_lex(function (v_i) {
								var v_here;
								v_here = ((p5str(v_pos) + '->[' + p5str(v_i) + ']'));
								List_out.p5push(p5list_to_a(v_tab1, p5pkg["Perlito5::Dumper"]._dumper(p5list_to_a((v_obj || (v_obj = new p5ArrayRef([])))._array_.p5aget(p5num(v_i)), v_tab1, v_seen, v_here), 1), ',' + String.fromCharCode(10)));
							}, p5list_to_a((function (a) { for (var i=0, l=((v_obj || (v_obj = new p5ArrayRef([])))._array_.length - 1); i<=l; ++i){ a.push(i) }; return a })([])), false, "");
						(function () { throw(p5context([p5pkg["Perlito5::Dumper"].join(['', p5list_to_a('[' + String.fromCharCode(10), List_out, v_tab, ']')], p5want)], p5want)) })();
					})();
				}
				else if ( (p5str(v_ref) == 'HASH') ) {
					(function () {
						if ( p5bool(p5pkg["Perlito5::Dumper"].keys([(v_obj || (v_obj = new p5HashRef({})))._hash_], 0)) ) {}
						else {
							(function () { throw(p5context(['{}'], p5want)) })()
						};
						var List_out= [];
						p5for_lex(function (v_i) {
								var v_here;
								v_here = ((p5str(v_pos) + '->{' + p5str(v_i) + '}'));
								List_out.p5push(p5list_to_a(v_tab1, (String.fromCharCode(39) + p5str(v_i) + String.fromCharCode(39) + ' => '), p5pkg["Perlito5::Dumper"]._dumper(p5list_to_a((v_obj || (v_obj = new p5HashRef({})))._hash_.p5hget(p5str(v_i)), v_tab1, v_seen, v_here), 1), ',' + String.fromCharCode(10)));
							}, p5list_to_a(p5sort(p5pkg["Perlito5::Dumper"], null, p5list_to_a(p5pkg["Perlito5::Dumper"].keys([(v_obj || (v_obj = new p5HashRef({})))._hash_], 1)))), false, "");
						(function () { throw(p5context([p5pkg["Perlito5::Dumper"].join(['', p5list_to_a('{' + String.fromCharCode(10), List_out, v_tab, '}')], p5want)], p5want)) })();
					})();
				}
				else if ( (p5str(v_ref) == 'SCALAR') ) {
					(function () { throw(p5context([(String.fromCharCode(92) + p5str(p5pkg["Perlito5::Dumper"]._dumper(p5list_to_a(p5scalar_deref((v_obj || (v_obj = new p5ScalarRef(null))), 'Perlito5::Dumper'), v_tab1, v_seen, v_pos), 0)))], p5want)) })();
				};
				var List_out= [];
				p5for_lex(function (v_i) {
						var v_here;
						v_here = ((p5str(v_pos) + '->{' + p5str(v_i) + '}'));
						List_out.p5push(p5list_to_a(v_tab1, (String.fromCharCode(39) + p5str(v_i) + String.fromCharCode(39) + ' => '), p5pkg["Perlito5::Dumper"]._dumper(p5list_to_a((v_obj || (v_obj = new p5HashRef({})))._hash_.p5hget(p5str(v_i)), v_tab1, v_seen, v_here), 1), ',' + String.fromCharCode(10)));
					}, p5list_to_a(p5sort(p5pkg["Perlito5::Dumper"], null, p5list_to_a(p5pkg["Perlito5::Dumper"].keys([(v_obj || (v_obj = new p5HashRef({})))._hash_], 1)))), false, "");
				return (p5context([p5pkg["Perlito5::Dumper"].join(['', p5list_to_a('bless({' + String.fromCharCode(10), List_out, v_tab, ('}, ' + String.fromCharCode(39) + p5str(v_ref) + String.fromCharCode(39) + ')'))], p5want)], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		var Hash_safe_char = {};
		Hash_safe_char = p5a_to_h([' ', 1, '!', 1, '"', 1, '#', 1, '$', 1, '%', 1, '&', 1, '(', 1, ')', 1, '*', 1, '+', 1, ',', 1, '-', 1, '.', 1, '/', 1, ':', 1, ';', 1, '<', 1, '=', 1, '>', 1, '?', 1, '@', 1, '[', 1, ']', 1, '^', 1, '_', 1, '`', 1, '{', 1, '|', 1, '}', 1, '~', 1]);
		p5typeglob_set("Perlito5::Dumper", "escape_string", p5sub(function (List__, p5want) {
			try {
				var v_s;
				v_s = (List__.shift());
				var List_out= [];
				var v_tmp;
				v_tmp = ('');
				if ( (p5str(v_s) == '') ) {
					(function () { throw(p5context([String.fromCharCode(39) + String.fromCharCode(39)], p5want)) })()
				};
				if ( (p5str((0 + p5num(v_s))) == p5str(v_s)) ) {
					(function () { throw(p5context([(0 + p5num(v_s))], p5want)) })()
				};
				p5for_lex(function (v_i) {
						var v_c;
						v_c = (p5pkg["Perlito5::Dumper"].substr([v_s, v_i, 1], 0));
						if ( (((((p5str(v_c) >= 'a') && (p5str(v_c) <= 'z')) || ((p5str(v_c) >= 'A') && (p5str(v_c) <= 'Z'))) || ((p5str(v_c) >= '0') && (p5str(v_c) <= '9'))) || (Hash_safe_char).hasOwnProperty(v_c)) ) {
							v_tmp = ((p5str(v_tmp) + p5str(v_c)));
						}
						else {
							if ( (p5str(v_tmp) != '') ) {
								List_out.p5push([(String.fromCharCode(39) + p5str(v_tmp) + String.fromCharCode(39))])
							};
							List_out.p5push([('chr(' + p5str(p5pkg["Perlito5::Dumper"].ord([v_c], 0)) + ')')]);
							v_tmp = ('');
						};
					}, p5list_to_a((function (a) { for (var i=0, l=(p5pkg["Perlito5::Dumper"].length([v_s], 0) - 1); i<=l; ++i){ a.push(i) }; return a })([])), false, "");
				if ( (p5str(v_tmp) != '') ) {
					List_out.p5push([(String.fromCharCode(39) + p5str(v_tmp) + String.fromCharCode(39))])
				};
				return (p5context([p5pkg["Perlito5::Dumper"].join([' . ', p5list_to_a(List_out)], p5want)], p5want));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		}, null));
		p5typeglob_set("Perlito5::Dumper", "_identity", p5sub(function (List__, p5want) {
			return (p5context([(p5str(List__.p5aget(0)) == p5str(List__.p5aget(1)))], p5want));
		}, null));
		1;
	})()
;
	(function () {
		null;
		// use Perlito5::AST
;
		// use Perlito5::Dumper
;
		// use strict
;
		p5make_package("Perlito5::Javascript2");
		p5for_lex(function () {
				var v_label_count;
				v_label_count = (100);
				var Hash_label = {};
				p5typeglob_set("Perlito5::Javascript2", "pkg", p5sub(function (List__, p5want) {
					return (p5context([('p5pkg["' + p5str(p5make_package("Perlito5")["v_PKG_NAME"]) + '"]')], p5want));
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "pkg_new_var", p5sub(function (List__, p5want) {
					return (Hash_label.p5hset(p5str(p5make_package("Perlito5")["v_PKG_NAME"]), (('p5' + p5str((function (_tmp) { v_label_count = p5incr_(_tmp); return _tmp })(v_label_count))))));
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "get_label", p5sub(function (List__, p5want) {
					return ((function (_tmp) { v_label_count = p5incr_(_tmp); return _tmp })(v_label_count));
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "tab", p5sub(function (List__, p5want) {
					var v_level;
					v_level = (List__.shift());
					return (p5str_replicate(String.fromCharCode(9), v_level));
				}, null));
				if (typeof p5pkg["Perlito5::Javascript2"]["Hash_op_prefix_js_str"] == "undefined" ) { p5pkg["Perlito5::Javascript2"]["Hash_op_prefix_js_str"] = {};};
				p5pkg["Perlito5::Javascript2"]["Hash_op_prefix_js_str"] = {'prefix:<-A>' : 'p5atime', 'prefix:<-C>' : 'p5ctime', 'prefix:<-M>' : 'p5mtime', 'prefix:<-d>' : 'p5is_directory', 'prefix:<-e>' : 'p5file_exists', 'prefix:<-f>' : 'p5is_file', 'prefix:<-s>' : 'p5size'};
				if (typeof p5pkg["Perlito5::Javascript2"]["Hash_op_infix_js_str"] == "undefined" ) { p5pkg["Perlito5::Javascript2"]["Hash_op_infix_js_str"] = {};};
				p5pkg["Perlito5::Javascript2"]["Hash_op_infix_js_str"] = {'infix:<eq>' : ' == ', 'infix:<ne>' : ' != ', 'infix:<le>' : ' <= ', 'infix:<ge>' : ' >= ', 'infix:<lt>' : ' < ', 'infix:<gt>' : ' > '};
				if (typeof p5pkg["Perlito5::Javascript2"]["Hash_op_infix_js_num"] == "undefined" ) { p5pkg["Perlito5::Javascript2"]["Hash_op_infix_js_num"] = {};};
				p5pkg["Perlito5::Javascript2"]["Hash_op_infix_js_num"] = {'infix:<==>' : ' == ', 'infix:<!=>' : ' != ', 'infix:<+>' : ' + ', 'infix:<->' : ' - ', 'infix:<*>' : ' * ', 'infix:</>' : ' / ', 'infix:<>>' : ' > ', 'infix:<<>' : ' < ', 'infix:<>=>' : ' >= ', 'infix:<<=>' : ' <= ', 'infix:<&>' : ' & ', 'infix:<|>' : ' | ', 'infix:<^>' : ' ^ ', 'infix:<>>>' : ' >>> '};
				if (typeof p5pkg["Perlito5::Javascript2"]["Hash_op_to_bool"] == "undefined" ) { p5pkg["Perlito5::Javascript2"]["Hash_op_to_bool"] = {};};
				p5pkg["Perlito5::Javascript2"]["Hash_op_to_bool"] = p5a_to_h(p5list_to_a(p5map(p5pkg["Perlito5::Javascript2"], function (p5want) {
return ((p5context([p5pkg["Perlito5::Javascript2"]["v__"], 1], p5want)));
						}, ['prefix:<!>', 'infix:<!=>', 'infix:<==>', 'infix:<<=>', 'infix:<>=>', 'infix:<>>', 'infix:<<>', 'infix:<eq>', 'infix:<ne>', 'infix:<ge>', 'infix:<le>', 'infix:<gt>', 'infix:<lt>', 'prefix:<not>', 'exists', 'defined'])));
				if (typeof p5pkg["Perlito5::Javascript2"]["Hash_op_to_str"] == "undefined" ) { p5pkg["Perlito5::Javascript2"]["Hash_op_to_str"] = {};};
				p5pkg["Perlito5::Javascript2"]["Hash_op_to_str"] = p5a_to_h(p5list_to_a(p5map(p5pkg["Perlito5::Javascript2"], function (p5want) {
return ((p5context([p5pkg["Perlito5::Javascript2"]["v__"], 1], p5want)));
						}, ['substr', 'join', 'list:<.>', 'chr'])));
				if (typeof p5pkg["Perlito5::Javascript2"]["Hash_op_to_num"] == "undefined" ) { p5pkg["Perlito5::Javascript2"]["Hash_op_to_num"] = {};};
				p5pkg["Perlito5::Javascript2"]["Hash_op_to_num"] = p5a_to_h(p5list_to_a(p5map(p5pkg["Perlito5::Javascript2"], function (p5want) {
return ((p5context([p5pkg["Perlito5::Javascript2"]["v__"], 1], p5want)));
						}, ['length', 'index', 'ord', 'oct', 'infix:<->', 'infix:<+>', 'infix:<*>', 'infix:</>', 'infix:<%>', 'infix:<**>'])));
				var Hash_safe_char = {};
				Hash_safe_char = p5a_to_h([' ', 1, '!', 1, '"', 1, '#', 1, '$', 1, '%', 1, '&', 1, '(', 1, ')', 1, '*', 1, '+', 1, ',', 1, '-', 1, '.', 1, '/', 1, ':', 1, ';', 1, '<', 1, '=', 1, '>', 1, '?', 1, '@', 1, '[', 1, ']', 1, '^', 1, '_', 1, '`', 1, '{', 1, '|', 1, '}', 1, '~', 1]);
				p5typeglob_set("Perlito5::Javascript2", "escape_string", p5sub(function (List__, p5want) {
					try {
						var v_s;
						v_s = (List__.shift());
						var List_out= [];
						var v_tmp;
						v_tmp = ('');
						if ( (p5str(v_s) == '') ) {
							(function () { throw(p5context([String.fromCharCode(39) + String.fromCharCode(39)], p5want)) })()
						};
						p5for_lex(function (v_i) {
								var v_c;
								v_c = (p5pkg["Perlito5::Javascript2"].substr([v_s, v_i, 1], 0));
								if ( (((((p5str(v_c) >= 'a') && (p5str(v_c) <= 'z')) || ((p5str(v_c) >= 'A') && (p5str(v_c) <= 'Z'))) || ((p5str(v_c) >= '0') && (p5str(v_c) <= '9'))) || (Hash_safe_char).hasOwnProperty(v_c)) ) {
									v_tmp = ((p5str(v_tmp) + p5str(v_c)));
								}
								else {
									if ( (p5str(v_tmp) != '') ) {
										List_out.p5push([(String.fromCharCode(39) + p5str(v_tmp) + String.fromCharCode(39))])
									};
									List_out.p5push([('String.fromCharCode(' + p5str(p5pkg["Perlito5::Javascript2"].ord([v_c], 0)) + ')')]);
									v_tmp = ('');
								};
							}, p5list_to_a((function (a) { for (var i=0, l=(p5pkg["Perlito5::Javascript2"].length([v_s], 0) - 1); i<=l; ++i){ a.push(i) }; return a })([])), false, "");
						if ( (p5str(v_tmp) != '') ) {
							List_out.p5push([(String.fromCharCode(39) + p5str(v_tmp) + String.fromCharCode(39))])
						};
						return (p5context([p5pkg["Perlito5::Javascript2"].join([' + ', p5list_to_a(List_out)], p5want)], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "to_str", p5sub(function (List__, p5want) {
					try {
						var v_cond;
						v_cond = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = ('scalar');
						if ( (((p5bool(p5call(v_cond, "isa", ['Perlito5::AST::Apply'], 0)) && (p5str(p5call(v_cond, "code", [], 0)) == 'circumfix:<( )>')) && p5bool((v_cond || (v_cond = new p5HashRef({})))._hash_.p5hget('arguments'))) && p5bool((v_cond || (v_cond = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)) ) {
							(function () { throw(p5pkg["Perlito5::Javascript2"].to_str(p5list_to_a((v_cond || (v_cond = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), v_level), p5want)) })();
						};
						if ( (p5bool(p5call(v_cond, "isa", ['Perlito5::AST::Val::Buf'], 0)) || (p5bool(p5call(v_cond, "isa", ['Perlito5::AST::Apply'], 0)) && (p5pkg["Perlito5::Javascript2"]["Hash_op_to_str"]).hasOwnProperty(p5call(v_cond, "code", [], p5want)))) ) {
							(function () { throw(p5call(v_cond, "emit_javascript2", [v_level, v_wantarray], p5want)) })()
						}
						else {
							(function () { throw(p5context([('p5str(' + p5str(p5call(v_cond, "emit_javascript2", [v_level, v_wantarray], 0)) + ')')], p5want)) })()
						}
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "to_num", p5sub(function (List__, p5want) {
					try {
						var v_cond;
						v_cond = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = ('scalar');
						if ( ((p5bool(p5call(v_cond, "isa", ['Perlito5::AST::Val::Int'], 0)) || p5bool(p5call(v_cond, "isa", ['Perlito5::AST::Val::Num'], 0))) || (p5bool(p5call(v_cond, "isa", ['Perlito5::AST::Apply'], 0)) && (p5pkg["Perlito5::Javascript2"]["Hash_op_to_num"]).hasOwnProperty(p5call(v_cond, "code", [], p5want)))) ) {
							(function () { throw(p5call(v_cond, "emit_javascript2", [v_level, v_wantarray], p5want)) })()
						}
						else {
							(function () { throw(p5context([('p5num(' + p5str(p5call(v_cond, "emit_javascript2", [v_level, v_wantarray], 0)) + ')')], p5want)) })()
						}
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "to_bool", p5sub(function (List__, p5want) {
					try {
						var v_cond;
						v_cond = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = ('scalar');
						if ( (((p5bool(p5call(v_cond, "isa", ['Perlito5::AST::Apply'], 0)) && (p5str(p5call(v_cond, "code", [], 0)) == 'circumfix:<( )>')) && p5bool((v_cond || (v_cond = new p5HashRef({})))._hash_.p5hget('arguments'))) && p5bool((v_cond || (v_cond = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)) ) {
							(function () { throw(p5pkg["Perlito5::Javascript2"].to_bool(p5list_to_a((v_cond || (v_cond = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), v_level), p5want)) })();
						};
						if ( (p5bool(p5call(v_cond, "isa", ['Perlito5::AST::Apply'], 0)) && ((p5str(p5call(v_cond, "code", [], 0)) == 'infix:<&&>') || (p5str(p5call(v_cond, "code", [], 0)) == 'infix:<and>'))) ) {
							(function () { throw(p5context([('(' + p5str(p5pkg["Perlito5::Javascript2"].to_bool(p5list_to_a((v_cond || (v_cond = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), v_level), 0)) + ' && ' + p5str(p5pkg["Perlito5::Javascript2"].to_bool(p5list_to_a((v_cond || (v_cond = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(1), v_level), 0)) + ')')], p5want)) })();
						};
						if ( (p5bool(p5call(v_cond, "isa", ['Perlito5::AST::Apply'], 0)) && ((p5str(p5call(v_cond, "code", [], 0)) == 'infix:<||>') || (p5str(p5call(v_cond, "code", [], 0)) == 'infix:<or>'))) ) {
							(function () { throw(p5context([('(' + p5str(p5pkg["Perlito5::Javascript2"].to_bool(p5list_to_a((v_cond || (v_cond = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), v_level), 0)) + ' || ' + p5str(p5pkg["Perlito5::Javascript2"].to_bool(p5list_to_a((v_cond || (v_cond = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(1), v_level), 0)) + ')')], p5want)) })();
						};
						if ( ((p5bool(p5call(v_cond, "isa", ['Perlito5::AST::Val::Int'], 0)) || p5bool(p5call(v_cond, "isa", ['Perlito5::AST::Val::Num'], 0))) || (p5bool(p5call(v_cond, "isa", ['Perlito5::AST::Apply'], 0)) && (p5pkg["Perlito5::Javascript2"]["Hash_op_to_bool"]).hasOwnProperty(p5call(v_cond, "code", [], p5want)))) ) {
							(function () { throw(p5call(v_cond, "emit_javascript2", [v_level, v_wantarray], p5want)) })()
						}
						else {
							(function () { throw(p5context([('p5bool(' + p5str(p5call(v_cond, "emit_javascript2", [v_level, v_wantarray], 0)) + ')')], p5want)) })()
						}
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "is_scalar", p5sub(function (List__, p5want) {
					return (p5and(p5and(p5and(p5and(p5and(!( p5bool(p5call(List__.p5aget(0), "isa", ['Perlito5::AST::Val::Int'], 0))), function () { return !( p5bool(p5call(List__.p5aget(0), "isa", ['Perlito5::AST::Val::Num'], 0))) }), function () { return !( p5bool(p5call(List__.p5aget(0), "isa", ['Perlito5::AST::Val::Buf'], 0))) }), function () { return !( p5bool(p5call(List__.p5aget(0), "isa", ['Perlito5::AST::Sub'], 0))) }), function () { return !( (p5bool(p5call(List__.p5aget(0), "isa", ['Perlito5::AST::Var'], 0)) && (p5str(List__.p5aget_hash(0)._hash_.p5hget('sigil')) == '$'))) }), function () { return !( (p5bool(p5call(List__.p5aget(0), "isa", ['Perlito5::AST::Apply'], 0)) && ((((p5pkg["Perlito5::Javascript2"]["Hash_op_to_str"]).hasOwnProperty(List__.p5aget_hash(0)._hash_.p5hget('code')) || (p5pkg["Perlito5::Javascript2"]["Hash_op_to_num"]).hasOwnProperty(List__.p5aget_hash(0)._hash_.p5hget('code'))) || (p5pkg["Perlito5::Javascript2"]["Hash_op_to_bool"]).hasOwnProperty(List__.p5aget_hash(0)._hash_.p5hget('code'))) || (p5str(List__.p5aget_hash(0)._hash_.p5hget('code')) == 'prefix:<' + String.fromCharCode(92) + '>')))) }));
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "to_list", p5sub(function (List__, p5want) {
					try {
						var v_items;
						v_items = (p5pkg["Perlito5::Javascript2"].to_list_preprocess(p5list_to_a(List__.p5aget(0)), 0));
						var v_level;
						v_level = (List__.p5aget(1));
						var v_literal_type;
						v_literal_type = (p5or(List__.p5aget(2), function () { return 'array' }));
						var v_wantarray;
						v_wantarray = ('list');
						var v_interpolate;
						v_interpolate = (0);
						p5for(p5make_package("Perlito5::Javascript2"), "v__", function () {
							if ( p5bool(p5pkg["Perlito5::Javascript2"].is_scalar([p5pkg["Perlito5::Javascript2"]["v__"]], 0)) ) {
									v_interpolate = (1)
								};
							}, p5list_to_a((v_items || (v_items = new p5ArrayRef([])))._array_), false, "");
						if ( (p5str(v_literal_type) == 'hash') ) {
							if ( !( p5bool(v_interpolate)) ) {
								(function () {
									var List_out= [];
									var v_printable;
									v_printable = (1);
									var List_in= [];
									List_in = p5list_to_a((v_items || (v_items = new p5ArrayRef([])))._array_);
									p5while(function () {
											var v_k;
											v_k = (List_in.shift());
											var v_v;
											v_v = (List_in.shift());
											v_k = (p5call(v_k, "emit_javascript2", [v_level, 0], 0));
											if ( p5bool((p5str(v_k).match(/[ \[]/) ? 1 : 0)) ) {
												v_printable = (0)
											};
											v_v = (( p5bool(v_v) ? p5call(v_v, "emit_javascript2", [v_level, 0], 0) : 'null'));
											List_out.p5push([(p5str(v_k) + ' : ' + p5str(v_v))]);
										}, function () { return List_in }, false, "");
									if ( p5bool(v_printable) ) {
										(function () { throw(p5context([('{' + p5pkg["Perlito5::Javascript2"].join([', ', p5list_to_a(List_out)], 0) + '}')], p5want)) })()
									};
								})();
							};
							(function () { throw(p5context([('p5a_to_h(' + p5str(p5pkg["Perlito5::Javascript2"].to_list([v_items, v_level, 'array'], 0)) + ')')], p5want)) })();
						};
						return (( p5bool(v_interpolate) ? p5context([('p5list_to_a(' + p5pkg["Perlito5::Javascript2"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::Javascript2"], function (p5want) {
return (p5call(p5pkg["Perlito5::Javascript2"]["v__"], "emit_javascript2", [v_level, v_wantarray], p5want));
}, p5list_to_a((v_items || (v_items = new p5ArrayRef([])))._array_)))], 0) + ')')], p5want) : p5context([('[' + p5pkg["Perlito5::Javascript2"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::Javascript2"], function (p5want) {
return (p5call(p5pkg["Perlito5::Javascript2"]["v__"], "emit_javascript2", [v_level, v_wantarray], p5want));
}, p5list_to_a((v_items || (v_items = new p5ArrayRef([])))._array_)))], 0) + ']')], p5want)));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "to_list_preprocess", p5sub(function (List__, p5want) {
					var List_items= [];
					p5for_lex(function (v_item) {
								if ( (p5bool(p5call(v_item, "isa", ['Perlito5::AST::Apply'], 0)) && (((p5str(p5call(v_item, "code", [], 0)) == 'circumfix:<( )>') || (p5str(p5call(v_item, "code", [], 0)) == 'list:<,>')) || (p5str(p5call(v_item, "code", [], 0)) == 'infix:<=>>'))) ) {
									if ( (p5bool(p5call(v_item, "isa", ['Perlito5::AST::Apply'], 0)) && (p5str(p5call(v_item, "code", [], 0)) == 'infix:<=>>')) ) {
										(v_item || (v_item = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aset(0, (p5call(p5pkg["Perlito5::AST::Lookup"], "autoquote", p5list_to_a((v_item || (v_item = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0)), 0)));
									};
									p5for_lex(function (v_arg) {
											List_items.p5push([v_arg]);
										}, p5list_to_a((p5pkg["Perlito5::Javascript2"].to_list_preprocess(p5list_to_a(p5call(v_item, "arguments", [], 1)), p5want) || (p5pkg["Perlito5::Javascript2"].to_list_preprocess(p5list_to_a(p5call(v_item, "arguments", [], 1)), p5want) = new p5ArrayRef([])))._array_), false, "");
								}
								else {
									List_items.p5push([v_item]);
								};
							}, p5list_to_a(List__.p5aget_array(0)._array_), false, "");
					return (p5context([(new p5ArrayRef(List_items))], p5want));
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "to_scalar", p5sub(function (List__, p5want) {
					var v_items;
					v_items = (p5pkg["Perlito5::Javascript2"].to_scalar_preprocess(p5list_to_a(List__.p5aget(0)), 0));
					var v_level;
					v_level = (List__.p5aget(1));
					var v_wantarray;
					v_wantarray = ('scalar');
					return (( p5bool((v_items || (v_items = new p5ArrayRef([])))._array_) ? ('(' + p5pkg["Perlito5::Javascript2"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::Javascript2"], function (p5want) {
return (p5call(p5pkg["Perlito5::Javascript2"]["v__"], "emit_javascript2", [v_level, v_wantarray], p5want));
}, p5list_to_a((v_items || (v_items = new p5ArrayRef([])))._array_)))], 0) + ')') : 'null'));
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "to_scalar_preprocess", p5sub(function (List__, p5want) {
					var List_items= [];
					p5for_lex(function (v_item) {
								if ( (p5bool(p5call(v_item, "isa", ['Perlito5::AST::Apply'], 0)) && ((p5str(p5call(v_item, "code", [], 0)) == 'list:<,>') || (p5str(p5call(v_item, "code", [], 0)) == 'infix:<=>>'))) ) {
									if ( (p5bool(p5call(v_item, "isa", ['Perlito5::AST::Apply'], 0)) && (p5str(p5call(v_item, "code", [], 0)) == 'infix:<=>>')) ) {
										(v_item || (v_item = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aset(0, (p5call(p5pkg["Perlito5::AST::Lookup"], "autoquote", p5list_to_a((v_item || (v_item = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0)), 0)));
									};
									p5for_lex(function (v_arg) {
											List_items.p5push([v_arg]);
										}, p5list_to_a((p5pkg["Perlito5::Javascript2"].to_scalar_preprocess(p5list_to_a(p5call(v_item, "arguments", [], 1)), p5want) || (p5pkg["Perlito5::Javascript2"].to_scalar_preprocess(p5list_to_a(p5call(v_item, "arguments", [], 1)), p5want) = new p5ArrayRef([])))._array_), false, "");
								}
								else {
									List_items.p5push([v_item]);
								};
							}, p5list_to_a(List__.p5aget_array(0)._array_), false, "");
					return (p5context([(new p5ArrayRef(List_items))], p5want));
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "to_runtime_context", p5sub(function (List__, p5want) {
					try {
						var v_items;
						v_items = (p5pkg["Perlito5::Javascript2"].to_scalar_preprocess(p5list_to_a(List__.p5aget(0)), 0));
						var v_level;
						v_level = (List__.p5aget(1));
						var v_wantarray;
						v_wantarray = ('runtime');
						if ( ((p5num((v_items || (v_items = new p5ArrayRef([])))._array_) == 1) && p5bool(p5pkg["Perlito5::Javascript2"].is_scalar(p5list_to_a((v_items || (v_items = new p5ArrayRef([])))._array_.p5aget(0)), 0))) ) {
							(function () { throw(p5call((v_items || (v_items = new p5ArrayRef([])))._array_.p5aget(0), "emit_javascript2", [v_level, v_wantarray], p5want)) })()
						};
						return (p5context([('p5context(' + '[' + p5pkg["Perlito5::Javascript2"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::Javascript2"], function (p5want) {
return (p5call(p5pkg["Perlito5::Javascript2"]["v__"], "emit_javascript2", [v_level, v_wantarray], p5want));
}, p5list_to_a((v_items || (v_items = new p5ArrayRef([])))._array_)))], 0) + ']' + ', p5want)')], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "autoquote", p5sub(function (List__, p5want) {
					var v_index;
					v_index = (List__.shift());
					var v_level;
					v_level = (List__.shift());
					v_index = (p5call(p5pkg["Perlito5::AST::Lookup"], "autoquote", [v_index], 0));
					return (p5pkg["Perlito5::Javascript2"].to_str([v_index, v_level], p5want));
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "emit_javascript2_autovivify", p5sub(function (List__, p5want) {
					try {
						var v_obj;
						v_obj = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_type;
						v_type = (List__.shift());
						if ( ((p5bool(p5call(v_obj, "isa", ['Perlito5::AST::Index'], 0)) || p5bool(p5call(v_obj, "isa", ['Perlito5::AST::Lookup'], 0))) || p5bool(p5call(v_obj, "isa", ['Perlito5::AST::Call'], 0))) ) {
							(function () { throw(p5call(v_obj, "emit_javascript2", [v_level, 0, v_type], p5want)) })();
						};
						return (p5context([('(' + p5str(p5call(v_obj, "emit_javascript2", [v_level], 0)) + ' || (' + p5str(p5call(v_obj, "emit_javascript2", [v_level], 0)) + ' = ' + p5str(( (p5str(v_type) == 'array') ? 'new p5ArrayRef([])' : ( (p5str(v_type) == 'hash') ? 'new p5HashRef({})' : 'new p5ScalarRef(null)'))) + ')' + ')')], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "emit_function_javascript2", p5sub(function (List__, p5want) {
					try {
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						var v_argument;
						v_argument = (List__.shift());
						if ( (p5bool(p5call(v_argument, "isa", ['Perlito5::AST::Apply'], 0)) && (p5str(p5call(v_argument, "code", [], 0)) == 'return')) ) {
							(function () { throw(p5context([('function () { ' + p5str(p5call(v_argument, "emit_javascript2", [v_level, v_wantarray], 0)) + ' }')], p5want)) })();
						};
						return (p5context([('function () { return ' + p5str(p5call(v_argument, "emit_javascript2", [v_level, v_wantarray], 0)) + ' }')], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::Javascript2", "emit_wrap_statement_javascript2", p5sub(function (List__, p5want) {
					var v_wantarray;
					v_wantarray = (List__.shift());
					var v_argument;
					v_argument = (List__.shift());
					return (p5context([('(function () { ' + p5str(v_argument) + ' })()')], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::Javascript2::LexicalBlock");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::Javascript2::LexicalBlock", "new", p5sub(function (List__, p5want) {
					var v_class;
					v_class = (List__.shift());
					return (p5pkg["Perlito5::Javascript2::LexicalBlock"].bless([(new p5HashRef(p5a_to_h(p5list_to_a(List__)))), v_class], p5want));
				}, null));
				p5typeglob_set("Perlito5::Javascript2::LexicalBlock", "block", p5sub(function (List__, p5want) {
					return (List__.p5aget_hash(0)._hash_.p5hget('block'));
				}, null));
				p5typeglob_set("Perlito5::Javascript2::LexicalBlock", "needs_return", p5sub(function (List__, p5want) {
					return (List__.p5aget_hash(0)._hash_.p5hget('needs_return'));
				}, null));
				p5typeglob_set("Perlito5::Javascript2::LexicalBlock", "top_level", p5sub(function (List__, p5want) {
					return (List__.p5aget_hash(0)._hash_.p5hget('top_level'));
				}, null));
				p5typeglob_set("Perlito5::Javascript2::LexicalBlock", "has_decl", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.p5aget(0));
						var v_type;
						v_type = (List__.p5aget(1));
						p5for_lex(function (v_decl) {
								if ( p5bool(p5grep(p5pkg["Perlito5::Javascript2::LexicalBlock"], function (p5want) {
return (p5context([(p5str((p5pkg["Perlito5::Javascript2::LexicalBlock"]["v__"] || (p5pkg["Perlito5::Javascript2::LexicalBlock"]["v__"] = new p5HashRef({})))._hash_.p5hget('decl')) == p5str(v_type))], p5want));
									}, p5list_to_a(p5call(v_decl, "emit_javascript2_get_decl", [], 1)))) ) {
									(function () { throw(p5context([1], p5want)) })()
								};
							}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('block')._array_), false, "");
						return (p5context([0], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::Javascript2::LexicalBlock", "emit_javascript2", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						var v_original_level;
						v_original_level = (v_level);
						var List_block= [];
						p5for(p5make_package("Perlito5::Javascript2::LexicalBlock"), "v__", function () {
							if ( (p5pkg["Perlito5::Javascript2::LexicalBlock"]["v__"] != null) ) {
									List_block.p5push([p5pkg["Perlito5::Javascript2::LexicalBlock"]["v__"]]);
								};
							}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('block')._array_), false, "");
						if ( !( p5bool(List_block.length)) ) {
							(function () { throw(p5context(['null;'], p5want)) })();
						};
						var List_str= [];
						var v_has_local;
						v_has_local = (p5call(v_self, "has_decl", ['local'], 0));
						var v_create_context;
						v_create_context = (p5and((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('create_context'), function () { return p5call(v_self, "has_decl", ['my'], 0) }));
						var v_outer_pkg;
						v_outer_pkg = (p5make_package("Perlito5")["v_PKG_NAME"]);
						var v_outer_throw;
						v_outer_throw = (p5make_package("Perlito5")["v_THROW"]);
						(p5make_package("Perlito5")["v_VAR"] || (p5make_package("Perlito5")["v_VAR"] = new p5ArrayRef([])))._array_.p5unshift(p5list_to_a((new p5HashRef({}))));
						if ( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('top_level')) ) {
							p5make_package("Perlito5")["v_THROW"] = (0)
						};
						if ( (p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('top_level')) || p5bool(v_create_context)) ) {
							(function (_tmp) { v_level = p5incr_(_tmp); return _tmp })(v_level);
						};
						var v_last_statement;
						if ( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('needs_return')) ) {
							v_last_statement = (List_block.pop());
						};
						p5for_lex(function (v_decl) {
								if ( ((p5str(p5pkg["Perlito5::Javascript2::LexicalBlock"].ref([v_decl], 0)) == 'Perlito5::AST::Apply') && (p5str(p5call(v_decl, "code", [], 0)) == 'package')) ) {
									p5make_package("Perlito5")["v_PKG_NAME"] = ((v_decl || (v_decl = new p5HashRef({})))._hash_.p5hget('namespace'));
									(p5make_package("Perlito5")["v_VAR"] || (p5make_package("Perlito5")["v_VAR"] = new p5ArrayRef([])))._array_.p5aget_hash(0)._hash_.p5hset('$_', ((new p5HashRef({'decl' : 'our', 'namespace' : p5make_package("Perlito5")["v_PKG_NAME"]}))));
									(p5make_package("Perlito5")["v_VAR"] || (p5make_package("Perlito5")["v_VAR"] = new p5ArrayRef([])))._array_.p5aget_hash(0)._hash_.p5hset('$a', ((new p5HashRef({'decl' : 'our', 'namespace' : p5make_package("Perlito5")["v_PKG_NAME"]}))));
									(p5make_package("Perlito5")["v_VAR"] || (p5make_package("Perlito5")["v_VAR"] = new p5ArrayRef([])))._array_.p5aget_hash(0)._hash_.p5hset('$b', ((new p5HashRef({'decl' : 'our', 'namespace' : p5make_package("Perlito5")["v_PKG_NAME"]}))));
									(p5make_package("Perlito5")["v_VAR"] || (p5make_package("Perlito5")["v_VAR"] = new p5ArrayRef([])))._array_.p5aget_hash(0)._hash_.p5hset('$AUTOLOAD', ((new p5HashRef({'decl' : 'our', 'namespace' : p5make_package("Perlito5")["v_PKG_NAME"]}))));
								};
								var List_var_decl= [];
								List_var_decl = p5list_to_a(p5call(v_decl, "emit_javascript2_get_decl", [], 1));
								p5for_lex(function (v_arg) {
										List_str.p5push(p5list_to_a(p5call(v_arg, "emit_javascript2_init", [], 1)));
									}, p5list_to_a(List_var_decl), false, "");
								if ( !( (p5bool(p5call(v_decl, "isa", ['Perlito5::AST::Decl'], 0)) && (p5str(p5call(v_decl, "decl", [], 0)) == 'my'))) ) {
									List_str.p5push([(p5str(p5call(v_decl, "emit_javascript2", [v_level, 'void'], 0)) + ';')]);
								};
							}, p5list_to_a(List_block), false, "");
						if ( (p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('needs_return')) && p5bool(v_last_statement)) ) {
							(function () {
								var List_var_decl= [];
								List_var_decl = p5list_to_a(p5call(v_last_statement, "emit_javascript2_get_decl", [], 1));
								p5for_lex(function (v_arg) {
										List_str.p5push(p5list_to_a(p5call(v_arg, "emit_javascript2_init", [], 1)));
									}, p5list_to_a(List_var_decl), false, "");
								if ( (((p5bool(p5call(v_last_statement, "isa", ['Perlito5::AST::Apply'], 0)) && (p5str(p5call(v_last_statement, "code", [], 0)) == 'return')) && p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('top_level'))) && p5bool((v_last_statement || (v_last_statement = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)) ) {
									v_last_statement = ((v_last_statement || (v_last_statement = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
								};
								if ( ((((((p5bool(p5call(v_last_statement, "isa", ['Perlito5::AST::For'], 0)) || p5bool(p5call(v_last_statement, "isa", ['Perlito5::AST::While'], 0))) || p5bool(p5call(v_last_statement, "isa", ['Perlito5::AST::If'], 0))) || p5bool(p5call(v_last_statement, "isa", ['Perlito5::AST::Lit::Block'], 0))) || p5bool(p5call(v_last_statement, "isa", ['Perlito5::AST::Use'], 0))) || (p5bool(p5call(v_last_statement, "isa", ['Perlito5::AST::Apply'], 0)) && (p5str(p5call(v_last_statement, "code", [], 0)) == 'goto'))) || (p5bool(p5call(v_last_statement, "isa", ['Perlito5::AST::Apply'], 0)) && (p5str(p5call(v_last_statement, "code", [], 0)) == 'return'))) ) {
									List_str.p5push(p5list_to_a(p5call(v_last_statement, "emit_javascript2", [v_level, 'runtime'], 1)));
								}
								else if ( p5bool(v_has_local) ) {
									List_str.p5push([('return p5cleanup_local(local_idx, (' + p5str(p5pkg["Perlito5::Javascript2"].to_runtime_context(p5list_to_a((new p5ArrayRef([v_last_statement])), v_level), 0)) + '));')]);
								}
								else {
									List_str.p5push([('return (' + p5str(p5pkg["Perlito5::Javascript2"].to_runtime_context(p5list_to_a((new p5ArrayRef([v_last_statement])), v_level), 0)) + ');')]);
								};
							})();
						};
						if ( p5bool(v_has_local) ) {
							List_str.p5unshift(['var local_idx = p5LOCAL.length;']);
							List_str.p5push(['p5cleanup_local(local_idx, null);']);
						};
						var v_out;
						if ( (p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('top_level')) && p5bool(p5make_package("Perlito5")["v_THROW"])) ) {
							(function () {
								v_level = (v_original_level);
								var v_tab;
								v_tab = ((String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0))));
								v_out = (('try {' + p5str(v_tab) + p5pkg["Perlito5::Javascript2::LexicalBlock"].join([v_tab, p5list_to_a(List_str)], 0) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '}' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + 'catch(err) {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + 'if ( err instanceof Error ) {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 2)], 0)) + 'throw(err);' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + '}' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + 'else {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 2)], 0)) + p5str(( p5bool(v_has_local) ? 'return p5cleanup_local(local_idx, err)' : 'return(err)')) + ';' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + '}' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '}'));
							})();
						}
						else if ( p5bool(v_create_context) ) {
							(function () {
								v_level = (v_original_level);
								var v_tab;
								v_tab = ((String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0))));
								v_out = (('(function () {' + p5str(v_tab) + p5pkg["Perlito5::Javascript2::LexicalBlock"].join([v_tab, p5list_to_a(List_str)], 0) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '})();'));
							})();
						}
						else {
							(function () {
								v_level = (v_original_level);
								var v_tab;
								v_tab = ((String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0))));
								v_out = (p5pkg["Perlito5::Javascript2::LexicalBlock"].join([v_tab, p5list_to_a(List_str)], 0));
							})();
						};
						p5make_package("Perlito5")["v_PKG_NAME"] = (v_outer_pkg);
						if ( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('top_level')) ) {
							p5make_package("Perlito5")["v_THROW"] = (v_outer_throw)
						};
						(p5make_package("Perlito5")["v_VAR"] || (p5make_package("Perlito5")["v_VAR"] = new p5ArrayRef([])))._array_.shift();
						return (p5context([v_out], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::CompUnit");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::CompUnit", "emit_javascript2", p5sub(function (List__, p5want) {
					var v_self;
					v_self = (List__.p5aget(0));
					var v_level;
					v_level = (List__.p5aget(1));
					var v_str;
					v_str = (('(function () {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + p5str(p5call(p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", p5list_to_a('block', (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body'), 'needs_return', 0), 0), "emit_javascript2", [(p5num(v_level) + 1)], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '})()' + String.fromCharCode(10)));
					return (p5context([v_str], p5want));
				}, null));
				p5typeglob_set("Perlito5::AST::CompUnit", "emit_javascript2_program", p5sub(function (List__, p5want) {
					var v_comp_units;
					v_comp_units = (List__.shift());
					p5make_package("Perlito5")["v_PKG_NAME"] = ('main');
					var v_str;
					v_str = (('' + 'var p5want;' + String.fromCharCode(10) + 'var List__ = [];' + String.fromCharCode(10) + 'var ' + p5str(p5pkg["Perlito5::Javascript2"].pkg_new_var([], 0)) + ' = p5pkg[' + String.fromCharCode(39) + p5str(p5make_package("Perlito5")["v_PKG_NAME"]) + String.fromCharCode(39) + '];' + String.fromCharCode(10)));
					p5make_package("Perlito5")["v_VAR"] = ((new p5ArrayRef(p5list_to_a((new p5HashRef(p5a_to_h(p5list_to_a('@_', (new p5HashRef({'decl' : 'my'})), '$@', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$|', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$/', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$"', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$,', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$!', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$;', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$?', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$[', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$^O', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$^V', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '%ENV', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '%INC', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@#', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@ARGV', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '@INC', (new p5HashRef({'decl' : 'our', 'namespace' : 'main'})), '$_', (new p5HashRef({'decl' : 'our', 'namespace' : p5make_package("Perlito5")["v_PKG_NAME"]})), '$a', (new p5HashRef({'decl' : 'our', 'namespace' : p5make_package("Perlito5")["v_PKG_NAME"]})), '$b', (new p5HashRef({'decl' : 'our', 'namespace' : p5make_package("Perlito5")["v_PKG_NAME"]})), '$AUTOLOAD', (new p5HashRef({'decl' : 'our', 'namespace' : p5make_package("Perlito5")["v_PKG_NAME"]}))))))))));
					p5for_lex(function (v_comp_unit) {
								v_str = ((p5str(v_str) + p5str(p5call(v_comp_unit, "emit_javascript2", [], 0)) + String.fromCharCode(10)));
							}, p5list_to_a((v_comp_units || (v_comp_units = new p5ArrayRef([])))._array_), false, "");
					return (p5context([v_str], p5want));
				}, null));
				p5typeglob_set("Perlito5::AST::CompUnit", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Val::Int");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::Val::Int", "emit_javascript2", p5sub(function (List__, p5want) {
					var v_self;
					v_self = (List__.shift());
					var v_level;
					v_level = (List__.shift());
					return ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('int'));
				}, null));
				p5typeglob_set("Perlito5::AST::Val::Int", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Val::Num");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::Val::Num", "emit_javascript2", p5sub(function (List__, p5want) {
					var v_self;
					v_self = (List__.shift());
					var v_level;
					v_level = (List__.shift());
					return ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('num'));
				}, null));
				p5typeglob_set("Perlito5::AST::Val::Num", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Val::Buf");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::Val::Buf", "emit_javascript2", p5sub(function (List__, p5want) {
					var v_self;
					v_self = (List__.shift());
					var v_level;
					v_level = (List__.shift());
					return (p5pkg["Perlito5::Javascript2"].escape_string(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('buf')), p5want));
				}, null));
				p5typeglob_set("Perlito5::AST::Val::Buf", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Lit::Block");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::Lit::Block", "emit_javascript2", p5sub(function (List__, p5want) {
					var v_self;
					v_self = (List__.shift());
					var v_level;
					v_level = (List__.shift());
					var v_wantarray;
					v_wantarray = (List__.shift());
					var v_body;
					if ( (p5str(v_wantarray) == 'runtime') ) {
							v_body = (p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", p5list_to_a('block', (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('stmts'), 'needs_return', 1), 0));
						}
						else {
							v_body = (p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", p5list_to_a('block', (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('stmts'), 'needs_return', 0, 'top_level', 0), 0));
						};
					var v_init;
					v_init = ('');
					if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('name')) == 'INIT') ) {
							(function () {
								var v_tmp;
								v_tmp = (('p5pkg.main._tmp' + p5str(p5pkg["Perlito5::Javascript2"].get_label([], 0))));
								v_init = ((p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 2)], 0)) + ('if (' + p5str(v_tmp) + ') { return }; ' + p5str(v_tmp) + ' = 1;' + String.fromCharCode(10))));
							})();
						};
					return (p5context([('p5for_lex(' + 'function () {' + String.fromCharCode(10) + p5str(v_init) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 2)], 0)) + p5str(p5call(v_body, "emit_javascript2", [(p5num(v_level) + 2)], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + '}, ' + '[0], ' + p5str(p5call(v_self, "emit_javascript2_continue", [v_level], 0)) + ', ' + '"' + p5str(p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('label'), function () { return '' })) + '"' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + ')')], p5want));
				}, null));
				p5typeglob_set("Perlito5::AST::Lit::Block", "emit_javascript2_continue", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						if ( (!( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('continue'))) || !( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('continue')._hash_.p5hget_array('stmts')._array_))) ) {
							(function () { throw(p5context(['false'], p5want)) })();
						};
						return (p5context([('function () {' + String.fromCharCode(10) + p5str(p5call(p5context([p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", p5list_to_a('block', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('continue'), "stmts", [], 1), 'needs_return', 0, 'top_level', 0), 0)], 0), "emit_javascript2", [(p5num(v_level) + 2)], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + '}')], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Lit::Block", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Index");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::Index", "emit_javascript2", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						var v_autovivification_type;
						v_autovivification_type = (List__.shift());
						var v_method;
						v_method = (p5or(v_autovivification_type, function () { return 'p5aget' }));
						if ( (p5str(v_autovivification_type) == 'array') ) {
							v_method = ('p5aget_array')
						};
						if ( (p5str(v_autovivification_type) == 'hash') ) {
							v_method = ('p5aget_hash')
						};
						if ( ((p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Apply'], 0)) && (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('obj')._hash_.p5hget('code')) == 'prefix:<@>')) || (p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "sigil", [], 0)) == '@'))) ) {
							(function () { throw(p5context([('(function (a, v) { ' + 'var src=' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "emit_javascript2", [v_level], 0)) + '; ' + 'for (var i=0, l=v.length; ' + 'i<l; ++i)' + '{ ' + 'a.push(src.' + p5str(v_method) + '(v[i])) ' + '}; ' + 'return a ' + '})(' + '[], ' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((new p5ArrayRef(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('index_exp')))), v_level), 0)) + ')')], p5want)) })();
						};
						return (p5context([(p5str(p5call(v_self, "emit_javascript2_container", [v_level], 0)) + '.' + p5str(v_method) + '(' + p5str(p5pkg["Perlito5::Javascript2"].to_num(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('index_exp'), v_level), 0)) + ')')], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Index", "emit_javascript2_set", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_arguments;
						v_arguments = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						if ( ((p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Apply'], 0)) && (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('obj')._hash_.p5hget('code')) == 'prefix:<@>')) || (p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "sigil", [], 0)) == '@'))) ) {
							(function () { throw(p5context([('(function (a, v) {' + String.fromCharCode(10) + 'var src=' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((new p5ArrayRef([v_arguments])), v_level), 0)) + ';' + String.fromCharCode(10) + 'var out=' + p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), v_level, 'array'), 0)) + ';' + String.fromCharCode(10) + 'var tmp' + ';' + String.fromCharCode(10) + 'for (var i=0, l=v.length; ' + 'i<l; ++i) {' + String.fromCharCode(10) + 'tmp = src.p5aget(i); ' + 'out.p5aset(v[i], tmp); ' + 'a.push(tmp) ' + '}; ' + 'return a ' + '})(' + '[], ' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((new p5ArrayRef(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('index_exp')))), v_level), 0)) + ')')], p5want)) })();
						};
						return (p5context([(p5str(p5call(v_self, "emit_javascript2_container", [v_level], 0)) + '.p5aset(' + p5str(p5pkg["Perlito5::Javascript2"].to_num(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('index_exp'), (p5num(v_level) + 1)), 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].to_scalar(p5list_to_a((new p5ArrayRef([v_arguments])), (p5num(v_level) + 1)), 0)) + ')')], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Index", "emit_javascript2_set_list", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_list;
						v_list = (List__.shift());
						if ( ((p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Apply'], 0)) && (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('obj')._hash_.p5hget('code')) == 'prefix:<@>')) || (p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "sigil", [], 0)) == '@'))) ) {
							(function () { throw(p5context([('(function (a, v) {' + String.fromCharCode(10) + 'var out=' + p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), v_level, 'array'), 0)) + ';' + String.fromCharCode(10) + 'var tmp' + ';' + String.fromCharCode(10) + 'for (var i=0, l=v.length; ' + 'i<l; ++i) {' + String.fromCharCode(10) + 'tmp = ' + p5str(v_list) + '.shift(); ' + 'out.p5aset(v[i], tmp); ' + 'a.push(tmp) ' + '}; ' + 'return a ' + '})(' + '[], ' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((new p5ArrayRef(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('index_exp')))), v_level), 0)) + ')')], p5want)) })();
						};
						return (p5context([(p5str(p5call(v_self, "emit_javascript2_container", [v_level], 0)) + '.p5aset(' + p5str(p5pkg["Perlito5::Javascript2"].to_num(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('index_exp'), (p5num(v_level) + 1)), 0)) + ', ' + p5str(v_list) + '.shift()' + ')')], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Index", "emit_javascript2_container", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						if ( (p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "sigil", [], 0)) == '$')) ) {
							var v_v;
							v_v = (p5call(p5pkg["Perlito5::AST::Var"], "new", p5list_to_a('sigil', '@', 'namespace', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "namespace", [], 1), 'name', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "name", [], 1)), 0));
							(function () { throw(p5call(v_v, "emit_javascript2", [v_level], p5want)) })()
						}
						else if ( (p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Apply'], 0)) && (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('obj')._hash_.p5hget('code')) == 'prefix:<$>')) ) {
							(function () { throw(p5context([(p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('obj')._hash_.p5hget_array('arguments')._array_.p5aget(0), v_level, 'array'), 0)) + '._array_')], p5want)) })()
						}
						else {
							(function () { throw(p5context([(p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), v_level, 'array'), 0)) + '._array_')], p5want)) })()
						}
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Index", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Lookup");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::Lookup", "emit_javascript2", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						var v_autovivification_type;
						v_autovivification_type = (List__.shift());
						var v_method;
						v_method = (p5or(v_autovivification_type, function () { return 'p5hget' }));
						if ( (p5str(v_autovivification_type) == 'array') ) {
							v_method = ('p5hget_array')
						};
						if ( (p5str(v_autovivification_type) == 'hash') ) {
							v_method = ('p5hget_hash')
						};
						if ( ((p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Apply'], 0)) && (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('obj')._hash_.p5hget('code')) == 'prefix:<@>')) || (p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "sigil", [], 0)) == '@'))) ) {
							(function () {
								var v_v;
								if ( p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Var'], 0)) ) {
									v_v = (p5call(p5pkg["Perlito5::AST::Var"], "new", p5list_to_a('sigil', '%', 'namespace', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "namespace", [], 1), 'name', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "name", [], 1)), 0))
								};
								if ( p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Apply'], 0)) ) {
									v_v = (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'prefix:<%>', 'namespace', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "namespace", [], 1), 'arguments', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "arguments", [], 1)), 0))
								};
								(function () { throw(p5context([('(function (a, v) { ' + 'var src=' + p5str(p5call(v_v, "emit_javascript2", [v_level], 0)) + '; ' + 'for (var i=0, l=v.length; ' + 'i<l; ++i)' + '{ ' + 'a.push(src.p5hget(v[i])) ' + '}; ' + 'return a ' + '})(' + '[], ' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((new p5ArrayRef(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('index_exp')))), v_level), 0)) + ')')], p5want)) })();
							})();
						};
						return (p5context([(p5str(p5call(v_self, "emit_javascript2_container", [v_level], 0)) + '.' + p5str(v_method) + '(' + p5str(p5pkg["Perlito5::Javascript2"].autoquote(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('index_exp'), v_level), 0)) + ')')], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Lookup", "emit_javascript2_set", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_arguments;
						v_arguments = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						if ( ((p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Apply'], 0)) && (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('obj')._hash_.p5hget('code')) == 'prefix:<@>')) || (p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "sigil", [], 0)) == '@'))) ) {
							(function () {
								var v_v;
								if ( p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Var'], 0)) ) {
									v_v = (p5call(p5pkg["Perlito5::AST::Var"], "new", p5list_to_a('sigil', '%', 'namespace', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "namespace", [], 1), 'name', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "name", [], 1)), 0))
								};
								if ( p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Apply'], 0)) ) {
									v_v = (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'prefix:<%>', 'namespace', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "namespace", [], 1), 'arguments', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "arguments", [], 1)), 0))
								};
								(function () { throw(p5context([('(function (a, v) { ' + 'var src=' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((new p5ArrayRef([v_arguments])), v_level), 0)) + ';' + String.fromCharCode(10) + 'var out=' + p5str(p5call(v_v, "emit_javascript2", [v_level], 0)) + ';' + String.fromCharCode(10) + 'var tmp' + ';' + String.fromCharCode(10) + 'for (var i=0, l=v.length; ' + 'i<l; ++i)' + '{ ' + 'tmp = src.p5hget(i); ' + 'out.p5hset(v[i], tmp); ' + 'a.push(tmp) ' + '}; ' + 'return a ' + '})(' + '[], ' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((new p5ArrayRef(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('index_exp')))), v_level), 0)) + ')')], p5want)) })();
							})();
						};
						return (p5context([(p5str(p5call(v_self, "emit_javascript2_container", [v_level], 0)) + '.p5hset(' + p5str(p5pkg["Perlito5::Javascript2"].autoquote(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('index_exp'), v_level), 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].to_scalar(p5list_to_a((new p5ArrayRef([v_arguments])), (p5num(v_level) + 1)), 0)) + ')')], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Lookup", "emit_javascript2_set_list", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_list;
						v_list = (List__.shift());
						if ( ((p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Apply'], 0)) && (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('obj')._hash_.p5hget('code')) == 'prefix:<@>')) || (p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "sigil", [], 0)) == '@'))) ) {
							(function () {
								var v_v;
								if ( p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Var'], 0)) ) {
									v_v = (p5call(p5pkg["Perlito5::AST::Var"], "new", p5list_to_a('sigil', '%', 'namespace', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "namespace", [], 1), 'name', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "name", [], 1)), 0))
								};
								if ( p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Apply'], 0)) ) {
									v_v = (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'prefix:<%>', 'namespace', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "namespace", [], 1), 'arguments', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "arguments", [], 1)), 0))
								};
								(function () { throw(p5context([('(function (a, v) { ' + 'var out=' + p5str(p5call(v_v, "emit_javascript2", [v_level], 0)) + ';' + String.fromCharCode(10) + 'var tmp' + ';' + String.fromCharCode(10) + 'for (var i=0, l=v.length; ' + 'i<l; ++i)' + '{ ' + 'tmp = ' + p5str(v_list) + '.shift(); ' + 'out.p5hset(v[i], tmp); ' + 'a.push(tmp) ' + '}; ' + 'return a ' + '})(' + '[], ' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((new p5ArrayRef(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('index_exp')))), v_level), 0)) + ')')], p5want)) })();
							})();
						};
						return (p5context([(p5str(p5call(v_self, "emit_javascript2_container", [v_level], 0)) + '.p5hset(' + p5str(p5pkg["Perlito5::Javascript2"].autoquote(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('index_exp'), v_level), 0)) + ', ' + p5str(v_list) + '.shift()' + ')')], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Lookup", "emit_javascript2_container", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						if ( (p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "sigil", [], 0)) == '$')) ) {
							var v_v;
							v_v = (p5call(p5pkg["Perlito5::AST::Var"], "new", p5list_to_a('sigil', '%', 'namespace', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "namespace", [], 1), 'name', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "name", [], 1)), 0));
							(function () { throw(p5call(v_v, "emit_javascript2", [v_level], p5want)) })()
						}
						else if ( (p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), "isa", ['Perlito5::AST::Apply'], 0)) && (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('obj')._hash_.p5hget('code')) == 'prefix:<$>')) ) {
							(function () { throw(p5context([(p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('obj')._hash_.p5hget_array('arguments')._array_.p5aget(0), v_level, 'hash'), 0)) + '._hash_')], p5want)) })()
						}
						else {
							(function () { throw(p5context([(p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('obj'), v_level, 'hash'), 0)) + '._hash_')], p5want)) })()
						}
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Lookup", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Var");
		p5for_lex(function () {
				var v_table;
				v_table = ((new p5HashRef({'$' : 'v_', '@' : 'List_', '%' : 'Hash_', '&' : ''})));
				p5typeglob_set("Perlito5::AST::Var", "emit_javascript2", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						var v_str_name;
						v_str_name = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('name'));
						if ( (p5str(v_str_name) == String.fromCharCode(92)) ) {
							v_str_name = (String.fromCharCode(92) + String.fromCharCode(92))
						};
						if ( (p5str(v_str_name) == '"') ) {
							v_str_name = (String.fromCharCode(92) + '"')
						};
						var v_perl5_name;
						v_perl5_name = (p5call(v_self, "perl5_name", [], 0));
						var v_decl_type;
						var v_decl;
						v_decl = (p5call(v_self, "perl5_get_decl", [v_perl5_name], 0));
						if ( p5bool(v_decl) ) {
							v_decl_type = ((v_decl || (v_decl = new p5HashRef({})))._hash_.p5hget('decl'));
						}
						else if ( (!( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace'))) && (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) != '*')) ) {
							(function () {
								if ( p5bool(p5make_package("Perlito5")["v_STRICT"]) ) {
									p5pkg["Perlito5::AST::Var"].die([[('Global symbol "' + p5str(v_perl5_name) + '" requires explicit package name')]], null);
								};
								v_decl_type = ('our');
								(v_self || (v_self = new p5HashRef({})))._hash_.p5hset('namespace', (p5make_package("Perlito5")["v_PKG_NAME"]));
								var v_sigil;
								v_sigil = (( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) == '$#') ? '@' : (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')));
								var v_s;
								v_s = (('p5pkg["' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) + '"]["' + p5str((v_table || (v_table = new p5HashRef({})))._hash_.p5hget(p5str(v_sigil))) + p5str(v_str_name) + '"]'));
								if ( (p5str(v_sigil) == '@') ) {
									v_s = ((p5str(v_s) + ' || (' + p5str(v_s) + ' = [])'));
									v_s = (('p5pkg[' + p5str(v_s) + ', "' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) + '"]["' + p5str((v_table || (v_table = new p5HashRef({})))._hash_.p5hget(p5str(v_sigil))) + p5str(v_str_name) + '"]'));
									if ( ((p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) == '@') && (p5str(v_wantarray) == 'scalar')) ) {
										(v_s = ((p5str(v_s) + '.length')));
									};
								}
								else if ( (p5str(v_sigil) == '%') ) {
									v_s = ((p5str(v_s) + ' || (' + p5str(v_s) + ' = {})'));
									v_s = (('p5pkg[' + p5str(v_s) + ', "' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) + '"]["' + p5str((v_table || (v_table = new p5HashRef({})))._hash_.p5hget(p5str(v_sigil))) + p5str(v_str_name) + '"]'));
								};
								if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) == '$#') ) {
									(function () { throw(p5context([('(' + p5str(v_s) + '.length - 1)')], p5want)) })();
								};
								(function () { throw(p5context([v_s], p5want)) })();
							})();
						};
						if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) == '@') ) {
							if ( (p5str(v_wantarray) == 'scalar') ) {
								(function () { throw(p5context([(p5str(p5call(v_self, "emit_javascript2", [v_level, 'list'], 0)) + '.length')], p5want)) })();
							};
							if ( (p5str(v_wantarray) == 'runtime') ) {
								(function () { throw(p5context([('(p5want' + ' ? ' + p5str(p5call(v_self, "emit_javascript2", [v_level, 'list'], 0)) + ' : ' + p5str(p5call(v_self, "emit_javascript2", [v_level, 'list'], 0)) + '.length' + ')')], p5want)) })();
							};
						};
						if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) == '::') ) {
							(function () { throw(p5pkg["Perlito5::Javascript2"].escape_string(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')), p5want)) })();
						};
						if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) == '&') ) {
							(function () { throw(p5context([('p5pkg["' + p5str(p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace'), function () { return p5make_package("Perlito5")["v_PKG_NAME"] })) + '"]["' + p5str(v_str_name) + '"](List__, ' + p5str(( (p5str(v_wantarray) == 'list') ? '1' : ( (p5str(v_wantarray) == 'scalar') ? '0' : ( (p5str(v_wantarray) == 'void') ? 'null' : 'p5want')))) + ')')], p5want)) })();
						};
						if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) == '*') ) {
							(function () { throw(p5context([('p5pkg["' + p5str(p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace'), function () { return p5make_package("Perlito5")["v_PKG_NAME"] })) + '"]["' + p5str(v_str_name) + '"]')], p5want)) })();
						};
						if ( (p5str(v_decl_type) == 'our') ) {
							(function () {
								var v_sigil;
								v_sigil = (( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) == '$#') ? '@' : (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')));
								var v_s;
								v_s = (('p5pkg["' + p5str(p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace'), function () { return (v_decl || (v_decl = new p5HashRef({})))._hash_.p5hget('namespace') })) + '"]["' + p5str((v_table || (v_table = new p5HashRef({})))._hash_.p5hget(p5str(v_sigil))) + p5str(v_str_name) + '"]'));
								if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) == '$#') ) {
									(function () { throw(p5context([('(' + p5str(v_s) + '.length - 1)')], p5want)) })();
								};
								(function () { throw(p5context([v_s], p5want)) })();
							})();
						};
						var v_ns;
						v_ns = ('');
						if ( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) ) {
							v_ns = (('p5make_package("' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) + '")'));
							if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) == '$#') ) {
								(function () { throw(p5context([('(p5global_array("' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) + '", "' + p5str(v_str_name) + '").length - 1)')], p5want)) })();
							};
							if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) == '@') ) {
								(function () { throw(p5context([('p5global_array("' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) + '", "' + p5str(v_str_name) + '")')], p5want)) })();
							};
							if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) == '%') ) {
								(function () { throw(p5context([('p5global_hash("' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) + '", "' + p5str(v_str_name) + '")')], p5want)) })();
							};
							(function () { throw(p5context([(p5str(v_ns) + '["' + p5str((v_table || (v_table = new p5HashRef({})))._hash_.p5hget(p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')))) + p5str(v_str_name) + '"]')], p5want)) })();
						};
						if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')) == '$#') ) {
							(function () { throw(p5context([('(' + p5str(v_ns) + p5str((v_table || (v_table = new p5HashRef({})))._hash_.p5hget('@')) + p5str(v_str_name) + '.length - 1)')], p5want)) })();
						};
						return (p5context([(p5str(v_ns) + p5str((v_table || (v_table = new p5HashRef({})))._hash_.p5hget(p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sigil')))) + p5str(v_str_name))], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Var", "emit_javascript2_set", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_arguments;
						v_arguments = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						var v_open;
						v_open = (( (p5str(v_wantarray) == 'void') ? '' : '('));
						var v_close;
						v_close = (( (p5str(v_wantarray) == 'void') ? '' : ')'));
						if ( (p5str(p5call(v_self, "sigil", [], 0)) == '$') ) {
							(function () { throw(p5context([(p5str(v_open) + p5str(p5call(v_self, "emit_javascript2", [], 0)) + ' = ' + p5str(p5pkg["Perlito5::Javascript2"].to_scalar(p5list_to_a((new p5ArrayRef([v_arguments])), (p5num(v_level) + 1)), 0)) + p5str(v_close))], p5want)) })();
						};
						if ( (p5str(p5call(v_self, "sigil", [], 0)) == '@') ) {
							(function () { throw(p5context([(p5str(v_open) + p5str(p5call(v_self, "emit_javascript2", [], 0)) + ' = ' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((new p5ArrayRef([v_arguments])), (p5num(v_level) + 1)), 0)) + p5str(v_close))], p5want)) })();
						};
						if ( (p5str(p5call(v_self, "sigil", [], 0)) == '%') ) {
							(function () { throw(p5context([(p5str(v_open) + p5str(p5call(v_self, "emit_javascript2", [], 0)) + ' = ' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((new p5ArrayRef([v_arguments])), (p5num(v_level) + 1), 'hash'), 0)) + p5str(v_close))], p5want)) })();
						};
						if ( (p5str(p5call(v_self, "sigil", [], 0)) == '*') ) {
							(function () { throw(p5context([('p5typeglob_set(' + '"' + p5str(p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace'), function () { return p5make_package("Perlito5")["v_PKG_NAME"] })) + '", ' + '"' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('name')) + '", ' + p5str(p5pkg["Perlito5::Javascript2"].to_scalar(p5list_to_a((new p5ArrayRef([v_arguments])), (p5num(v_level) + 1)), 0)) + ')')], p5want)) })();
						};
						return (p5pkg["Perlito5::AST::Var"].die([p5list_to_a('don' + String.fromCharCode(39) + 't know how to assign to variable ', p5call(v_self, "sigil", [], 1), p5call(v_self, "name", [], 1))], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Var", "emit_javascript2_set_list", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_list;
						v_list = (List__.shift());
						if ( (p5str(p5call(v_self, "sigil", [], 0)) == '$') ) {
							(function () { throw(p5context([(p5str(p5call(v_self, "emit_javascript2", [], 0)) + ' = ' + p5str(v_list) + '.shift()')], p5want)) })();
						};
						if ( (p5str(p5call(v_self, "sigil", [], 0)) == '@') ) {
							(function () { throw(p5context([(p5str(p5call(v_self, "emit_javascript2", [], 0)) + ' = ' + p5str(v_list) + '; ' + p5str(v_list) + ' = []')], p5want)) })();
						};
						if ( (p5str(p5call(v_self, "sigil", [], 0)) == '%') ) {
							(function () { throw(p5context([(p5str(p5call(v_self, "emit_javascript2", [], 0)) + ' = p5a_to_h(' + p5str(v_list) + '); ' + p5str(v_list) + ' = []')], p5want)) })();
						};
						return (p5pkg["Perlito5::AST::Var"].die([p5list_to_a('don' + String.fromCharCode(39) + 't know how to assign to variable ', p5call(v_self, "sigil", [], 1), p5call(v_self, "name", [], 1))], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Var", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Decl");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::Decl", "emit_javascript2", p5sub(function (List__, p5want) {
					var v_self;
					v_self = (List__.shift());
					var v_level;
					v_level = (List__.shift());
					return (p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('var'), "emit_javascript2", [v_level], p5want));
				}, null));
				p5typeglob_set("Perlito5::AST::Decl", "emit_javascript2_init", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('decl')) == 'local') ) {
							(function () {
								var v_perl5_name;
								v_perl5_name = (p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('var'), "perl5_name", [], 0));
								var v_decl_namespace;
								v_decl_namespace = ('');
								var v_decl;
								v_decl = (p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('var'), "perl5_get_decl", [v_perl5_name], 0));
								if ( (p5bool(v_decl) && ((p5str((v_decl || (v_decl = new p5HashRef({})))._hash_.p5hget('decl')) == 'my') || (p5str((v_decl || (v_decl = new p5HashRef({})))._hash_.p5hget('decl')) == 'state'))) ) {
									p5pkg["Perlito5::AST::Decl"].die([[('Can' + String.fromCharCode(39) + 't localize lexical variable ' + p5str(v_perl5_name))]], null);
								};
								if ( (p5bool(v_decl) && ((p5str((v_decl || (v_decl = new p5HashRef({})))._hash_.p5hget('decl')) == 'our') || (p5str((v_decl || (v_decl = new p5HashRef({})))._hash_.p5hget('decl')) == 'local'))) ) {
									v_decl_namespace = ((v_decl || (v_decl = new p5HashRef({})))._hash_.p5hget('namespace'));
								};
								var v_ns;
								v_ns = (('p5pkg["' + p5str(p5or(p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('var')._hash_.p5hget('namespace'), function () { return v_decl_namespace }), function () { return p5make_package("Perlito5")["v_PKG_NAME"] })) + '"]'));
								(function () { throw(p5context([('p5set_local(' + p5str(v_ns) + ',' + p5str(p5pkg["Perlito5::Javascript2"].escape_string(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('var')._hash_.p5hget('name')), 0)) + ',' + p5str(p5pkg["Perlito5::Javascript2"].escape_string(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('var')._hash_.p5hget('sigil')), 0)) + '); ')], p5want)) })();
							})();
						};
						var v_type;
						v_type = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('decl'));
						var v_env;
						v_env = ((new p5HashRef({'decl' : v_type})));
						var v_perl5_name;
						v_perl5_name = (p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('var'), "perl5_name", [], 0));
						if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('decl')) != 'my') ) {
							if ( ((p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('decl')) == 'our') && p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('var')._hash_.p5hget('namespace'))) ) {
								p5pkg["Perlito5::AST::Decl"].die([[('No package name allowed for variable ' + p5str(v_perl5_name) + ' in "our"')]], null)
							};
							if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('var')._hash_.p5hget('namespace')) == '') ) {
								(function () {
									var v_decl_namespace;
									v_decl_namespace = ('');
									var v_decl;
									v_decl = (p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('var'), "perl5_get_decl", [v_perl5_name], 0));
									if ( (p5bool(v_decl) && (p5str((v_decl || (v_decl = new p5HashRef({})))._hash_.p5hget('decl')) == 'our')) ) {
										v_decl_namespace = ((v_decl || (v_decl = new p5HashRef({})))._hash_.p5hget('namespace'));
									};
									(v_env || (v_env = new p5HashRef({})))._hash_.p5hset('namespace', (p5or(v_decl_namespace, function () { return p5make_package("Perlito5")["v_PKG_NAME"] })));
								})();
							};
						};
						(p5make_package("Perlito5")["v_VAR"] || (p5make_package("Perlito5")["v_VAR"] = new p5ArrayRef([])))._array_.p5aget_hash(0)._hash_.p5hset(p5str(v_perl5_name), (v_env));
						if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('decl')) == 'my') ) {
							var v_str;
							v_str = (('var ' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('var'), "emit_javascript2", [], 0))));
							if ( (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('var'), "sigil", [], 0)) == '%') ) {
								v_str = ((p5str(v_str) + ' = {};'));
							}
							else if ( (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('var'), "sigil", [], 0)) == '@') ) {
								v_str = ((p5str(v_str) + '= [];'));
							}
							else {
								v_str = ((p5str(v_str) + ';'));
							};
							(function () { throw(p5context([v_str], p5want)) })()
						}
						else if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('decl')) == 'our') ) {
							var v_str;
							v_str = (p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('var'), "emit_javascript2", [], 0));
							if ( (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('var'), "sigil", [], 0)) == '%') ) {
								v_str = ((p5str(v_str) + ' = {};'));
							}
							else if ( (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('var'), "sigil", [], 0)) == '@') ) {
								v_str = ((p5str(v_str) + '= [];'));
							}
							else {
								(function () { throw(p5context([('// our ' + p5str(v_str))], p5want)) })();
							};
							(function () { throw(p5context([('if (typeof ' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('var'), "emit_javascript2", [], 0)) + ' == "undefined" ) { ' + p5str(v_str) + '};')], p5want)) })()
						}
						else if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('decl')) == 'state') ) {
							(function () { throw(p5context([('// state ' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('var'), "emit_javascript2", [], 0)))], p5want)) })()
						}
						else {
							return (p5pkg["Perlito5::AST::Decl"].die([[('not implemented: Perlito5::AST::Decl ' + String.fromCharCode(39) + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('decl')) + String.fromCharCode(39))]], p5want));
						}
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Decl", "emit_javascript2_set", p5sub(function (List__, p5want) {
					var v_self;
					v_self = (List__.shift());
					var v_arguments;
					v_arguments = (List__.shift());
					var v_level;
					v_level = (List__.shift());
					var v_wantarray;
					v_wantarray = (List__.shift());
					return (p5call(p5call(v_self, "var", [], 0), "emit_javascript2_set", [v_arguments, v_level, v_wantarray], p5want));
				}, null));
				p5typeglob_set("Perlito5::AST::Decl", "emit_javascript2_set_list", p5sub(function (List__, p5want) {
					var v_self;
					v_self = (List__.shift());
					var v_level;
					v_level = (List__.shift());
					var v_list;
					v_list = (List__.shift());
					return (p5call(p5call(v_self, "var", [], 0), "emit_javascript2_set_list", [v_level, v_list], p5want));
				}, null));
				p5typeglob_set("Perlito5::AST::Decl", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					var v_self;
					v_self = (List__.shift());
					return (p5context([v_self], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Proto");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::Proto", "emit_javascript2", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('name')) == '__PACKAGE__') ) {
							(function () { throw(p5pkg["Perlito5::Javascript2"].pkg([], p5want)) })()
						};
						return (p5context([('p5pkg["' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('name')) + '"]')], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Proto", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Call");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::Call", "emit_javascript2", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						var v_autovivification_type;
						v_autovivification_type = (List__.shift());
						var v_meth;
						v_meth = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('method'));
						if ( (p5str(v_meth) == 'postcircumfix:<[ ]>') ) {
							(function () {
								var v_method;
								v_method = (p5or(v_autovivification_type, function () { return 'p5aget' }));
								if ( (p5str(v_autovivification_type) == 'array') ) {
									v_method = ('p5aget_array')
								};
								if ( (p5str(v_autovivification_type) == 'hash') ) {
									v_method = ('p5aget_hash')
								};
								(function () { throw(p5context([(p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('invocant'), v_level, 'array'), 0)) + '._array_.' + p5str(v_method) + '(' + p5str(p5pkg["Perlito5::Javascript2"].to_num(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments'), (p5num(v_level) + 1)), 0)) + ')')], p5want)) })();
							})();
						};
						if ( (p5str(v_meth) == 'postcircumfix:<{ }>') ) {
							(function () {
								var v_method;
								v_method = (p5or(v_autovivification_type, function () { return 'p5hget' }));
								if ( (p5str(v_autovivification_type) == 'array') ) {
									v_method = ('p5hget_array')
								};
								if ( (p5str(v_autovivification_type) == 'hash') ) {
									v_method = ('p5hget_hash')
								};
								(function () { throw(p5context([(p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('invocant'), v_level, 'hash'), 0)) + '._hash_.' + p5str(v_method) + '(' + p5str(p5pkg["Perlito5::Javascript2"].autoquote(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments'), (p5num(v_level) + 1), 'list'), 0)) + ')')], p5want)) })();
							})();
						};
						if ( (p5str(v_meth) == 'postcircumfix:<( )>') ) {
							(function () {
								var v_invocant;
								if ( ((p5str(p5pkg["Perlito5::AST::Call"].ref([(v_self || (v_self = new p5HashRef({})))._hash_.p5hget('invocant')], 0)) == 'Perlito5::AST::Apply') && (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('invocant')._hash_.p5hget('code')) == 'prefix:<&>')) ) {
									(function () {
										var v_arg;
										v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('invocant')._hash_.p5hget_array('arguments')._array_.p5aget(0));
										v_invocant = (('p5code_lookup_by_name("' + p5str(p5make_package("Perlito5")["v_PKG_NAME"]) + '", ' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + ')'));
									})();
								}
								else if ( ((p5str(p5pkg["Perlito5::AST::Call"].ref([(v_self || (v_self = new p5HashRef({})))._hash_.p5hget('invocant')], 0)) == 'Perlito5::AST::Var') && (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('invocant')._hash_.p5hget('sigil')) == '&')) ) {
									v_invocant = (('p5pkg["' + p5str(p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('invocant')._hash_.p5hget('namespace'), function () { return p5make_package("Perlito5")["v_PKG_NAME"] })) + '"]["' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('invocant')._hash_.p5hget('name')) + '"]'));
								}
								else {
									v_invocant = (p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('invocant'), "emit_javascript2", [v_level, 'scalar'], 0));
								};
								(function () { throw(p5context([('(' + p5str(v_invocant) + ')(' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments')), 0)) + ', ' + p5str(( (p5str(v_wantarray) == 'list') ? '1' : ( (p5str(v_wantarray) == 'scalar') ? '0' : ( (p5str(v_wantarray) == 'void') ? 'null' : 'p5want')))) + ')')], p5want)) })();
							})();
						};
						var v_invocant;
						v_invocant = (p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('invocant'), "emit_javascript2", [v_level, 'scalar'], 0));
						if ( (p5str(p5pkg["Perlito5::AST::Call"].ref([v_meth], 0)) == 'Perlito5::AST::Var') ) {
							v_meth = (p5call(v_meth, "emit_javascript2", [v_level, 'scalar'], 0));
						}
						else {
							v_meth = (('"' + p5str(v_meth) + '"'));
						};
						return (p5context([('p5call(' + p5str(v_invocant) + ', ' + p5str(v_meth) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments')), 0)) + ', ' + p5str(( (p5str(v_wantarray) == 'list') ? '1' : ( (p5str(v_wantarray) == 'scalar') ? '0' : ( (p5str(v_wantarray) == 'void') ? 'null' : 'p5want')))) + ')')], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Call", "emit_javascript2_set", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_arguments;
						v_arguments = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('method')) == 'postcircumfix:<[ ]>') ) {
							(function () { throw(p5context([(p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('invocant'), v_level, 'array'), 0)) + '._array_.p5aset(' + p5str(p5pkg["Perlito5::Javascript2"].to_num(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments'), (p5num(v_level) + 1)), 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].to_scalar(p5list_to_a((new p5ArrayRef([v_arguments])), (p5num(v_level) + 1)), 0)) + ')')], p5want)) })();
						};
						if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('method')) == 'postcircumfix:<{ }>') ) {
							(function () { throw(p5context([(p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('invocant'), v_level, 'hash'), 0)) + '._hash_.p5hset(' + p5str(p5pkg["Perlito5::Javascript2"].autoquote(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments'), (p5num(v_level) + 1), 'list'), 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].to_scalar(p5list_to_a((new p5ArrayRef([v_arguments])), (p5num(v_level) + 1)), 0)) + ')')], p5want)) })();
						};
						return (p5pkg["Perlito5::AST::Call"].die([p5list_to_a('don' + String.fromCharCode(39) + 't know how to assign to method ', (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('method'))], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Call", "emit_javascript2_set_list", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_list;
						v_list = (List__.shift());
						if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('method')) == 'postcircumfix:<[ ]>') ) {
							(function () { throw(p5context([(p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('invocant'), v_level, 'array'), 0)) + '._array_.p5aset(' + p5str(p5pkg["Perlito5::Javascript2"].to_num(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments'), (p5num(v_level) + 1)), 0)) + ', ' + p5str(v_list) + '.shift()' + ')')], p5want)) })();
						};
						if ( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('method')) == 'postcircumfix:<{ }>') ) {
							(function () { throw(p5context([(p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('invocant'), v_level, 'hash'), 0)) + '._hash_.p5hset(' + p5str(p5pkg["Perlito5::Javascript2"].autoquote(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments'), (p5num(v_level) + 1), 'list'), 0)) + ', ' + p5str(v_list) + '.shift()' + ')')], p5want)) })();
						};
						return (p5pkg["Perlito5::AST::Call"].die([p5list_to_a('don' + String.fromCharCode(39) + 't know how to assign to method ', (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('method'))], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Call", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Apply");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::Apply", "emit_regex_javascript2", p5sub(function (List__, p5want) {
					try {
						var v_op;
						v_op = (List__.shift());
						var v_var;
						v_var = (List__.shift());
						var v_regex;
						v_regex = (List__.shift());
						if ( p5bool(p5call(v_regex, "isa", ['Perlito5::AST::Var'], 0)) ) {
							v_regex = ((new p5HashRef(p5a_to_h(p5list_to_a('code', 'p5:m', 'arguments', (new p5ArrayRef([v_regex, ''])))))));
						};
						var v_str;
						var v_code;
						v_code = ((v_regex || (v_regex = new p5HashRef({})))._hash_.p5hget('code'));
						var v_regex_args;
						v_regex_args = ((v_regex || (v_regex = new p5HashRef({})))._hash_.p5hget('arguments'));
						if ( (p5str(v_code) == 'p5:s') ) {
							v_str = ((p5str(p5call(v_var, "emit_javascript2", [], 0)) + ' = p5str(' + p5str(p5call(v_var, "emit_javascript2", [], 0)) + ').replace(/' + p5str((v_regex_args || (v_regex_args = new p5ArrayRef([])))._array_.p5aget_hash(0)._hash_.p5hget('buf')) + '/' + p5str((v_regex_args || (v_regex_args = new p5ArrayRef([])))._array_.p5aget(2)) + ', ' + p5str(p5call((v_regex_args || (v_regex_args = new p5ArrayRef([])))._array_.p5aget(1), "emit_javascript2", [], 0)) + ')'));
						}
						else if ( (p5str(v_code) == 'p5:m') ) {
							(function () {
								var v_ast;
								v_ast = ((v_regex_args || (v_regex_args = new p5ArrayRef([])))._array_.p5aget(0));
								if ( p5bool(p5call(v_ast, "isa", ['Perlito5::AST::Val::Buf'], 0)) ) {
									v_str = (('(' + 'p5str(' + p5str(p5call(v_var, "emit_javascript2", [], 0)) + ')' + '.match(/' + p5str((v_ast || (v_ast = new p5HashRef({})))._hash_.p5hget('buf')) + '/' + p5str((v_regex_args || (v_regex_args = new p5ArrayRef([])))._array_.p5aget(1)) + ')' + ' ? 1 : 0)'));
								}
								else {
									v_str = (('(new RegExp(' + p5str(p5call(v_ast, "emit_javascript2", [], 0)) + ', ' + '"' + p5str((v_regex_args || (v_regex_args = new p5ArrayRef([])))._array_.p5aget(1)) + '"' + '))' + '.exec(' + 'p5str(' + p5str(p5call(v_var, "emit_javascript2", [], 0)) + ')' + ')'));
								};
							})();
						}
						else if ( (p5str(v_code) == 'p5:tr') ) {
							v_str = (('p5tr(' + p5str(p5call(v_var, "emit_javascript2", [], 0)) + ', ' + p5str(p5call((v_regex_args || (v_regex_args = new p5ArrayRef([])))._array_.p5aget(0), "emit_javascript2", [], 0)) + ', ' + p5str(p5call((v_regex_args || (v_regex_args = new p5ArrayRef([])))._array_.p5aget(1), "emit_javascript2", [], 0)) + ')'));
						}
						else {
							p5pkg["Perlito5::AST::Apply"].die([[('Error: regex emitter - unknown operator ' + p5str(v_code))]], null);
						};
						if ( (p5str(v_op) == '=~') ) {
							(function () { throw(p5context([v_str], p5want)) })();
						};
						if ( (p5str(v_op) == '!~') ) {
							(function () { throw(p5context([('!(' + p5str(v_str) + ')')], p5want)) })();
						};
						return (p5pkg["Perlito5::AST::Apply"].die([['Error: regex emitter']], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Apply", "emit_javascript2_set", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_arguments;
						v_arguments = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						var v_code;
						v_code = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('code'));
						if ( (p5str(v_code) == 'prefix:<$>') ) {
							(function () { throw(p5context([('p5scalar_deref_set(' + p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), (p5num(v_level) + 1), 'scalar'), 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].to_scalar(p5list_to_a((new p5ArrayRef([v_arguments])), (p5num(v_level) + 1)), 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].escape_string([p5make_package("Perlito5")["v_PKG_NAME"]], 0)) + ')')], p5want)) })();
						};
						if ( (p5str(v_code) == 'prefix:<*>') ) {
							(function () { throw(p5context([('p5typeglob_deref_set(' + p5str(p5pkg["Perlito5::Javascript2"].to_scalar(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments'), (p5num(v_level) + 1)), 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].to_scalar(p5list_to_a((new p5ArrayRef([v_arguments])), (p5num(v_level) + 1)), 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].escape_string([p5make_package("Perlito5")["v_PKG_NAME"]], 0)) + ')')], p5want)) })();
						};
						var v_open;
						v_open = (( (p5str(v_wantarray) == 'void') ? '' : '('));
						var v_close;
						v_close = (( (p5str(v_wantarray) == 'void') ? '' : ')'));
						return (p5context([(p5str(v_open) + p5str(p5call(v_self, "emit_javascript2", [(p5num(v_level) + 1)], 0)) + ' = ' + p5str(p5call(v_arguments, "emit_javascript2", [(p5num(v_level) + 1)], 0)) + p5str(v_close))], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				var Hash_emit_js = {};
				Hash_emit_js = p5a_to_h(['infix:<=~>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5pkg["Perlito5::AST::Apply"].emit_regex_javascript2(p5list_to_a('=~', (v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), (v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(1)), p5want));
						}, null), 'infix:<!~>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5pkg["Perlito5::AST::Apply"].emit_regex_javascript2(p5list_to_a('!~', (v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), (v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(1)), p5want));
						}, null), 'p5:s', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5pkg["Perlito5::AST::Apply"].emit_regex_javascript2(p5list_to_a('=~', p5call(p5pkg["Perlito5::AST::Var"], "new", ['sigil', '$', 'namespace', '', 'name', '_'], 1), v_self), p5want));
						}, null), 'p5:m', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5pkg["Perlito5::AST::Apply"].emit_regex_javascript2(p5list_to_a('=~', p5call(p5pkg["Perlito5::AST::Var"], "new", ['sigil', '$', 'namespace', '', 'name', '_'], 1), v_self), p5want));
						}, null), 'p5:tr', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5pkg["Perlito5::AST::Apply"].emit_regex_javascript2(p5list_to_a('=~', p5call(p5pkg["Perlito5::AST::Var"], "new", ['sigil', '$', 'namespace', '', 'name', '_'], 1), v_self), p5want));
						}, null), '__PACKAGE__', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5context([('"' + p5str(p5make_package("Perlito5")["v_PKG_NAME"]) + '"')], p5want));
						}, null), 'wantarray', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5context(['p5want'], p5want));
						}, null), 'package', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5context([('p5make_package("' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) + '")')], p5want));
						}, null), 'infix:<=>>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							return (p5context([(p5str(p5call(p5call(p5pkg["Perlito5::AST::Lookup"], "autoquote", p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0)), 0), "emit_javascript2", [v_level], 0)) + ', ' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(1), "emit_javascript2", [v_level], 0)))], p5want));
						}, null), 'infix:<cmp>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5context([('p5cmp(' + p5pkg["Perlito5::AST::Apply"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5pkg["Perlito5::Javascript2"].to_str([p5pkg["Perlito5::AST::Apply"]["v__"]], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')')], p5want));
						}, null), 'infix:<<=>>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5context([('p5cmp(' + p5pkg["Perlito5::AST::Apply"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5pkg["Perlito5::Javascript2"].to_num([p5pkg["Perlito5::AST::Apply"]["v__"]], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')')], p5want));
						}, null), 'infix:<**>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5context([('Math.pow(' + p5pkg["Perlito5::AST::Apply"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5pkg["Perlito5::Javascript2"].to_num([p5pkg["Perlito5::AST::Apply"]["v__"]], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')')], p5want));
						}, null), 'infix:<<<>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5context([('p5shift_left(' + p5pkg["Perlito5::AST::Apply"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5pkg["Perlito5::Javascript2"].to_num([p5pkg["Perlito5::AST::Apply"]["v__"]], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')')], p5want));
						}, null), 'infix:<%>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5context([('p5modulo(' + p5pkg["Perlito5::AST::Apply"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5pkg["Perlito5::Javascript2"].to_num([p5pkg["Perlito5::AST::Apply"]["v__"]], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')')], p5want));
						}, null), 'prefix:<!>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							return (p5context([('!( ' + p5str(p5pkg["Perlito5::Javascript2"].to_bool(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), v_level), 0)) + ')')], p5want));
						}, null), 'prefix:<not>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							return (p5context([('!( ' + p5str(p5pkg["Perlito5::Javascript2"].to_bool(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), v_level), 0)) + ')')], p5want));
						}, null), 'prefix:<~>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5context([('p5complement( ' + p5str(p5pkg["Perlito5::Javascript2"].to_num(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0)), 0)) + ')')], p5want));
						}, null), 'prefix:<->', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							return (p5context([('p5negative( ' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), "emit_javascript2", [v_level, 'scalar'], 0)) + ')')], p5want));
						}, null), 'prefix:<+>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							return (p5context([('(' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), "emit_javascript2", [v_level, v_wantarray], 0)) + ')')], p5want));
						}, null), 'require', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							var v_level;
							v_level = (List__.p5aget(1));
							return (p5context([('p5pkg["Perlito5::Grammar::Use"]["require"]([' + p5str(p5pkg["Perlito5::Javascript2"].to_str(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0)), 0)) + ', ' + p5str(( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget_hash(0)._hash_.p5hget('bareword')) ? 1 : 0)) + '])')], p5want));
						}, null), 'prefix:<$>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							var v_level;
							v_level = (List__.p5aget(1));
							var v_arg;
							v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
							return (p5context([('p5scalar_deref(' + p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify([v_arg, v_level, 'scalar'], 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].escape_string([p5make_package("Perlito5")["v_PKG_NAME"]], 0)) + ')')], p5want));
						}, null), 'prefix:<@>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							var v_level;
							v_level = (List__.p5aget(1));
							var v_arg;
							v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
							return (p5context([(p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify([v_arg, v_level, 'array'], 0)) + '._array_')], p5want));
						}, null), 'prefix:<$#>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							var v_level;
							v_level = (List__.p5aget(1));
							var v_arg;
							v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
							return (p5context([('(' + p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify([v_arg, v_level, 'array'], 0)) + '._array_.length - 1)')], p5want));
						}, null), 'prefix:<%>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							var v_level;
							v_level = (List__.p5aget(1));
							var v_arg;
							v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
							return (p5context([(p5str(p5pkg["Perlito5::Javascript2"].emit_javascript2_autovivify([v_arg, v_level, 'hash'], 0)) + '._hash_')], p5want));
						}, null), 'prefix:<&>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							var v_level;
							v_level = (List__.p5aget(1));
							var v_arg;
							v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
							return (p5context([('p5code_lookup_by_name("' + p5str(p5make_package("Perlito5")["v_PKG_NAME"]) + '", ' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + ')([])')], p5want));
						}, null), 'circumfix:<[ ]>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							var v_level;
							v_level = (List__.p5aget(1));
							return (p5context([('(new p5ArrayRef(' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments')), 0)) + '))')], p5want));
						}, null), 'circumfix:<{ }>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							var v_level;
							v_level = (List__.p5aget(1));
							return (p5context([('(new p5HashRef(' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments'), v_level, 'hash'), 0)) + '))')], p5want));
						}, null), 'prefix:<' + String.fromCharCode(92) + '>', p5sub(function (List__, p5want) {
							try {
								var v_self;
								v_self = (List__.p5aget(0));
								var v_level;
								v_level = (List__.p5aget(1));
								var v_arg;
								v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
								if ( p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Apply'], 0)) ) {
									if ( (p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('code')) == 'prefix:<&>') ) {
										(function () { throw(p5context([('p5code_lookup_by_name("' + p5str(p5make_package("Perlito5")["v_PKG_NAME"]) + '", ' + p5str(p5call((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), "emit_javascript2", [v_level], 0)) + ')')], p5want)) })();
									};
								};
								if ( p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Var'], 0)) ) {
									if ( (p5str(p5call(v_arg, "sigil", [], 0)) == '@') ) {
										(function () { throw(p5context([('(new p5ArrayRef(' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + '))')], p5want)) })();
									};
									if ( (p5str(p5call(v_arg, "sigil", [], 0)) == '%') ) {
										(function () { throw(p5context([('(new p5HashRef(' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + '))')], p5want)) })();
									};
									if ( (p5str(p5call(v_arg, "sigil", [], 0)) == '*') ) {
										(function () { throw(p5context([('(new p5GlobRef(' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + '))')], p5want)) })();
									};
									if ( (p5str(p5call(v_arg, "sigil", [], 0)) == '&') ) {
										if ( p5bool((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('namespace')) ) {
											(function () { throw(p5context([('p5pkg["' + p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('namespace')) + '"].' + p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('name')))], p5want)) })();
										}
										else {
											(function () { throw(p5context([(p5str(p5pkg["Perlito5::Javascript2"].pkg([], 0)) + '.' + p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('name')))], p5want)) })();
										};
									};
								};
								return (p5context([('(new p5ScalarRef(' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + '))')], p5want));
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null), 'postfix:<++>', p5sub(function (List__, p5want) {
							try {
								var v_self;
								v_self = (List__.p5aget(0));
								var v_level;
								v_level = (List__.p5aget(1));
								var v_arg;
								v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
								if ( ((p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Index'], 0)) || p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Lookup'], 0))) || p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Call'], 0))) ) {
									(function () { throw(p5call(v_arg, "emit_javascript2", [(p5num(v_level) + 1), 0, 'p5postincr'], p5want)) })();
								};
								if ( (p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Var'], 0)) && (p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('sigil')) == '$')) ) {
									(function () { throw(p5context([('(function (_tmp) { ' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + ' = p5incr_(_tmp); ' + 'return _tmp ' + '})(' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + ')')], p5want)) })();
								};
								return (p5context([('(' + p5pkg["Perlito5::AST::Apply"].join([' ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2", [], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')++')], p5want));
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null), 'postfix:<-->', p5sub(function (List__, p5want) {
							try {
								var v_self;
								v_self = (List__.p5aget(0));
								var v_level;
								v_level = (List__.p5aget(1));
								var v_arg;
								v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
								if ( ((p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Index'], 0)) || p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Lookup'], 0))) || p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Call'], 0))) ) {
									(function () { throw(p5call(v_arg, "emit_javascript2", [(p5num(v_level) + 1), 0, 'p5postdecr'], p5want)) })();
								};
								if ( (p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Var'], 0)) && (p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('sigil')) == '$')) ) {
									(function () { throw(p5context([('(function (_tmp) { ' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + ' = p5decr_(_tmp); ' + 'return _tmp ' + '})(' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + ')')], p5want)) })();
								};
								return (p5context([('(' + p5pkg["Perlito5::AST::Apply"].join([' ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2", [], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')--')], p5want));
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null), 'prefix:<++>', p5sub(function (List__, p5want) {
							try {
								var v_self;
								v_self = (List__.p5aget(0));
								var v_level;
								v_level = (List__.p5aget(1));
								var v_arg;
								v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
								if ( ((p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Index'], 0)) || p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Lookup'], 0))) || p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Call'], 0))) ) {
									(function () { throw(p5call(v_arg, "emit_javascript2", [(p5num(v_level) + 1), 0, 'p5incr'], p5want)) })();
								};
								if ( (p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Var'], 0)) && (p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('sigil')) == '$')) ) {
									(function () { throw(p5context([('(function (_tmp) { ' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + ' = p5incr_(_tmp); ' + 'return ' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + ' ' + '})(' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + ')')], p5want)) })();
								};
								return (p5context([('++(' + p5pkg["Perlito5::AST::Apply"].join([' ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2", [], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')')], p5want));
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null), 'prefix:<-->', p5sub(function (List__, p5want) {
							try {
								var v_self;
								v_self = (List__.p5aget(0));
								var v_level;
								v_level = (List__.p5aget(1));
								var v_arg;
								v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
								if ( ((p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Index'], 0)) || p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Lookup'], 0))) || p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Call'], 0))) ) {
									(function () { throw(p5call(v_arg, "emit_javascript2", [(p5num(v_level) + 1), 0, 'p5decr'], p5want)) })();
								};
								if ( (p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Var'], 0)) && (p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('sigil')) == '$')) ) {
									(function () { throw(p5context([('(function (_tmp) { ' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + ' = p5decr_(_tmp); ' + 'return ' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + ' ' + '})(' + p5str(p5call(v_arg, "emit_javascript2", [v_level], 0)) + ')')], p5want)) })();
								};
								return (p5context([('--(' + p5pkg["Perlito5::AST::Apply"].join([' ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2", [], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')')], p5want));
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null), 'infix:<x>', p5sub(function (List__, p5want) {
							try {
								var v_self;
								v_self = (List__.p5aget(0));
								var v_arg;
								v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
								if ( ((p5str(p5pkg["Perlito5::AST::Apply"].ref([v_arg], 0)) == 'Perlito5::AST::Apply') && (p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('code')) == 'circumfix:<( )>')) ) {
									(function () { throw(p5context([('p5list_replicate(' + p5pkg["Perlito5::AST::Apply"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2", [], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')')], p5want)) })();
								};
								return (p5context([('p5str_replicate(' + p5pkg["Perlito5::AST::Apply"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2", [], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')')], p5want));
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null), 'list:<.>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5context([('(' + p5pkg["Perlito5::AST::Apply"].join([' + ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5pkg["Perlito5::Javascript2"].to_str([p5pkg["Perlito5::AST::Apply"]["v__"]], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')')], p5want));
						}, null), 'list:<,>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							return (p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments')), p5want));
						}, null), 'infix:<..>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							var v_level;
							v_level = (List__.p5aget(1));
							return (p5context([('(function (a) { ' + 'for (var i=' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), "emit_javascript2", [], 0)) + ', l=' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(1), "emit_javascript2", [], 0)) + '; ' + 'i<=l; ++i)' + '{ ' + 'a.push(i) ' + '}; ' + 'return a ' + '})([])')], p5want));
						}, null), 'delete', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							var v_level;
							v_level = (List__.p5aget(1));
							return (p5context([('(delete ' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), "emit_javascript2", [], 0)) + ')')], p5want));
						}, null), 'scalar', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							var v_level;
							v_level = (List__.p5aget(1));
							return (p5pkg["Perlito5::Javascript2"].to_scalar(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments'), (p5num(v_level) + 1)), p5want));
						}, null), 'ternary:<? :>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							return (p5context([('( ' + p5str(p5pkg["Perlito5::Javascript2"].to_bool(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0)), 0)) + ' ? ' + p5str(p5call(p5context([(v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(1)], 0), "emit_javascript2", [v_level, v_wantarray], 0)) + ' : ' + p5str(p5call(p5context([(v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(2)], 0), "emit_javascript2", [v_level, v_wantarray], 0)) + ')')], p5want));
						}, null), 'my', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							return (p5context([('p5context(' + '[' + p5pkg["Perlito5::AST::Apply"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2", [v_level, v_wantarray], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + '], ' + p5str(( (p5str(v_wantarray) == 'runtime') ? 'p5want' : ( (p5str(v_wantarray) == 'list') ? 1 : 0))) + ')')], p5want));
						}, null), 'our', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							return (p5context([('p5context(' + '[' + p5pkg["Perlito5::AST::Apply"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2", [v_level, v_wantarray], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + '], ' + p5str(( (p5str(v_wantarray) == 'runtime') ? 'p5want' : ( (p5str(v_wantarray) == 'list') ? 1 : 0))) + ')')], p5want));
						}, null), 'local', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							return (p5context([('p5context(' + '[' + p5pkg["Perlito5::AST::Apply"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2", [v_level, v_wantarray], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + '], ' + p5str(( (p5str(v_wantarray) == 'runtime') ? 'p5want' : ( (p5str(v_wantarray) == 'list') ? 1 : 0))) + ')')], p5want));
						}, null), 'circumfix:<( )>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							return (p5context([('p5context(' + '[' + p5pkg["Perlito5::AST::Apply"].join([', ', p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2", [v_level, v_wantarray], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + '], ' + p5str(( (p5str(v_wantarray) == 'runtime') ? 'p5want' : ( (p5str(v_wantarray) == 'list') ? 1 : 0))) + ')')], p5want));
						}, null), 'infix:<=>', p5sub(function (List__, p5want) {
							try {
								var v_self;
								v_self = (List__.shift());
								var v_level;
								v_level = (List__.shift());
								var v_wantarray;
								v_wantarray = (List__.shift());
								var v_parameters;
								v_parameters = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
								var v_arguments;
								v_arguments = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(1));
								if ( (p5bool(p5call(v_parameters, "isa", ['Perlito5::AST::Apply'], 0)) && (((p5str(p5call(v_parameters, "code", [], 0)) == 'my') || (p5str(p5call(v_parameters, "code", [], 0)) == 'local')) || (p5str(p5call(v_parameters, "code", [], 0)) == 'circumfix:<( )>'))) ) {
									(function () {
										var v_tmp;
										v_tmp = (('tmp' + p5str(p5pkg["Perlito5::Javascript2"].get_label([], 0))));
										var v_tmp2;
										v_tmp2 = (('tmp' + p5str(p5pkg["Perlito5::Javascript2"].get_label([], 0))));
										(function () { throw(p5context([('(function () {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + 'var ' + p5str(v_tmp) + ' = ' + p5str(p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((new p5ArrayRef([v_arguments])), (p5num(v_level) + 1)), 0)) + ';' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + 'var ' + p5str(v_tmp2) + ' = ' + p5str(v_tmp) + '.slice(0);' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + p5pkg["Perlito5::AST::Apply"].join([(';' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0))), p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2_set_list", [(p5num(v_level) + 1), v_tmp], p5want));
}, p5list_to_a(p5call(v_parameters, "arguments", [], p5want)._array_)), ('return ' + p5str(v_tmp2)))], 0) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '})()')], p5want)) })();
									})();
								};
								return (p5call(v_parameters, "emit_javascript2_set", [v_arguments, (p5num(v_level) + 1), v_wantarray], p5want));
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null), 'break', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							p5make_package("Perlito5")["v_THROW"] = (1);
							return (p5pkg["Perlito5::Javascript2"].emit_wrap_statement_javascript2([v_wantarray, 'throw(new p5_error("break", ""))'], p5want));
						}, null), 'next', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							p5make_package("Perlito5")["v_THROW"] = (1);
							var v_label;
							v_label = (p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget_hash(0)._hash_.p5hget('code'), function () { return '' }));
							return (p5pkg["Perlito5::Javascript2"].emit_wrap_statement_javascript2([v_wantarray, ('throw(new p5_error("next", "' + p5str(v_label) + '"))')], p5want));
						}, null), 'last', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							p5make_package("Perlito5")["v_THROW"] = (1);
							var v_label;
							v_label = (p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget_hash(0)._hash_.p5hget('code'), function () { return '' }));
							return (p5pkg["Perlito5::Javascript2"].emit_wrap_statement_javascript2([v_wantarray, ('throw(new p5_error("last", "' + p5str(v_label) + '"))')], p5want));
						}, null), 'redo', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							p5make_package("Perlito5")["v_THROW"] = (1);
							var v_label;
							v_label = (p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget_hash(0)._hash_.p5hget('code'), function () { return '' }));
							return (p5pkg["Perlito5::Javascript2"].emit_wrap_statement_javascript2([v_wantarray, ('throw(new p5_error("redo", "' + p5str(v_label) + '"))')], p5want));
						}, null), 'return', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							p5make_package("Perlito5")["v_THROW"] = (1);
							return (p5pkg["Perlito5::Javascript2"].emit_wrap_statement_javascript2([v_wantarray, ('throw(' + p5str(p5pkg["Perlito5::Javascript2"].to_runtime_context(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments'), v_level), 0)) + ')')], p5want));
						}, null), 'goto', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.p5aget(0));
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							p5make_package("Perlito5")["v_THROW"] = (1);
							return (p5pkg["Perlito5::Javascript2"].emit_wrap_statement_javascript2([v_wantarray, ('throw(' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), "emit_javascript2", [], 0)) + ')')], p5want));
						}, null), 'do', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							var v_tmp_strict;
							v_tmp_strict = (p5make_package("Perlito5")["v_STRICT"]);
							p5make_package("Perlito5")["v_STRICT"] = (0);
							var v_ast;
							v_ast = (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'eval', 'namespace', '', 'arguments', (new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'slurp', 'namespace', 'Perlito5::IO', 'arguments', (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments')), 1))))), 0));
							var v_js;
							v_js = (p5call(v_ast, "emit_javascript2", [v_level], 0));
							p5make_package("Perlito5")["v_STRICT"] = (v_tmp_strict);
							return (p5context([v_js], p5want));
						}, null), 'eval', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							p5make_package("Perlito5")["v_THROW"] = (1);
							var v_arg;
							v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
							var v_eval;
							if ( p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Do'], 0)) ) {
									v_eval = (p5call(v_arg, "emit_javascript2", [(p5num(v_level) + 1), v_wantarray], 0));
								}
								else {
									(function () {
										var v_var_env_perl5;
										v_var_env_perl5 = (p5pkg["Perlito5::Dumper"].ast_dumper([p5make_package("Perlito5")["v_VAR"]], 0));
										var v_m;
										v_m = (p5call(p5pkg["Perlito5::Grammar::Expression"], "term_square", [v_var_env_perl5, 0], 0));
										v_m = (p5pkg["Perlito5::Grammar::Expression"].expand_list(p5list_to_a((p5pkg["Perlito5::Match"].flat([v_m], p5want) || (p5pkg["Perlito5::Match"].flat([v_m], p5want) = new p5ArrayRef([])))._array_.p5aget(2)), 0));
										var v_var_env_js;
										v_var_env_js = (('(new p5ArrayRef(' + p5str(p5pkg["Perlito5::Javascript2"].to_list([v_m], 0)) + '))'));
										v_eval = (('eval(p5pkg["Perlito5::Javascript2::Runtime"].perl5_to_js([' + p5str(p5pkg["Perlito5::Javascript2"].to_str([v_arg], 0)) + ', ' + '"' + p5str(p5make_package("Perlito5")["v_PKG_NAME"]) + '", ' + p5str(v_var_env_js) + ', ' + '"' + p5str(v_wantarray) + '"' + ']))'));
									})();
								};
							return (p5context([('(function (p5want) {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + 'var r;' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + 'p5pkg["main"]["v_@"] = "";' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + 'p5pkg["Perlito5"]["v_STRICT"] = ' + p5str(p5make_package("Perlito5")["v_STRICT"]) + ';' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + 'try {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 2)], 0)) + 'r = ' + p5str(v_eval) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + '}' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + 'catch(err) {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 2)], 0)) + 'if ( err instanceof p5_error || err instanceof Error ) {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 3)], 0)) + 'p5pkg["main"]["v_@"] = err;' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 3)], 0)) + 'try {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 4)], 0)) + 'p5pkg["main"]["v_@"] = p5pkg["main"]["v_@"] + "' + String.fromCharCode(92) + 'n" + err.stack;' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 3)], 0)) + '}' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 3)], 0)) + 'catch(err) { }' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 2)], 0)) + '}' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 2)], 0)) + 'else {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 3)], 0)) + 'return(err);' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 2)], 0)) + '}' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + '}' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + 'return r;' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 0)], 0)) + '})(' + p5str(( (p5str(v_wantarray) == 'list') ? '1' : ( (p5str(v_wantarray) == 'scalar') ? '0' : ( (p5str(v_wantarray) == 'void') ? 'null' : 'p5want')))) + ')')], p5want));
						}, null), 'undef', p5sub(function (List__, p5want) {
							try {
								var v_self;
								v_self = (List__.shift());
								var v_level;
								v_level = (List__.shift());
								var v_wantarray;
								v_wantarray = (List__.shift());
								if ( (p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments')) && p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)) ) {
									(function () { throw(p5context([('(' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), "emit_javascript2", [], 0)) + ' = null)')], p5want)) })();
								};
								return (p5context(['null'], p5want));
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null), 'defined', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							var v_arg;
							v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
							var v_invocant;
							if ( ((p5str(p5pkg["Perlito5::AST::Apply"].ref([v_arg], 0)) == 'Perlito5::AST::Apply') && (p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('code')) == 'prefix:<&>')) ) {
									(function () {
										var v_arg2;
										v_arg2 = ((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
										v_invocant = (('p5code_lookup_by_name("' + p5str(p5make_package("Perlito5")["v_PKG_NAME"]) + '", ' + p5str(p5call(v_arg2, "emit_javascript2", [v_level], 0)) + ')'));
									})();
								}
								else if ( ((p5str(p5pkg["Perlito5::AST::Apply"].ref([v_arg], 0)) == 'Perlito5::AST::Var') && (p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('sigil')) == '&')) ) {
									v_invocant = (('p5pkg["' + p5str(p5or((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('namespace'), function () { return p5make_package("Perlito5")["v_PKG_NAME"] })) + '"]["' + p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('name')) + '"]'));
								}
								else {
									v_invocant = (p5call(v_arg, "emit_javascript2", [v_level, 'scalar'], 0));
								};
							return (p5context([('(' + p5str(v_invocant) + ' != null)')], p5want));
						}, null), 'shift', p5sub(function (List__, p5want) {
							try {
								var v_self;
								v_self = (List__.shift());
								var v_level;
								v_level = (List__.shift());
								var v_wantarray;
								v_wantarray = (List__.shift());
								if ( (p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments')) && p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)) ) {
									(function () { throw(p5context([(p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), "emit_javascript2", [v_level], 0)) + '.shift()')], p5want)) })();
								};
								return (p5context(['List__.shift()'], p5want));
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null), 'pop', p5sub(function (List__, p5want) {
							try {
								var v_self;
								v_self = (List__.shift());
								var v_level;
								v_level = (List__.shift());
								var v_wantarray;
								v_wantarray = (List__.shift());
								if ( (p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments')) && p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)) ) {
									(function () { throw(p5context([(p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), "emit_javascript2", [v_level], 0)) + '.pop()')], p5want)) })();
								};
								return (p5context(['List__.pop()'], p5want));
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null), 'unshift', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							var List_arguments= [];
							List_arguments = p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_);
							var v_v;
							v_v = (List_arguments.shift());
							return (p5context([(p5str(p5call(v_v, "emit_javascript2", [v_level], 0)) + '.p5unshift(' + p5str(p5pkg["Perlito5::Javascript2"].to_list([(new p5ArrayRef(List_arguments))], 0)) + ')')], p5want));
						}, null), 'push', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							var List_arguments= [];
							List_arguments = p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_);
							var v_v;
							v_v = (List_arguments.shift());
							return (p5context([(p5str(p5call(v_v, "emit_javascript2", [v_level], 0)) + '.p5push(' + p5str(p5pkg["Perlito5::Javascript2"].to_list([(new p5ArrayRef(List_arguments))], 0)) + ')')], p5want));
						}, null), 'tie', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							var List_arguments= [];
							List_arguments = p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_);
							var v_v;
							v_v = (List_arguments.shift());
							var v_meth;
							if ( (p5bool(p5call(v_v, "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call(v_v, "sigil", [], 0)) == '%')) ) {
									v_meth = ('hash');
								}
								else if ( (p5bool(p5call(v_v, "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call(v_v, "sigil", [], 0)) == '@')) ) {
									v_meth = ('array');
								}
								else if ( (p5bool(p5call(v_v, "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call(v_v, "sigil", [], 0)) == '$')) ) {
									v_meth = ('scalar');
								}
								else {
									p5pkg["Perlito5::AST::Apply"].die([p5list_to_a('tie ' + String.fromCharCode(39), p5pkg["Perlito5::AST::Apply"].ref([v_v], 1), String.fromCharCode(39) + ' not implemented')], null);
								};
							return (p5context([('p5tie_' + p5str(v_meth) + '(' + p5str(p5call(v_v, "emit_javascript2", [v_level], 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].to_list([(new p5ArrayRef(List_arguments))], 0)) + ')')], p5want));
						}, null), 'untie', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							var List_arguments= [];
							List_arguments = p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_);
							var v_v;
							v_v = (List_arguments.shift());
							var v_meth;
							if ( (p5bool(p5call(v_v, "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call(v_v, "sigil", [], 0)) == '%')) ) {
									v_meth = ('hash');
								}
								else if ( (p5bool(p5call(v_v, "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call(v_v, "sigil", [], 0)) == '@')) ) {
									v_meth = ('array');
								}
								else if ( (p5bool(p5call(v_v, "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call(v_v, "sigil", [], 0)) == '$')) ) {
									v_meth = ('scalar');
								}
								else {
									p5pkg["Perlito5::AST::Apply"].die([p5list_to_a('tie ' + String.fromCharCode(39), p5pkg["Perlito5::AST::Apply"].ref([v_v], 1), String.fromCharCode(39) + ' not implemented')], null);
								};
							return (p5context([('p5untie_' + p5str(v_meth) + '(' + p5str(p5call(v_v, "emit_javascript2", [v_level], 0)) + ')')], p5want));
						}, null), 'map', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							var List_in= [];
							List_in = p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_);
							var v_fun;
							if ( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('special_arg')) ) {
									v_fun = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('special_arg'));
								}
								else {
									v_fun = (List_in.shift());
								};
							var v_list;
							v_list = (p5pkg["Perlito5::Javascript2"].to_list([(new p5ArrayRef(List_in))], 0));
							if ( (p5str(p5pkg["Perlito5::AST::Apply"].ref([v_fun], 0)) == 'Perlito5::AST::Lit::Block') ) {
									v_fun = ((v_fun || (v_fun = new p5HashRef({})))._hash_.p5hget('stmts'));
								}
								else {
									v_fun = ((new p5ArrayRef([v_fun])));
								};
							return (p5context([('p5map(' + p5str(p5pkg["Perlito5::Javascript2"].pkg([], 0)) + ', ' + 'function (p5want) {' + String.fromCharCode(10) + p5str(p5call(p5context([p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", ['block', v_fun, 'needs_return', 1, 'top_level', 0], 0)], 0), "emit_javascript2", [(p5num(v_level) + 1)], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '}, ' + p5str(v_list) + ')')], p5want));
						}, null), 'grep', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							var List_in= [];
							List_in = p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_);
							var v_fun;
							if ( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('special_arg')) ) {
									v_fun = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('special_arg'));
								}
								else {
									v_fun = (List_in.shift());
								};
							var v_list;
							v_list = (p5pkg["Perlito5::Javascript2"].to_list([(new p5ArrayRef(List_in))], 0));
							if ( (p5str(p5pkg["Perlito5::AST::Apply"].ref([v_fun], 0)) == 'Perlito5::AST::Lit::Block') ) {
									v_fun = ((v_fun || (v_fun = new p5HashRef({})))._hash_.p5hget('stmts'));
								}
								else {
									v_fun = ((new p5ArrayRef([v_fun])));
								};
							return (p5context([('p5grep(' + p5str(p5pkg["Perlito5::Javascript2"].pkg([], 0)) + ', ' + 'function (p5want) {' + String.fromCharCode(10) + p5str(p5call(p5context([p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", ['block', v_fun, 'needs_return', 1, 'top_level', 0], 0)], 0), "emit_javascript2", [(p5num(v_level) + 1)], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '}, ' + p5str(v_list) + ')')], p5want));
						}, null), 'sort', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							var List_in= [];
							List_in = p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_);
							var v_fun;
							var v_list;
							if ( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('special_arg')) ) {
									v_fun = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('special_arg'));
								}
								else if ( (p5str(p5pkg["Perlito5::AST::Apply"].ref([List_in.p5aget(0)], 0)) == 'Perlito5::AST::Lit::Block') ) {
									v_fun = (List_in.shift());
								};
							if ( (p5str(p5pkg["Perlito5::AST::Apply"].ref([v_fun], 0)) == 'Perlito5::AST::Lit::Block') ) {
									v_fun = (('function (p5want) {' + String.fromCharCode(10) + p5str(p5call(p5context([p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", p5list_to_a('block', (v_fun || (v_fun = new p5HashRef({})))._hash_.p5hget('stmts'), 'needs_return', 1, 'top_level', 0), 0)], 0), "emit_javascript2", [(p5num(v_level) + 1)], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '}'));
								}
								else {
									v_fun = ('null');
								};
							v_list = (p5pkg["Perlito5::Javascript2"].to_list([(new p5ArrayRef(List_in))], 0));
							return (p5context([('p5sort(' + p5str(p5pkg["Perlito5::Javascript2"].pkg([], 0)) + ', ' + p5str(v_fun) + ', ' + p5str(v_list) + ')')], p5want));
						}, null), 'infix:<//>', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							return (p5context([('p5defined_or' + '(' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), "emit_javascript2", [v_level, 'scalar'], 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].emit_function_javascript2(p5list_to_a(v_level, v_wantarray, (v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(1)), 0)) + ')')], p5want));
						}, null), 'exists', p5sub(function (List__, p5want) {
							try {
								var v_self;
								v_self = (List__.shift());
								var v_level;
								v_level = (List__.shift());
								var v_wantarray;
								v_wantarray = (List__.shift());
								var v_arg;
								v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
								if ( p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Lookup'], 0)) ) {
									(function () {
										var v_v;
										v_v = (p5call(v_arg, "obj", [], 0));
										if ( (p5bool(p5call(v_v, "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call(v_v, "sigil", [], 0)) == '$')) ) {
											v_v = (p5call(p5pkg["Perlito5::AST::Var"], "new", p5list_to_a('sigil', '%', 'namespace', p5call(v_v, "namespace", [], 1), 'name', p5call(v_v, "name", [], 1)), 0));
											(function () { throw(p5context([('(' + p5str(p5call(v_v, "emit_javascript2", [], 0)) + ').hasOwnProperty(' + p5str(p5call(p5call(v_arg, "autoquote", p5list_to_a((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('index_exp')), 0), "emit_javascript2", [v_level], 0)) + ')')], p5want)) })();
										};
										(function () { throw(p5context([('(' + p5str(p5call(v_v, "emit_javascript2", [], 0)) + ')._hash_.hasOwnProperty(' + p5str(p5call(p5call(v_arg, "autoquote", p5list_to_a((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('index_exp')), 0), "emit_javascript2", [v_level], 0)) + ')')], p5want)) })();
									})();
								};
								if ( p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Index'], 0)) ) {
									(function () {
										var v_v;
										v_v = (p5call(v_arg, "obj", [], 0));
										if ( (p5bool(p5call(v_v, "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call(v_v, "sigil", [], 0)) == '$')) ) {
											v_v = (p5call(p5pkg["Perlito5::AST::Var"], "new", p5list_to_a('sigil', '@', 'namespace', p5call(v_v, "namespace", [], 1), 'name', p5call(v_v, "name", [], 1)), 0));
											(function () { throw(p5context([('(' + p5str(p5call(v_v, "emit_javascript2", [], 0)) + ').hasOwnProperty(' + p5str(p5call((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('index_exp'), "emit_javascript2", [v_level], 0)) + ')')], p5want)) })();
										};
										(function () { throw(p5context([('(' + p5str(p5call(v_v, "emit_javascript2", [], 0)) + ')._array_.hasOwnProperty(' + p5str(p5call((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('index_exp'), "emit_javascript2", [v_level], 0)) + ')')], p5want)) })();
									})();
								};
								if ( p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Call'], 0)) ) {
									if ( (p5str(p5call(v_arg, "method", [], 0)) == 'postcircumfix:<{ }>') ) {
										(function () { throw(p5context([('(' + p5str(p5call(p5call(v_arg, "invocant", [], 0), "emit_javascript2", [], 0)) + ')._hash_.hasOwnProperty(' + p5str(p5call(p5call(p5pkg["Perlito5::AST::Lookup"], "autoquote", p5list_to_a((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('arguments')), 0), "emit_javascript2", [v_level], 0)) + ')')], p5want)) })();
									};
									if ( (p5str(p5call(v_arg, "method", [], 0)) == 'postcircumfix:<[ ]>') ) {
										(function () { throw(p5context([('(' + p5str(p5call(p5call(v_arg, "invocant", [], 0), "emit_javascript2", [], 0)) + ')._array_.hasOwnProperty(' + p5str(p5call((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('arguments'), "emit_javascript2", [v_level], 0)) + ')')], p5want)) })();
									};
								};
								if ( (p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Var'], 0)) && (p5str(p5call(v_arg, "sigil", [], 0)) == '&')) ) {
									(function () {
										var v_name;
										v_name = ((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('name'));
										var v_namespace;
										v_namespace = (p5or((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('namespace'), function () { return p5make_package("Perlito5")["v_PKG_NAME"] }));
										(function () { throw(p5context([('p5pkg[' + p5str(p5pkg["Perlito5::Javascript2"].escape_string([v_namespace], 0)) + '].hasOwnProperty(' + p5str(p5pkg["Perlito5::Javascript2"].escape_string([v_name], 0)) + ')')], p5want)) })();
									})();
								};
								if ( (p5bool(p5call(v_arg, "isa", ['Perlito5::AST::Apply'], 0)) && (p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('code')) == 'prefix:<&>')) ) {
									var v_arg2;
									v_arg2 = ((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
									(function () { throw(p5context([('p5sub_exists(' + p5str(p5pkg["Perlito5::Javascript2"].to_str([v_arg2], 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].escape_string([p5make_package("Perlito5")["v_PKG_NAME"]], 0)) + ')')], p5want)) })()
								}
							}
							catch(err) {
								if ( err instanceof Error ) {
									throw(err);
								}
								else {
									return(err);
								}
							}
						}, null), 'prototype', p5sub(function (List__, p5want) {
							var v_self;
							v_self = (List__.shift());
							var v_level;
							v_level = (List__.shift());
							var v_wantarray;
							v_wantarray = (List__.shift());
							var v_arg;
							v_arg = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0));
							return (p5context([('p5sub_prototype(' + p5str(p5call(v_arg, "emit_javascript2", [], 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].escape_string([p5make_package("Perlito5")["v_PKG_NAME"]], 0)) + ')')], p5want));
						}, null)]);
				p5typeglob_set("Perlito5::AST::Apply", "emit_javascript2", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						var v_apply;
						v_apply = (p5call(v_self, "op_assign", [], 0));
						if ( p5bool(v_apply) ) {
							(function () { throw(p5call(v_apply, "emit_javascript2", [v_level], p5want)) })();
						};
						var v_code;
						v_code = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('code'));
						if ( (p5str(p5pkg["Perlito5::AST::Apply"].ref([v_code], 0)) != '') ) {
							(function () {
								var List_args= [];
								List_args = [];
								p5for(p5make_package("Perlito5::AST::Apply"), "v__", function () {
									List_args.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2", [], 1)));
									}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_), false, "");
								(function () { throw(p5context([('(' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('code'), "emit_javascript2", [v_level], 0)) + ')(' + p5pkg["Perlito5::AST::Apply"].join([',', p5list_to_a(List_args)], 0) + ')')], p5want)) })();
							})();
						};
						if ( (Hash_emit_js).hasOwnProperty(v_code) ) {
							(function () { throw((Hash_emit_js.p5hget(p5str(v_code)))([v_self, v_level, v_wantarray], p5want)) })()
						};
						if ( (p5global_hash("Perlito5::Javascript2", "op_infix_js_str")).hasOwnProperty(v_code) ) {
							(function () { throw(p5context([('(' + p5pkg["Perlito5::AST::Apply"].join([p5global_hash("Perlito5::Javascript2", "op_infix_js_str").p5hget(p5str(v_code)), p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5pkg["Perlito5::Javascript2"].to_str([p5pkg["Perlito5::AST::Apply"]["v__"]], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')')], p5want)) })();
						};
						if ( (p5global_hash("Perlito5::Javascript2", "op_infix_js_num")).hasOwnProperty(v_code) ) {
							(function () { throw(p5context([('(' + p5pkg["Perlito5::AST::Apply"].join([p5global_hash("Perlito5::Javascript2", "op_infix_js_num").p5hget(p5str(v_code)), p5list_to_a(p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (p5pkg["Perlito5::Javascript2"].to_num([p5pkg["Perlito5::AST::Apply"]["v__"]], p5want));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_)))], 0) + ')')], p5want)) })();
						};
						if ( (p5global_hash("Perlito5::Javascript2", "op_prefix_js_str")).hasOwnProperty(v_code) ) {
							(function () { throw(p5context([(p5str(p5global_hash("Perlito5::Javascript2", "op_prefix_js_str").p5hget(p5str(v_code))) + '(' + p5str(p5pkg["Perlito5::Javascript2"].to_str(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0)), 0)) + ')')], p5want)) })();
						};
						if ( ((p5str(v_code) == 'infix:<&&>') || (p5str(v_code) == 'infix:<and>')) ) {
							(function () { throw(p5context([('p5and' + '(' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), "emit_javascript2", [v_level, 'scalar'], 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].emit_function_javascript2(p5list_to_a(v_level, v_wantarray, (v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(1)), 0)) + ')')], p5want)) })();
						};
						if ( ((p5str(v_code) == 'infix:<||>') || (p5str(v_code) == 'infix:<or>')) ) {
							(function () { throw(p5context([('p5or' + '(' + p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), "emit_javascript2", [v_level, 'scalar'], 0)) + ', ' + p5str(p5pkg["Perlito5::Javascript2"].emit_function_javascript2(p5list_to_a(v_level, v_wantarray, (v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(1)), 0)) + ')')], p5want)) })();
						};
						if ( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) ) {
							if ( ((p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) == 'JS') && (p5str(v_code) == 'inline')) ) {
								if ( p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget(0), "isa", ['Perlito5::AST::Val::Buf'], 0)) ) {
									(function () { throw((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_.p5aget_hash(0)._hash_.p5hget('buf')) })();
								}
								else {
									p5pkg["Perlito5::AST::Apply"].die([['JS::inline needs a string constant']], null);
								};
							};
							v_code = (('p5pkg["' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) + '"].' + p5str(v_code)));
						}
						else {
							v_code = ((p5str(p5pkg["Perlito5::Javascript2"].pkg([], 0)) + '.' + p5str(v_code)));
						};
						var v_sig;
						var v_may_need_autoload;
						p5for_lex(function () {
								var v_name;
								v_name = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('code'));
								var v_namespace;
								v_namespace = (p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace'), function () { return p5make_package("Perlito5")["v_PKG_NAME"] }));
								var v_effective_name;
								v_effective_name = ((p5str(v_namespace) + '::' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('code'))));
								if ( (p5make_package("Perlito5")["v_PROTO"])._hash_.hasOwnProperty(v_effective_name) ) {
									v_sig = ((p5make_package("Perlito5")["v_PROTO"] || (p5make_package("Perlito5")["v_PROTO"] = new p5HashRef({})))._hash_.p5hget(p5str(v_effective_name)));
								}
								else if ( ((!( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace'))) || (p5str(v_namespace) == 'CORE')) && (p5make_package("Perlito5")["v_CORE_PROTO"])._hash_.hasOwnProperty(('CORE::' + p5str(v_name)))) ) {
									v_effective_name = (('CORE::' + p5str(v_name)));
									v_sig = ((p5make_package("Perlito5")["v_CORE_PROTO"] || (p5make_package("Perlito5")["v_CORE_PROTO"] = new p5HashRef({})))._hash_.p5hget(p5str(v_effective_name)));
								}
								else {
									if ( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('bareword')) ) {
										if ( p5bool(p5make_package("Perlito5")["v_STRICT"]) ) {
											p5pkg["Perlito5::AST::Apply"].die([[('Bareword "' + p5str(v_name) + '" not allowed while "strict subs" in use')]], null);
										};
										(function () { throw(p5pkg["Perlito5::Javascript2"].escape_string([(p5str(( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) ? (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) + '::') : '')) + p5str(v_name))], p5want)) })();
									};
									v_may_need_autoload = (1);
								};
							}, [0], false, ""
						);
						if ( ((((p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('code')) == 'say') || (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('code')) == 'print')) && !( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')))) && p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('bareword'))) ) {
							(v_self || (v_self = new p5HashRef({})))._hash_.p5hset('arguments', ((new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Var"], "new", ['sigil', '$', 'namespace', '', 'name', '_'], 1))))));
						};
						if ( p5bool(v_sig) ) {
							(function () {
								var List_out= [];
								List_out = [];
								var List_in= [];
								List_in = p5list_to_a((p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments'), function () { return (new p5ArrayRef([])) }) || (p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments'), function () { return (new p5ArrayRef([])) }) = new p5ArrayRef([])))._array_);
								var v_optional;
								v_optional = (0);
								p5while(function () {
										var v_c;
										v_c = (p5pkg["Perlito5::AST::Apply"].substr([v_sig, 0, 1], 0));
										if ( (p5str(v_c) == ';') ) {
											v_optional = (1);
										}
										else if ( ((p5str(v_c) == '$') || (p5str(v_c) == '_')) ) {
											if ( (p5bool(List_in.length) || !( p5bool(v_optional))) ) {
												List_out.p5push(p5list_to_a(p5call(List_in.shift(), "emit_javascript2", [v_level, 'scalar'], 1)))
											};
										}
										else if ( (p5str(v_c) == '@') ) {
											if ( (p5bool(List_in.length) || !( p5bool(v_optional))) ) {
												List_out.p5push(p5list_to_a(p5pkg["Perlito5::Javascript2"].to_list([(new p5ArrayRef(List_in))], 1)))
											};
											List_in = [];
										}
										else if ( (p5str(v_c) == '*') ) {
											if ( (p5bool(List_in.length) || !( p5bool(v_optional))) ) {
												(function () {
													var v_arg;
													v_arg = (List_in.shift());
													if ( p5bool((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('bareword')) ) {
														List_out.p5push([('p5pkg["' + p5str(p5or((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('namespace'), function () { return p5make_package("Perlito5")["v_PKG_NAME"] })) + '"]["f_' + p5str((v_arg || (v_arg = new p5HashRef({})))._hash_.p5hget('code')) + '"]')]);
													}
													else {
														List_out.p5push(p5list_to_a(p5call(v_arg, "emit_javascript2", [v_level, 'scalar'], 1)));
													};
												})();
											};
										}
										else if ( (p5str(v_c) == String.fromCharCode(92)) ) {
											if ( (p5pkg["Perlito5::AST::Apply"].substr([v_sig, 0, 2], 0) == String.fromCharCode(92) + '$') ) {
												v_sig = (p5pkg["Perlito5::AST::Apply"].substr([v_sig, 1], 0));
												if ( (p5bool(List_in.length) || !( p5bool(v_optional))) ) {
													List_out.p5push(p5list_to_a(p5call(List_in.shift(), "emit_javascript2", [v_level, 'scalar'], 1)))
												};
											}
											else if ( ((p5pkg["Perlito5::AST::Apply"].substr([v_sig, 0, 2], 0) == String.fromCharCode(92) + '@') || (p5pkg["Perlito5::AST::Apply"].substr([v_sig, 0, 2], 0) == String.fromCharCode(92) + '%')) ) {
												v_sig = (p5pkg["Perlito5::AST::Apply"].substr([v_sig, 1], 0));
												if ( (p5bool(List_in.length) || !( p5bool(v_optional))) ) {
													List_out.p5push(p5list_to_a(p5call(List_in.shift(), "emit_javascript2", [v_level, 'list'], 1)))
												};
											}
											else if ( (p5pkg["Perlito5::AST::Apply"].substr([v_sig, 0, 5], 0) == String.fromCharCode(92) + '[@%]') ) {
												v_sig = (p5pkg["Perlito5::AST::Apply"].substr([v_sig, 4], 0));
												if ( (p5bool(List_in.length) || !( p5bool(v_optional))) ) {
													List_out.p5push(p5list_to_a(p5call(List_in.shift(), "emit_javascript2", [v_level, 'list'], 1)))
												};
											}
											else if ( (p5pkg["Perlito5::AST::Apply"].substr([v_sig, 0, 6], 0) == String.fromCharCode(92) + '[$@%]') ) {
												v_sig = (p5pkg["Perlito5::AST::Apply"].substr([v_sig, 5], 0));
												if ( (p5bool(List_in.length) || !( p5bool(v_optional))) ) {
													List_out.p5push(p5list_to_a(p5call(List_in.shift(), "emit_javascript2", [v_level, 'list'], 1)))
												};
											};
										};
										v_sig = (p5pkg["Perlito5::AST::Apply"].substr([v_sig, 1], 0));
									}, function () { return p5pkg["Perlito5::AST::Apply"].length([v_sig], p5want) }, false, "");
								(function () { throw(p5context([(p5str(v_code) + '([' + p5pkg["Perlito5::AST::Apply"].join([', ', p5list_to_a(List_out)], 0) + '], ' + p5str(( (p5str(v_wantarray) == 'list') ? '1' : ( (p5str(v_wantarray) == 'scalar') ? '0' : ( (p5str(v_wantarray) == 'void') ? 'null' : 'p5want')))) + ')')], p5want)) })();
							})();
						};
						var List_args= [];
						List_args = [];
						var v_arg_list;
						v_arg_list = (p5pkg["Perlito5::Javascript2"].to_list_preprocess(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments')), 0));
						p5for(p5make_package("Perlito5::AST::Apply"), "v__", function () {
							List_args.p5push(p5list_to_a(p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2", [v_level], 1)));
							}, p5list_to_a((v_arg_list || (v_arg_list = new p5ArrayRef([])))._array_), false, "");
						var v_arg_code;
						v_arg_code = (( (p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('code')) == 'scalar') ? ('[' + p5pkg["Perlito5::AST::Apply"].join([', ', p5list_to_a(List_args)], 0) + ']') : p5pkg["Perlito5::Javascript2"].to_list([v_arg_list], 0)));
						if ( p5bool(v_may_need_autoload) ) {
							(function () {
								var v_name;
								v_name = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('code'));
								var v_namespace;
								v_namespace = (p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace'), function () { return p5make_package("Perlito5")["v_PKG_NAME"] }));
								(function () { throw(p5context([('p5call_sub(' + '"' + p5str(v_namespace) + '", ' + '"' + p5str(v_name) + '", ' + p5str(v_arg_code) + ', ' + p5str(( (p5str(v_wantarray) == 'list') ? '1' : ( (p5str(v_wantarray) == 'scalar') ? '0' : ( (p5str(v_wantarray) == 'void') ? 'null' : 'p5want')))) + ')')], p5want)) })();
							})();
						};
						return (p5context([(p5str(v_code) + '(' + p5str(v_arg_code) + ', ' + p5str(( (p5str(v_wantarray) == 'list') ? '1' : ( (p5str(v_wantarray) == 'scalar') ? '0' : ( (p5str(v_wantarray) == 'void') ? 'null' : 'p5want')))) + ')')], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Apply", "emit_javascript2_set_list", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_list;
						v_list = (List__.shift());
						if ( (p5str(p5call(v_self, "code", [], 0)) == 'undef') ) {
							(function () { throw(p5context([(p5str(v_list) + '.shift()')], p5want)) })();
						};
						return (p5pkg["Perlito5::AST::Apply"].die([p5list_to_a('not implemented: assign to ', p5call(v_self, "code", [], 1))], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Apply", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_code;
						v_code = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('code'));
						if ( ((((p5str(v_code) == 'my') || (p5str(v_code) == 'our')) || (p5str(v_code) == 'state')) || (p5str(v_code) == 'local')) ) {
							(function () { throw(p5context([p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return (( (p5str(p5pkg["Perlito5::AST::Apply"].ref([p5pkg["Perlito5::AST::Apply"]["v__"]], 0)) == 'Perlito5::AST::Var') ? p5call(p5pkg["Perlito5::AST::Decl"], "new", ['decl', v_code, 'type', '', 'var', p5pkg["Perlito5::AST::Apply"]["v__"]], p5want) : p5context([], p5want)));
							}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_))], p5want)) })();
						};
						if ( ((p5str(v_code) != 'do') && (p5str(v_code) != 'eval')) ) {
							if ( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('arguments')) ) {
								(function () { throw(p5context([p5map(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return ((p5context([p5call(p5pkg["Perlito5::AST::Apply"]["v__"], "emit_javascript2_get_decl", [], p5want)], p5want)));
								}, p5list_to_a(p5grep(p5pkg["Perlito5::AST::Apply"], function (p5want) {
return ((p5context([p5pkg["Perlito5::AST::Apply"].ref([p5pkg["Perlito5::AST::Apply"]["v__"]], p5want)], p5want)));
}, p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('arguments')._array_))))], p5want)) })()
							};
						};
						return (p5context([], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::If");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::If", "emit_javascript2", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						var v_body;
						v_body = (( (p5str(p5pkg["Perlito5::AST::If"].ref([(v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body')], 0)) != 'Perlito5::AST::Lit::Block') ? (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body') : ( !( p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body'), "stmts", [], p5want)._array_)) ? null : ( (p5str(v_wantarray) == 'runtime') ? p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", p5list_to_a('block', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body'), "stmts", [], 1), 'needs_return', 1), 0) : p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", p5list_to_a('block', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body'), "stmts", [], 1), 'needs_return', 0, 'create_context', 1), 0)))));
						var v_otherwise;
						v_otherwise = (( (p5str(p5pkg["Perlito5::AST::If"].ref([(v_self || (v_self = new p5HashRef({})))._hash_.p5hget('otherwise')], 0)) != 'Perlito5::AST::Lit::Block') ? (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('otherwise') : ( !( p5bool(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('otherwise'), "stmts", [], p5want)._array_)) ? null : ( (p5str(v_wantarray) == 'runtime') ? p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", p5list_to_a('block', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('otherwise'), "stmts", [], 1), 'needs_return', 1), 0) : p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", p5list_to_a('block', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('otherwise'), "stmts", [], 1), 'needs_return', 0, 'create_context', 1), 0)))));
						var v_s;
						v_s = (('if ( ' + p5str(p5pkg["Perlito5::Javascript2"].to_bool(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('cond'), (p5num(v_level) + 1)), 0)) + ' ) {'));
						if ( p5bool(v_body) ) {
							v_s = ((p5str(v_s) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + p5str(p5call(v_body, "emit_javascript2", [(p5num(v_level) + 1), v_wantarray], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '}'));
						}
						else {
							v_s = ((p5str(v_s) + '}'));
						};
						if ( p5bool(v_otherwise) ) {
							if ( ((p5num((v_otherwise || (v_otherwise = new p5HashRef({})))._hash_.p5hget_array('block')._array_) == 1) && (p5str(p5pkg["Perlito5::AST::If"].ref([(v_otherwise || (v_otherwise = new p5HashRef({})))._hash_.p5hget_array('block')._array_.p5aget(0)], 0)) == 'Perlito5::AST::If')) ) {
								(function () { throw(p5context([(p5str(v_s) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + 'else ' + p5str(p5call((v_otherwise || (v_otherwise = new p5HashRef({})))._hash_.p5hget_array('block')._array_.p5aget(0), "emit_javascript2", [v_level, v_wantarray], 0)))], p5want)) })();
							};
							v_s = ((p5str(v_s) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + 'else {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + p5str(p5call(v_otherwise, "emit_javascript2", [(p5num(v_level) + 1), v_wantarray], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '}'));
						};
						return (p5context([v_s], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::If", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						if ( (p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body')) && (p5str(p5pkg["Perlito5::AST::If"].ref([(v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body')], 0)) != 'Perlito5::AST::Lit::Block')) ) {
							(function () { throw(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body'), "emit_javascript2_get_decl", [], p5want)) })()
						};
						if ( (p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('otherwise')) && (p5str(p5pkg["Perlito5::AST::If"].ref([(v_self || (v_self = new p5HashRef({})))._hash_.p5hget('otherwise')], 0)) != 'Perlito5::AST::Lit::Block')) ) {
							(function () { throw(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('otherwise'), "emit_javascript2_get_decl", [], p5want)) })()
						};
						return (p5context([], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::When");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::When", "emit_javascript2", p5sub(function (List__, p5want) {
					var v_self;
					v_self = (List__.shift());
					var v_level;
					v_level = (List__.shift());
					var v_cond;
					v_cond = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('cond'));
					var v_body;
					v_body = (p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", p5list_to_a('block', p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body'), "stmts", [], 1), 'needs_return', 0, 'create_context', 1), 0));
					var v_expr;
					v_expr = (p5call(p5pkg["Perlito5::AST::Apply"], "new", p5list_to_a('code', 'infix:<==>', 'arguments', (new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::Var"], "new", ['sigil', '$', 'namespace', '', 'name', '_'], 1), v_cond)))), 0));
					var v_label;
					v_label = ('');
					var v_s;
					v_s = (('if ( ' + p5str(p5pkg["Perlito5::Javascript2"].to_bool([v_expr, (p5num(v_level) + 1)], 0)) + ' ) {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + p5str(p5call(v_body, "emit_javascript2", [(p5num(v_level) + 1)], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + 'throw(new p5_error("next", "' + p5str(v_label) + '"))' + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '}'));
					return (p5context([v_s], p5want));
				}, null));
				p5typeglob_set("Perlito5::AST::When", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::While");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::While", "emit_javascript2", p5sub(function (List__, p5want) {
					var v_self;
					v_self = (List__.shift());
					var v_level;
					v_level = (List__.shift());
					var v_cond;
					v_cond = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('cond'));
					var v_body;
					v_body = (( (p5str(p5pkg["Perlito5::AST::While"].ref([(v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body')], 0)) != 'Perlito5::AST::Lit::Block') ? (new p5ArrayRef(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body')))) : (v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('body')._hash_.p5hget('stmts')));
					return (p5context([('p5while(' + 'function () {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 2)], 0)) + p5str(p5call(p5context([p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", ['block', v_body, 'needs_return', 0, 'top_level', 0], 0)], 0), "emit_javascript2", [(p5num(v_level) + 2)], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + '}, ' + p5str(p5pkg["Perlito5::Javascript2"].emit_function_javascript2([v_level, 0, v_cond], 0)) + ', ' + p5str(p5pkg["Perlito5::AST::Lit::Block"].emit_javascript2_continue([v_self, v_level], 0)) + ', ' + '"' + p5str(p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('label'), function () { return '' })) + '"' + ')')], p5want));
				}, null));
				p5typeglob_set("Perlito5::AST::While", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::For");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::For", "emit_javascript2", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_body;
						v_body = (( (p5str(p5pkg["Perlito5::AST::For"].ref([(v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body')], 0)) != 'Perlito5::AST::Lit::Block') ? (new p5ArrayRef(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body')))) : (v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('body')._hash_.p5hget('stmts')));
						if ( (p5str(p5pkg["Perlito5::AST::For"].ref([(v_self || (v_self = new p5HashRef({})))._hash_.p5hget('cond')], 0)) == 'ARRAY') ) {
							(function () { throw(p5context([('for ( ' + p5str(( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('cond')._array_.p5aget(0)) ? (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('cond')._array_.p5aget(0), "emit_javascript2", [(p5num(v_level) + 1)], 0)) + '; ') : '; ')) + p5str(( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('cond')._array_.p5aget(1)) ? (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('cond')._array_.p5aget(1), "emit_javascript2", [(p5num(v_level) + 1)], 0)) + '; ') : '; ')) + p5str(( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('cond')._array_.p5aget(2)) ? (p5str(p5call((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_array('cond')._array_.p5aget(2), "emit_javascript2", [(p5num(v_level) + 1)], 0)) + ' ') : ' ')) + ') {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + p5str(p5call(p5context([p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", ['block', v_body, 'needs_return', 0, 'top_level', 0], 0)], 0), "emit_javascript2", [(p5num(v_level) + 1)], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '}')], p5want)) })();
						};
						var v_cond;
						v_cond = (p5pkg["Perlito5::Javascript2"].to_list(p5list_to_a((new p5ArrayRef(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('cond')))), (p5num(v_level) + 1)), 0));
						var v_topic;
						if ( (p5str(p5pkg["Perlito5::AST::For"].ref([(v_self || (v_self = new p5HashRef({})))._hash_.p5hget('body')], 0)) != 'ARRAY') ) {
							v_topic = ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget_hash('body')._hash_.p5hget('sig'))
						};
						if ( !( p5bool(v_topic)) ) {
							v_topic = (p5call(p5pkg["Perlito5::AST::Decl"], "new", p5list_to_a('decl', 'our', 'type', '', 'var', p5call(p5pkg["Perlito5::AST::Var"], "new", ['name', '_', 'namespace', '', 'sigil', '$'], 1)), 0));
						};
						var v_decl;
						v_decl = ('');
						var v_v;
						v_v = (v_topic);
						if ( p5bool((v_v || (v_v = new p5HashRef({})))._hash_.p5hget('decl')) ) {
							v_decl = ((v_v || (v_v = new p5HashRef({})))._hash_.p5hget('decl'));
							v_v = ((v_v || (v_v = new p5HashRef({})))._hash_.p5hget('var'));
						};
						var v_namespace;
						v_namespace = (p5or((v_v || (v_v = new p5HashRef({})))._hash_.p5hget('namespace'), function () { return p5make_package("Perlito5")["v_PKG_NAME"] }));
						var v_perl5_name;
						v_perl5_name = (p5call(v_v, "perl5_name", [], 0));
						var v_pre_declaration;
						v_pre_declaration = (p5call(v_v, "perl5_get_decl", [v_perl5_name], 0));
						if ( p5bool(v_pre_declaration) ) {
							v_decl = ((v_pre_declaration || (v_pre_declaration = new p5HashRef({})))._hash_.p5hget('decl'));
						};
						if ( (!( p5bool(v_decl)) && !( p5bool((v_v || (v_v = new p5HashRef({})))._hash_.p5hget('namespace')))) ) {
							if ( p5bool(p5make_package("Perlito5")["v_STRICT"]) ) {
								p5pkg["Perlito5::AST::For"].die([[('Global symbol "' + p5str(v_perl5_name) + '" requires explicit package name')]], null);
							};
							v_decl = ('our');
						};
						(p5make_package("Perlito5")["v_VAR"] || (p5make_package("Perlito5")["v_VAR"] = new p5ArrayRef([])))._array_.p5unshift(p5list_to_a((new p5HashRef({}))));
						(p5make_package("Perlito5")["v_VAR"] || (p5make_package("Perlito5")["v_VAR"] = new p5ArrayRef([])))._array_.p5aget_hash(0)._hash_.p5hset(p5str(v_perl5_name), ((new p5HashRef({'decl' : v_decl, 'namespace' : v_namespace}))));
						var v_s;
						if ( ((p5str(v_decl) == 'my') || (p5str(v_decl) == 'state')) ) {
							(function () {
								var v_sig;
								v_sig = (p5call(v_v, "emit_javascript2", [(p5num(v_level) + 1)], 0));
								v_s = (('p5for_lex(' + ('function (' + p5str(v_sig) + ') {' + String.fromCharCode(10)) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 2)], 0)) + p5str(p5call(p5context([p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", ['block', v_body, 'needs_return', 0, 'top_level', 0], 0)], 0), "emit_javascript2", [(p5num(v_level) + 2)], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + '}, ' + p5str(v_cond) + ', ' + p5str(p5pkg["Perlito5::AST::Lit::Block"].emit_javascript2_continue([v_self, v_level], 0)) + ', ' + '"' + p5str(p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('label'), function () { return '' })) + '"' + ')'));
							})();
						}
						else {
							v_s = (('p5for(' + 'p5make_package("' + p5str(v_namespace) + '"), ' + '"v_' + p5str((v_v || (v_v = new p5HashRef({})))._hash_.p5hget('name')) + '", ' + 'function () {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + p5str(p5call(p5context([p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", ['block', v_body, 'needs_return', 0, 'top_level', 0], 0)], 0), "emit_javascript2", [(p5num(v_level) + 2)], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + '}, ' + p5str(v_cond) + ', ' + p5str(p5pkg["Perlito5::AST::Lit::Block"].emit_javascript2_continue([v_self, v_level], 0)) + ', ' + '"' + p5str(p5or((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('label'), function () { return '' })) + '"' + ')'));
						};
						(p5make_package("Perlito5")["v_VAR"] || (p5make_package("Perlito5")["v_VAR"] = new p5ArrayRef([])))._array_.shift();
						return (p5context([v_s], p5want));
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::For", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Sub");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::Sub", "emit_javascript2", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_prototype;
						v_prototype = (( ((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sig') != null) ? p5pkg["Perlito5::Javascript2"].escape_string(p5list_to_a((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('sig')), 0) : 'null'));
						var v_s;
						v_s = (('p5sub(function (List__, p5want) {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + p5str(p5call(p5context([p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", p5list_to_a('block', (v_self || (v_self = new p5HashRef({})))._hash_.p5hget('block'), 'needs_return', 1, 'top_level', 1), 0)], 0), "emit_javascript2", [(p5num(v_level) + 1)], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '}, ' + p5str(v_prototype) + ')'));
						if ( p5bool((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('name')) ) {
							(function () { throw(p5context([('p5typeglob_set("' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('namespace')) + '", "' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('name')) + '", ' + p5str(v_s) + ')')], p5want)) })()
						}
						else {
							(function () { throw(p5context([v_s], p5want)) })()
						}
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Sub", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Do");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::Do", "emit_javascript2", p5sub(function (List__, p5want) {
					var v_self;
					v_self = (List__.shift());
					var v_level;
					v_level = (List__.shift());
					var v_wantarray;
					v_wantarray = (List__.shift());
					var v_block;
					v_block = (p5call(p5call(v_self, "simplify", [], 0), "block", [], 0));
					return (p5context([('(function () {' + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([(p5num(v_level) + 1)], 0)) + p5str(p5call(p5context([p5call(p5pkg["Perlito5::Javascript2::LexicalBlock"], "new", ['block', v_block, 'needs_return', 1], 0)], 0), "emit_javascript2", [(p5num(v_level) + 1), v_wantarray], 0)) + String.fromCharCode(10) + p5str(p5pkg["Perlito5::Javascript2"].tab([v_level], 0)) + '})()')], p5want));
				}, null));
				p5typeglob_set("Perlito5::AST::Do", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
		p5make_package("Perlito5::AST::Use");
		p5for_lex(function () {
				p5typeglob_set("Perlito5::AST::Use", "emit_javascript2", p5sub(function (List__, p5want) {
					try {
						var v_self;
						v_self = (List__.shift());
						var v_level;
						v_level = (List__.shift());
						var v_wantarray;
						v_wantarray = (List__.shift());
						p5pkg["Perlito5::Grammar::Use"].emit_time_eval([v_self], null);
						if ( (p5str(v_wantarray) == 'runtime') ) {
							(function () { throw(p5context(['p5context([], p5want)'], p5want)) })()
						}
						else {
							(function () { throw(p5context([('// ' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('code')) + ' ' + p5str((v_self || (v_self = new p5HashRef({})))._hash_.p5hget('mod')) + String.fromCharCode(10))], p5want)) })()
						}
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				}, null));
				p5typeglob_set("Perlito5::AST::Use", "emit_javascript2_get_decl", p5sub(function (List__, p5want) {
					return (p5context([], p5want));
				}, null));
			}, [0], false, ""
		);
	})()
;
	// use Perlito5::Javascript2::Emitter
;
	(function () {
		null;
		p5make_package("Perlito5::Javascript2::Runtime");
		p5typeglob_set("Perlito5::Javascript2::Runtime", "perl5_to_js", p5sub(function (List__, p5want) {
			var local_idx = p5LOCAL.length;
			var v_source;
			var v_namespace;
			var v_var_env_js;
			(function () {
					var tmp105 = p5list_to_a(List__);
					var tmp106 = tmp105.slice(0);
					v_source = tmp105.shift();
					v_namespace = tmp105.shift();
					v_var_env_js = tmp105.shift();
					return tmp106
				})();
			var v_strict_old;
			v_strict_old = (p5make_package("Perlito5")["v_STRICT"]);
			p5set_local(p5pkg["Perlito5"],'VAR','$'); 
			p5make_package("Perlito5")["v_VAR"] = (v_var_env_js);
			p5set_local(p5pkg["Perlito5"],'PKG_NAME','$'); 
			p5make_package("Perlito5")["v_PKG_NAME"] = (v_namespace);
			var v_match;
			v_match = (p5call(p5pkg["Perlito5::Grammar"], "exp_stmts", [v_source, 0], 0));
			if ( (!( p5bool(v_match)) || (p5num((v_match || (v_match = new p5HashRef({})))._hash_.p5hget('to')) != p5pkg["Perlito5::Javascript2::Runtime"].length([v_source], 0))) ) {
					p5pkg["Perlito5::Javascript2::Runtime"].die([p5list_to_a('Syntax error in eval near pos ', (v_match || (v_match = new p5HashRef({})))._hash_.p5hget('to'))], null);
				};
			var v_ast;
			v_ast = (p5call(p5pkg["Perlito5::AST::Do"], "new", p5list_to_a('block', p5call(p5pkg["Perlito5::AST::Lit::Block"], "new", p5list_to_a('stmts', (v_match || (v_match = new p5HashRef({})))._hash_.p5hget('capture')), 1)), 0));
			var v_js_code;
			v_js_code = (p5call(v_ast, "emit_javascript2", [0], 0));
			p5make_package("Perlito5")["v_STRICT"] = (v_strict_old);
			return p5cleanup_local(local_idx, (p5context([v_js_code], p5want)));
			p5cleanup_local(local_idx, null);
		}, null));
		p5typeglob_set("Perlito5::Javascript2::Runtime", "emit_javascript2", p5sub(function (List__, p5want) {
			return (p5context([(('//' + String.fromCharCode(10) + '// lib/Perlito5/Javascript2/Runtime.js' + String.fromCharCode(10) + '//' + String.fromCharCode(10) + '// Runtime for "Perlito" Perl5-in-Javascript2' + String.fromCharCode(10) + '//' + String.fromCharCode(10) + '// AUTHORS' + String.fromCharCode(10) + '//' + String.fromCharCode(10) + '// Flavio Soibelmann Glock  fglock@gmail.com' + String.fromCharCode(10) + '//' + String.fromCharCode(10) + '// COPYRIGHT' + String.fromCharCode(10) + '//' + String.fromCharCode(10) + '// Copyright 2009, 2010, 2011, 2012 by Flavio Soibelmann Glock and others.' + String.fromCharCode(10) + '//' + String.fromCharCode(10) + '// This program is free software; you can redistribute it and/or modify it' + String.fromCharCode(10) + '// under the same terms as Perl itself.' + String.fromCharCode(10) + '//' + String.fromCharCode(10) + '// See /web/20140107071234/http://www.perl.com/perl/misc/Artistic.html' + String.fromCharCode(10) + String.fromCharCode(10) + 'var isNode = typeof require != "undefined";' + String.fromCharCode(10) + String.fromCharCode(10) + 'if (typeof p5pkg !== "object") {' + String.fromCharCode(10) + '    p5pkg = {};' + String.fromCharCode(10) + '    p5LOCAL = [];' + String.fromCharCode(10) + String.fromCharCode(10) + '    var universal = function () {};' + String.fromCharCode(10) + '    p5pkg.UNIVERSAL = new universal();' + String.fromCharCode(10) + '    p5pkg.UNIVERSAL._ref_ = "UNIVERSAL";' + String.fromCharCode(10) + '    p5pkg.UNIVERSAL.isa = function (List__) {' + String.fromCharCode(10) + '        // TODO - use @ISA' + String.fromCharCode(10) + '        return List__[0]._class_._ref_ == List__[1]' + String.fromCharCode(10) + '    };' + String.fromCharCode(10) + '    p5pkg.UNIVERSAL.can = function (List__) {' + String.fromCharCode(10) + '        var o = List__[0];' + String.fromCharCode(10) + '        var s = List__[1];' + String.fromCharCode(10) + '        if ( s.indexOf("::") == -1 ) {' + String.fromCharCode(10) + '            return p5method_lookup(s, o._class_._ref__, {})' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        var c = s.split("::");' + String.fromCharCode(10) + '        s = c.pop(); ' + String.fromCharCode(10) + '        return p5method_lookup(s, c.join("::"), {});' + String.fromCharCode(10) + '    };' + String.fromCharCode(10) + '    p5pkg.UNIVERSAL.DOES = p5pkg.UNIVERSAL.can;' + String.fromCharCode(10) + String.fromCharCode(10) + '    var core = function () {};' + String.fromCharCode(10) + '    p5pkg["CORE"] = new core();' + String.fromCharCode(10) + '    p5pkg["CORE"]._ref_ = "CORE";' + String.fromCharCode(10) + String.fromCharCode(10) + '    var core_global = function () {};' + String.fromCharCode(10) + '    core_global.prototype = p5pkg.CORE;' + String.fromCharCode(10) + '    p5pkg["CORE::GLOBAL"] = new core_global();' + String.fromCharCode(10) + '    p5pkg["CORE::GLOBAL"]._ref_ = "CORE::GLOBAL";' + String.fromCharCode(10) + String.fromCharCode(10) + '    p5_error = function (type, v) {' + String.fromCharCode(10) + '        this.type = type;' + String.fromCharCode(10) + '        this.v = v;' + String.fromCharCode(10) + '        this.toString = function(){' + String.fromCharCode(10) + '            if (this.type == ' + String.fromCharCode(39) + 'break' + String.fromCharCode(39) + ') {' + String.fromCharCode(10) + '                return ' + String.fromCharCode(39) + 'Can' + String.fromCharCode(92) + String.fromCharCode(39) + 't "break" outside a given block' + String.fromCharCode(39) + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '            if (this.type == ' + String.fromCharCode(39) + 'next' + String.fromCharCode(39) + ' || this.type == ' + String.fromCharCode(39) + 'last' + String.fromCharCode(39) + ' || this.type == ' + String.fromCharCode(39) + 'redo' + String.fromCharCode(39) + ') {' + String.fromCharCode(10) + '                if (this.v == "") { return ' + String.fromCharCode(39) + 'Can' + String.fromCharCode(92) + String.fromCharCode(39) + 't "' + String.fromCharCode(39) + ' + this.type + ' + String.fromCharCode(39) + '" outside a loop block' + String.fromCharCode(39) + ' }' + String.fromCharCode(10) + '                return ' + String.fromCharCode(39) + 'Label not found for "' + String.fromCharCode(39) + ' + this.type + ' + String.fromCharCode(39) + ' ' + String.fromCharCode(39) + ' + this.v + ' + String.fromCharCode(39) + '"' + String.fromCharCode(39) + ';' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '            return this.v;' + String.fromCharCode(10) + '        };' + String.fromCharCode(10) + '    };' + String.fromCharCode(10) + '    p5_error.prototype = Error.prototype;' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5make_package(pkg_name) {' + String.fromCharCode(10) + '    if (!p5pkg.hasOwnProperty(pkg_name)) {' + String.fromCharCode(10) + '        var tmp = function () {};' + String.fromCharCode(10) + '        tmp.prototype = p5pkg["CORE::GLOBAL"];' + String.fromCharCode(10) + '        p5pkg[pkg_name] = new tmp();' + String.fromCharCode(10) + '        p5pkg[pkg_name]._ref_ = pkg_name;' + String.fromCharCode(10) + '        p5pkg[pkg_name]._class_ = p5pkg[pkg_name];  // XXX memory leak' + String.fromCharCode(10) + '        p5pkg[pkg_name]._is_package_ = 1;' + String.fromCharCode(10) + String.fromCharCode(10) + '        // TODO - add the other package global variables' + String.fromCharCode(10) + '        p5pkg[pkg_name]["List_ISA"] = [];' + String.fromCharCode(10) + '        p5pkg[pkg_name]["v_a"] = null;' + String.fromCharCode(10) + '        p5pkg[pkg_name]["v_b"] = null;' + String.fromCharCode(10) + '        p5pkg[pkg_name]["v__"] = null;' + String.fromCharCode(10) + '        p5pkg[pkg_name]["v_AUTOLOAD"] = null;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return p5pkg[pkg_name];' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5code_lookup_by_name(package_name, sub_name) {' + String.fromCharCode(10) + '    // sub_name can be a function already' + String.fromCharCode(10) + '    if (typeof sub_name === "function") {' + String.fromCharCode(10) + '        return sub_name;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    // sub_name can have an optional namespace' + String.fromCharCode(10) + '    var parts = sub_name.split(/::/);' + String.fromCharCode(10) + '    if (parts.length > 1) {' + String.fromCharCode(10) + '        sub_name = parts.pop();' + String.fromCharCode(10) + '        package_name = parts.join("::");' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    if (p5pkg.hasOwnProperty(package_name)) {' + String.fromCharCode(10) + '        var c = p5pkg[package_name];' + String.fromCharCode(10) + '        if ( c.hasOwnProperty(sub_name) ) {' + String.fromCharCode(10) + '            return c[sub_name]' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return null;' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5get_class_for_method(method, class_name, seen) {' + String.fromCharCode(10) + '    // default mro' + String.fromCharCode(10) + '    // TODO - cache the methods that were already looked up' + String.fromCharCode(10) + '    if ( p5pkg[class_name].hasOwnProperty(method) ) {' + String.fromCharCode(10) + '        return class_name' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    var isa = p5pkg[class_name].List_ISA;' + String.fromCharCode(10) + '    if (isa) {' + String.fromCharCode(10) + '        for (var i = 0; i < isa.length; i++) {' + String.fromCharCode(10) + '            if (!seen[isa[i]]) {' + String.fromCharCode(10) + '                var m = p5get_class_for_method(method, isa[i], seen);' + String.fromCharCode(10) + '                if (m) {' + String.fromCharCode(10) + '                    return m ' + String.fromCharCode(10) + '                }' + String.fromCharCode(10) + '                seen[isa[i]]++;' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5method_lookup(method, class_name, seen) {' + String.fromCharCode(10) + '    var c = p5get_class_for_method(method, class_name, seen);' + String.fromCharCode(10) + '    if (c) {' + String.fromCharCode(10) + '        return p5pkg[c][method]' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    if ( p5pkg.UNIVERSAL.hasOwnProperty(method) ) {' + String.fromCharCode(10) + '        return p5pkg.UNIVERSAL[method]' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5call(invocant, method, list, p5want) {' + String.fromCharCode(10) + String.fromCharCode(10) + '    if (typeof invocant === "string") {' + String.fromCharCode(10) + '        list.unshift(invocant);' + String.fromCharCode(10) + '        invocant = p5make_package(invocant);' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    else if ( invocant.hasOwnProperty("_is_package_") ) {' + String.fromCharCode(10) + '        list.unshift(invocant._ref_);   // invocant is a "package" object' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    else {' + String.fromCharCode(10) + '        list.unshift(invocant);' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + String.fromCharCode(10) + '    if ( invocant.hasOwnProperty("_class_") ) {' + String.fromCharCode(10) + String.fromCharCode(10) + '        if ( invocant._class_.hasOwnProperty(method) ) {' + String.fromCharCode(10) + '            return invocant._class_[method](list, p5want)' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        var m = p5method_lookup(method, invocant._class_._ref_, {});' + String.fromCharCode(10) + '        if (m) {' + String.fromCharCode(10) + '            return m(list, p5want)' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + String.fromCharCode(10) + '        // method can have an optional namespace' + String.fromCharCode(10) + '        var pkg_name = method.split(/::/);' + String.fromCharCode(10) + '        if (pkg_name.length > 1) {' + String.fromCharCode(10) + '            var name = pkg_name.pop();' + String.fromCharCode(10) + '            pkg_name = pkg_name.join("::");' + String.fromCharCode(10) + '            m = p5method_lookup(name, pkg_name, {});' + String.fromCharCode(10) + '            if (m) {' + String.fromCharCode(10) + '                return m(list, p5want)' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '            p5pkg.CORE.die(["method not found: ", name, " in class ", pkg_name]);' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + String.fromCharCode(10) + '        pkg_name = p5get_class_for_method(' + String.fromCharCode(39) + 'AUTOLOAD' + String.fromCharCode(39) + ', invocant._class_._ref_, {}) || p5get_class_for_method(' + String.fromCharCode(39) + 'AUTOLOAD' + String.fromCharCode(39) + ', "UNIVERSAL", {});' + String.fromCharCode(10) + '        if (pkg_name) {' + String.fromCharCode(10) + '            p5pkg[pkg_name]["v_AUTOLOAD"] = invocant._class_._ref_ + "::" + method;' + String.fromCharCode(10) + '            return p5pkg[pkg_name]["AUTOLOAD"](list, p5want);' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + String.fromCharCode(10) + '        p5pkg.CORE.die(["method not found: ", method, " in class ", invocant._class_._ref_]);' + String.fromCharCode(10) + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + String.fromCharCode(10) + '    p5pkg.CORE.die(["Can' + String.fromCharCode(39) + 't call method ", method, " on unblessed reference"]);' + String.fromCharCode(10) + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5call_sub(namespace, name, list, p5want) {' + String.fromCharCode(10) + '    if(p5pkg[namespace].hasOwnProperty(name)) {' + String.fromCharCode(10) + '        return p5pkg[namespace][name](list, p5want)' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    if(p5pkg[namespace].hasOwnProperty("AUTOLOAD")) {' + String.fromCharCode(10) + '        p5pkg[namespace]["v_AUTOLOAD"] = namespace + "::" + name;' + String.fromCharCode(10) + '        return p5pkg[namespace]["AUTOLOAD"](list, p5want)' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    p5pkg.CORE.die(["Undefined subroutine &" + namespace + "::" + name]);' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5sub(fun, prot) {' + String.fromCharCode(10) + '    fun._prototype_ = prot;' + String.fromCharCode(10) + '    return fun;' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5sub_exists(name, current_pkg_name) {' + String.fromCharCode(10) + '    var v = name;' + String.fromCharCode(10) + '    var pkg_name = v.split(/::/);' + String.fromCharCode(10) + '    if (pkg_name.length > 1) {' + String.fromCharCode(10) + '        v = pkg_name.pop();' + String.fromCharCode(10) + '        pkg_name = pkg_name.join("::");' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    else {' + String.fromCharCode(10) + '        pkg_name = current_pkg_name;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    var c = v.charCodeAt(0);' + String.fromCharCode(10) + '    if (c < 27) {' + String.fromCharCode(10) + '        v = String.fromCharCode(c + 64) + v.substr(1);' + String.fromCharCode(10) + '        pkg_name = ' + String.fromCharCode(39) + 'main' + String.fromCharCode(39) + ';' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return p5pkg[pkg_name].hasOwnProperty(v) ' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5sub_prototype(name, current_pkg_name) {' + String.fromCharCode(10) + '    if (typeof name === "function") {' + String.fromCharCode(10) + '        return name._prototype_;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    var v = name;' + String.fromCharCode(10) + '    var pkg_name = v.split(/::/);' + String.fromCharCode(10) + '    if (pkg_name.length > 1) {' + String.fromCharCode(10) + '        v = pkg_name.pop();' + String.fromCharCode(10) + '        pkg_name = pkg_name.join("::");' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    else {' + String.fromCharCode(10) + '        pkg_name = current_pkg_name;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    var c = v.charCodeAt(0);' + String.fromCharCode(10) + '    if (c < 27) {' + String.fromCharCode(10) + '        v = String.fromCharCode(c + 64) + v.substr(1);' + String.fromCharCode(10) + '        pkg_name = ' + String.fromCharCode(39) + 'main' + String.fromCharCode(39) + ';' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    if (p5pkg[pkg_name].hasOwnProperty(v)) {' + String.fromCharCode(10) + '        return p5pkg[pkg_name][v]._prototype_' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return p5pkg["Perlito5"].v_PROTO._hash_[name] || p5pkg["Perlito5"].v_CORE_PROTO._hash_[name]' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5scalar_deref(v, current_pkg_name) {' + String.fromCharCode(10) + '    if (typeof v === "string") {' + String.fromCharCode(10) + '        var pkg_name = v.split(/::/);' + String.fromCharCode(10) + '        if (pkg_name.length > 1) {' + String.fromCharCode(10) + '            v = pkg_name.pop();' + String.fromCharCode(10) + '            pkg_name = pkg_name.join("::");' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        else {' + String.fromCharCode(10) + '            pkg_name = current_pkg_name;' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        var c = v.charCodeAt(0);' + String.fromCharCode(10) + '        if (c < 27) {' + String.fromCharCode(10) + '            v = String.fromCharCode(c + 64) + v.substr(1);' + String.fromCharCode(10) + '            pkg_name = ' + String.fromCharCode(39) + 'main' + String.fromCharCode(39) + ';' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        return p5make_package(pkg_name)["v_"+v];' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return v._scalar_;' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5scalar_deref_set(v, n, current_pkg_name) {' + String.fromCharCode(10) + '    if (typeof v === "string") {' + String.fromCharCode(10) + '        var pkg_name = v.split(/::/);' + String.fromCharCode(10) + '        if (pkg_name.length > 1) {' + String.fromCharCode(10) + '            v = pkg_name.pop();' + String.fromCharCode(10) + '            pkg_name = pkg_name.join("::");' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        else {' + String.fromCharCode(10) + '            pkg_name = current_pkg_name;' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        var c = v.charCodeAt(0);' + String.fromCharCode(10) + '        if (c < 27) {' + String.fromCharCode(10) + '            v = String.fromCharCode(c + 64) + v.substr(1);' + String.fromCharCode(10) + '            pkg_name = ' + String.fromCharCode(39) + 'main' + String.fromCharCode(39) + ';' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        p5make_package(pkg_name)["v_"+v] = n;' + String.fromCharCode(10) + '        return p5pkg[pkg_name]["v_"+v];' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    v._scalar_ = n;' + String.fromCharCode(10) + '    return v._scalar_;' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5global_array(pkg_name, name) {' + String.fromCharCode(10) + '    v = "List_"+name;' + String.fromCharCode(10) + '    if (!p5make_package(pkg_name).hasOwnProperty(v)) {' + String.fromCharCode(10) + '        p5pkg[pkg_name][v] = [];' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return p5pkg[pkg_name][v];' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5global_hash(pkg_name, name) {' + String.fromCharCode(10) + '    v = "Hash_"+name;' + String.fromCharCode(10) + '    if (!p5make_package(pkg_name).hasOwnProperty(v)) {' + String.fromCharCode(10) + '        p5pkg[pkg_name][v] = {};' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return p5pkg[pkg_name][v];' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5make_package("main");' + String.fromCharCode(10) + 'p5make_package("Perlito5");' + String.fromCharCode(10) + 'p5pkg["Perlito5"].v_PKG_NAME = "main";' + String.fromCharCode(10) + 'p5pkg["main"]["v_@"] = [];      // $@' + String.fromCharCode(10) + 'p5pkg["main"]["v_|"] = 0;       // $|' + String.fromCharCode(10) + 'p5pkg["main"]["v_/"] = "' + String.fromCharCode(92) + 'n";    // $/' + String.fromCharCode(10) + 'p5pkg["main"][' + String.fromCharCode(39) + 'v_"' + String.fromCharCode(39) + '] = " ";     // $"' + String.fromCharCode(10) + 'p5pkg["main"]["List_#"] = [];   // @#' + String.fromCharCode(10) + 'p5scalar_deref_set(String.fromCharCode(15), isNode ? "node.js" : "javascript2");  // $^O' + String.fromCharCode(10) + 'p5pkg["main"]["List_INC"] = [];' + String.fromCharCode(10) + 'p5pkg["main"]["Hash_INC"] = {};' + String.fromCharCode(10) + 'p5pkg["main"]["List_ARGV"] = [];' + String.fromCharCode(10) + 'p5pkg["main"]["Hash_ENV"] = {};' + String.fromCharCode(10) + 'if (isNode) {' + String.fromCharCode(10) + '    p5pkg["main"]["List_ARGV"] = process.argv.splice(2);' + String.fromCharCode(10) + String.fromCharCode(10) + '    p5pkg["main"]["Hash_ENV"] = {};' + String.fromCharCode(10) + '    for (e in process.env) p5pkg["main"]["Hash_ENV"][e] = process.env[e];' + String.fromCharCode(10) + String.fromCharCode(10) + '    p5pkg["main"]["v_$"]       = process.pid;' + String.fromCharCode(10) + '} else if (typeof arguments === "object") {' + String.fromCharCode(10) + '    p5pkg["main"]["List_ARGV"] = arguments;' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5make_package("Perlito5::IO");' + String.fromCharCode(10) + 'p5make_package("Perlito5::Runtime");' + String.fromCharCode(10) + 'p5make_package("Perlito5::Grammar");' + String.fromCharCode(10) + String.fromCharCode(10) + 'var sigils = { ' + String.fromCharCode(39) + '@' + String.fromCharCode(39) + ' : ' + String.fromCharCode(39) + 'List_' + String.fromCharCode(39) + ', ' + String.fromCharCode(39) + '%' + String.fromCharCode(39) + ' : ' + String.fromCharCode(39) + 'Hash_' + String.fromCharCode(39) + ', ' + String.fromCharCode(39) + '$' + String.fromCharCode(39) + ' : ' + String.fromCharCode(39) + 'v_' + String.fromCharCode(39) + ', ' + String.fromCharCode(39) + '&' + String.fromCharCode(39) + ' : ' + String.fromCharCode(39) + String.fromCharCode(39) + ' };' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5typeglob_set(namespace, name, obj) {' + String.fromCharCode(10) + '    p5make_package(namespace);' + String.fromCharCode(10) + '    if ( obj.hasOwnProperty("_ref_") ) {' + String.fromCharCode(10) + '        if ( obj._ref_ == "HASH" ) {' + String.fromCharCode(10) + '            p5pkg[namespace][sigils[' + String.fromCharCode(39) + '%' + String.fromCharCode(39) + '] + name] = obj._hash_;' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        else if ( obj._ref_ == "ARRAY" ) {' + String.fromCharCode(10) + '            p5pkg[namespace][sigils[' + String.fromCharCode(39) + '@' + String.fromCharCode(39) + '] + name] = obj._array_;' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        else if ( obj._ref_ == "SCALAR" ) {' + String.fromCharCode(10) + '            p5pkg[namespace][sigils[' + String.fromCharCode(39) + '$' + String.fromCharCode(39) + '] + name] = obj._scalar_;' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        else if ( obj._ref_ == "CODE" ) {' + String.fromCharCode(10) + '            p5pkg[namespace][sigils[' + String.fromCharCode(39) + '&' + String.fromCharCode(39) + '] + name] = obj._code_;' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        else if ( obj._ref_ == "GLOB" ) {' + String.fromCharCode(10) + '            // TODO' + String.fromCharCode(10) + '            p5pkg[namespace][name] = obj;' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    else {' + String.fromCharCode(10) + '        p5pkg[namespace][name] = obj;   // native CODE' + String.fromCharCode(10) + '        // TODO - non-reference' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return p5pkg[namespace][name];  // TODO - return GLOB' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5typeglob_deref_set(v, obj, current_pkg_name) {' + String.fromCharCode(10) + '    if (typeof v === "string") {' + String.fromCharCode(10) + '        var pkg_name = v.split(/::/);' + String.fromCharCode(10) + '        if (pkg_name.length > 1) {' + String.fromCharCode(10) + '            v = pkg_name.pop();' + String.fromCharCode(10) + '            pkg_name = pkg_name.join("::");' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        else {' + String.fromCharCode(10) + '            pkg_name = current_pkg_name;' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        return p5typeglob_set(pkg_name, v, obj);' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    CORE.die(["TODO: can' + String.fromCharCode(39) + 't p5typeglob_deref_set()"]);' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5set_local(namespace, name, sigil) {' + String.fromCharCode(10) + '    var vname = sigils[sigil] + name;' + String.fromCharCode(10) + '    p5LOCAL.push([namespace, vname, namespace[vname]]);' + String.fromCharCode(10) + String.fromCharCode(10) + '    if (sigil == ' + String.fromCharCode(39) + '$' + String.fromCharCode(39) + ') {' + String.fromCharCode(10) + '        namespace[vname] = null;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    else if (sigil == ' + String.fromCharCode(39) + '@' + String.fromCharCode(39) + ') {' + String.fromCharCode(10) + '        namespace[vname] = new p5Array([]);' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    else if (sigil == ' + String.fromCharCode(39) + '%' + String.fromCharCode(39) + ') {' + String.fromCharCode(10) + '        namespace[vname] = new p5Hash({});' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return namespace[vname];' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5cleanup_local(idx, value) {' + String.fromCharCode(10) + '    while (p5LOCAL.length > idx) {' + String.fromCharCode(10) + '        l = p5LOCAL.pop();' + String.fromCharCode(10) + '        l[0][l[1]] = l[2];' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return value;' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + '//-------- Reference' + String.fromCharCode(10) + String.fromCharCode(10) + 'var p5id = Math.floor(Math.random() * 1000000000) + 1000000000;' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5HashRef(o) {' + String.fromCharCode(10) + '    this._hash_ = o;' + String.fromCharCode(10) + '    this._ref_ = "HASH";' + String.fromCharCode(10) + '    this.bool = function() { return 1 };' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5ArrayRef(o) {' + String.fromCharCode(10) + '    this._array_ = o;' + String.fromCharCode(10) + '    this._ref_ = "ARRAY";' + String.fromCharCode(10) + '    this.bool = function() { return 1 };' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5ScalarRef(o) {' + String.fromCharCode(10) + '    this._scalar_ = o;' + String.fromCharCode(10) + '    this._ref_ = "SCALAR";' + String.fromCharCode(10) + '    this.bool = function() { return 1 };' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5GlobRef(o) {' + String.fromCharCode(10) + '    this._scalar_ = o;' + String.fromCharCode(10) + '    this._ref_ = "GLOB";' + String.fromCharCode(10) + '    this.bool = function() { return 1 };' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'function p5CodeRef(o) {' + String.fromCharCode(10) + '    this._code_ = o;' + String.fromCharCode(10) + '    this._ref_ = "CODE";' + String.fromCharCode(10) + '    this.bool = function() { return 1 };' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + '//-------- Hash ' + String.fromCharCode(10) + String.fromCharCode(10) + 'Object.defineProperty( Object.prototype, "p5hget", {' + String.fromCharCode(10) + '    enumerable : false,' + String.fromCharCode(10) + '    value : function (i) { return this[i] }' + String.fromCharCode(10) + '});' + String.fromCharCode(10) + 'Object.defineProperty( Object.prototype, "p5hset", {' + String.fromCharCode(10) + '    enumerable : false,' + String.fromCharCode(10) + '    value : function (i, v) { this[i] = v; return this[i] }' + String.fromCharCode(10) + '});' + String.fromCharCode(10) + String.fromCharCode(10) + 'Object.defineProperty( Object.prototype, "p5incr", {' + String.fromCharCode(10) + '    enumerable : false,' + String.fromCharCode(10) + '    value : function (i) {' + String.fromCharCode(10) + '        this[i] = p5incr_(this[i]);' + String.fromCharCode(10) + '        return this[i];' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '});' + String.fromCharCode(10) + 'Object.defineProperty( Object.prototype, "p5postincr", {' + String.fromCharCode(10) + '    enumerable : false,' + String.fromCharCode(10) + '    value : function (i) {' + String.fromCharCode(10) + '        var v = this[i];' + String.fromCharCode(10) + '        this[i] = p5incr_(this[i]);' + String.fromCharCode(10) + '        return v;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '});' + String.fromCharCode(10) + 'Object.defineProperty( Object.prototype, "p5decr", {' + String.fromCharCode(10) + '    enumerable : false,' + String.fromCharCode(10) + '    value : function (i) {' + String.fromCharCode(10) + '        this[i] = p5decr_(this[i]);' + String.fromCharCode(10) + '        return this[i];' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '});' + String.fromCharCode(10) + 'Object.defineProperty( Object.prototype, "p5postdecr", {' + String.fromCharCode(10) + '    enumerable : false,' + String.fromCharCode(10) + '    value : function (i) {' + String.fromCharCode(10) + '        var v = this[i];' + String.fromCharCode(10) + '        this[i] = p5decr_(this[i]);' + String.fromCharCode(10) + '        return v;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '});' + String.fromCharCode(10) + String.fromCharCode(10) + 'Object.defineProperty( Object.prototype, "p5hget_array", {' + String.fromCharCode(10) + '    enumerable : false,' + String.fromCharCode(10) + '    value : function (i) {' + String.fromCharCode(10) + '        if (this[i] == null) { this[i] = new p5ArrayRef([]) }' + String.fromCharCode(10) + '        return this[i]' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '});' + String.fromCharCode(10) + 'Object.defineProperty( Object.prototype, "p5hget_hash", {' + String.fromCharCode(10) + '    enumerable : false,' + String.fromCharCode(10) + '    value : function (i) {' + String.fromCharCode(10) + '        if (this[i] == null) { this[i] = new p5HashRef({}) }' + String.fromCharCode(10) + '        return this[i]' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '});' + String.fromCharCode(10) + String.fromCharCode(10) + '//-------' + String.fromCharCode(10) + String.fromCharCode(10) + String.fromCharCode(10) + 'p5context = function(List__, p5want) {' + String.fromCharCode(10) + '    if (p5want) {' + String.fromCharCode(10) + '        return p5list_to_a.apply(null, List__);' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    // scalar: return the last value' + String.fromCharCode(10) + '    var o = List__;' + String.fromCharCode(10) + '    while (o instanceof Array) {' + String.fromCharCode(10) + '        o =   o.length' + String.fromCharCode(10) + '            ? o[o.length-1]' + String.fromCharCode(10) + '            : null;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return o;' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5list_to_a = function() {' + String.fromCharCode(10) + '    var res = [];' + String.fromCharCode(10) + '    for (i = 0; i < arguments.length; i++) {' + String.fromCharCode(10) + '        var o = arguments[i];' + String.fromCharCode(10) + '        if  (  o == null' + String.fromCharCode(10) + '            || o._class_    // perl5 blessed reference' + String.fromCharCode(10) + '            || o._ref_      // perl5 un-blessed reference' + String.fromCharCode(10) + '            )' + String.fromCharCode(10) + '        {' + String.fromCharCode(10) + '            res.push(o);' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        else if (o instanceof Array) {' + String.fromCharCode(10) + '            // perl5 array' + String.fromCharCode(10) + '            for (j = 0; j < o.length; j++) {' + String.fromCharCode(10) + '                res.push(o[j]);' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        else if (typeof o === "object") {' + String.fromCharCode(10) + '            // perl5 hash' + String.fromCharCode(10) + '            for(var j in o) {' + String.fromCharCode(10) + '                if (o.hasOwnProperty(j)) {' + String.fromCharCode(10) + '                    res.push(j);' + String.fromCharCode(10) + '                    res.push(o[j]);' + String.fromCharCode(10) + '                }' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        else {' + String.fromCharCode(10) + '            // non-ref' + String.fromCharCode(10) + '            res.push(o);' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return res;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5a_to_h = function(a) {' + String.fromCharCode(10) + '    var res = {};' + String.fromCharCode(10) + '    for (i = 0; i < a.length; i+=2) {' + String.fromCharCode(10) + '        res[p5str(a[i])] = a[i+1];' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return res;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5idx = function(a, i) {' + String.fromCharCode(10) + '    return i >= 0 ? i : a.length + i' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5str = function(o) {' + String.fromCharCode(10) + '    if (o == null) {' + String.fromCharCode(10) + '        return "";' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    if (typeof o === "object") {' + String.fromCharCode(10) + '        if (o instanceof Array) {' + String.fromCharCode(10) + '            return CORE.join(["", o]);' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        if ( o.hasOwnProperty("_ref_") ) {' + String.fromCharCode(10) + '            var class_name = ' + String.fromCharCode(39) + String.fromCharCode(39) + ';' + String.fromCharCode(10) + '            if (o._class_ && typeof o._class_._ref_ === "string") {' + String.fromCharCode(10) + '                // blessed reference' + String.fromCharCode(10) + '                class_name = o._class_._ref_ + ' + String.fromCharCode(39) + '=' + String.fromCharCode(39) + ';' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '            if (!o._id_) { o._id_ = p5id++ }' + String.fromCharCode(10) + '            return [class_name, o._ref_, ' + String.fromCharCode(39) + '(0x' + String.fromCharCode(39) + ', o._id_.toString( 16 ), ' + String.fromCharCode(39) + ')' + String.fromCharCode(39) + '].join(' + String.fromCharCode(39) + String.fromCharCode(39) + ');' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    if (typeof o === "function") {' + String.fromCharCode(10) + '        var class_name = ' + String.fromCharCode(39) + String.fromCharCode(39) + ';' + String.fromCharCode(10) + '        if (o._class_ && typeof o._class_._ref_ === "string") {' + String.fromCharCode(10) + '            // blessed reference' + String.fromCharCode(10) + '            class_name = o._class_._ref_ + ' + String.fromCharCode(39) + '=' + String.fromCharCode(39) + ';' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        if (!o._id_) { o._id_ = p5id++ }' + String.fromCharCode(10) + '        return [class_name, ' + String.fromCharCode(39) + 'CODE(0x' + String.fromCharCode(39) + ', o._id_.toString( 16 ), ' + String.fromCharCode(39) + ')' + String.fromCharCode(39) + '].join(' + String.fromCharCode(39) + String.fromCharCode(39) + ');' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    if (typeof o == "number" && Math.abs(o) < 0.0001 && o != 0) {' + String.fromCharCode(10) + '        return o.toExponential().replace(/e-(' + String.fromCharCode(92) + 'd)$/,"e-0$1");' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    if (typeof o === "boolean") {' + String.fromCharCode(10) + '        return o ? "1" : "";' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    if (typeof o !== "string") {' + String.fromCharCode(10) + '        return "" + o;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return o;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5num = function(o) {' + String.fromCharCode(10) + '    if (o == null) {' + String.fromCharCode(10) + '        return 0;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    if (typeof o === "object" && (o instanceof Array)) {' + String.fromCharCode(10) + '        return o.length;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    if (typeof o !== "number") {' + String.fromCharCode(10) + '        var s = p5str(o).trim();' + String.fromCharCode(10) + '        var s1 = s.substr(0, 3).toUpperCase();' + String.fromCharCode(10) + '        if ( s1 == "NAN" ) { return NaN };' + String.fromCharCode(10) + '        if ( s1 == "INF" ) { return Infinity };' + String.fromCharCode(10) + '        s1 = s.substr(0, 4).toUpperCase();' + String.fromCharCode(10) + '        if ( s1 == "-NAN" ) { return NaN };' + String.fromCharCode(10) + '        if ( s1 == "-INF" ) { return -Infinity };' + String.fromCharCode(10) + '        s1 = parseFloat(s);' + String.fromCharCode(10) + '        if ( isNaN(s1) ) { return 0 };' + String.fromCharCode(10) + '        return s1;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return o;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5bool = function(o) {' + String.fromCharCode(10) + '    if (o) {' + String.fromCharCode(10) + '        if (typeof o === "boolean") {' + String.fromCharCode(10) + '            return o;' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        if (typeof o === "number") {' + String.fromCharCode(10) + '            return o;' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        if (typeof o === "string") {' + String.fromCharCode(10) + '            return o != "" && o != "0";' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        if (typeof o.length === "number") {' + String.fromCharCode(10) + '            return o.length;' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        if (o instanceof Error) {' + String.fromCharCode(10) + '            return true;' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        for (var i in o) {' + String.fromCharCode(10) + '            return true;' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return false;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5incr_ = function(o) {' + String.fromCharCode(10) + '    if (typeof o === "number") {' + String.fromCharCode(10) + '        return o + 1;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return p5str_inc(p5str(o));' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5decr_ = function(o) {' + String.fromCharCode(10) + '    if (typeof o === "number") {' + String.fromCharCode(10) + '        return o - 1;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return p5num(o) - 1;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5modulo = function(o, k) {' + String.fromCharCode(10) + '    var m = o % k;' + String.fromCharCode(10) + '    if ( k < 0 && m > 0 ) {' + String.fromCharCode(10) + '        m = m + k;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    else if ( k > 0 && m < 0 ) {' + String.fromCharCode(10) + '        m = m + k;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return m;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5shift_left = function(o, k) {' + String.fromCharCode(10) + '    return k < 31 ? o << k : o * Math.pow(2, k);' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5and = function(a, fb) {' + String.fromCharCode(10) + '    if (p5bool(a)) {' + String.fromCharCode(10) + '        return fb();' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return a;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5or = function(a, fb) {' + String.fromCharCode(10) + '    if (p5bool(a)) {' + String.fromCharCode(10) + '        return a;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return fb();' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5defined_or = function(a, fb) {' + String.fromCharCode(10) + '    if (a == null) {' + String.fromCharCode(10) + '        return fb();' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return a;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5cmp = function(a, b) {' + String.fromCharCode(10) + '    return a > b ? 1 : a < b ? -1 : 0 ' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5complement = function(a) {' + String.fromCharCode(10) + '    return a < 0 ? ~a : 4294967295 - a' + String.fromCharCode(10) + '    // return a < 0 ? ~a : 18446744073709551615 - a' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5str_replicate = function(o, n) {' + String.fromCharCode(10) + '    n = p5num(n);' + String.fromCharCode(10) + '    return n ? Array(n + 1).join(o) : "";' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5list_replicate = function(o, n) {' + String.fromCharCode(10) + '    o = p5list_to_a(o);' + String.fromCharCode(10) + '    n = p5num(n);' + String.fromCharCode(10) + '    var out = [];' + String.fromCharCode(10) + '    for(var i = 0; i < n; i++) {' + String.fromCharCode(10) + '        for(var j = 0; j < o.length; j++) {' + String.fromCharCode(10) + '            out.push(o[j]);' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return out;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5str_inc = function(s) {' + String.fromCharCode(10) + '    s = p5str(s);' + String.fromCharCode(10) + '    if (s.length < 2) {' + String.fromCharCode(10) + '        if (s.match(/[012345678ABCDEFGHIJKLMNOPQRSTUVWXYabcdefghijklmnopqrstuvwxy]/)) {' + String.fromCharCode(10) + '            return String.fromCharCode(s.charCodeAt(0) + 1);' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        if (s == "9") {' + String.fromCharCode(10) + '            return "10";' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        if (s == "Z") {' + String.fromCharCode(10) + '            return "AA";' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        if (s == "z") {' + String.fromCharCode(10) + '            return "aa";' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        return "1";' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    var c = p5str_inc(s.substr(s.length-1, 1));' + String.fromCharCode(10) + '    if (c.length == 1) {' + String.fromCharCode(10) + '        return s.substr(0, s.length-1) + c;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return p5str_inc(s.substr(0, s.length-1)) + c.substr(c.length-1, 1);' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5negative = function(o) {' + String.fromCharCode(10) + '    if (o == null) {' + String.fromCharCode(10) + '        return ' + String.fromCharCode(39) + '-0' + String.fromCharCode(39) + ';' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    if (typeof o === "object" && (o instanceof Array)) {' + String.fromCharCode(10) + '        return -(o.length);' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    if (typeof o !== "number") {' + String.fromCharCode(10) + '        var s = p5str(o);' + String.fromCharCode(10) + '        s1 = parseFloat(s.trim());' + String.fromCharCode(10) + '        if ( isNaN(s1) ) {' + String.fromCharCode(10) + '            var c = s.substr(0, 1);' + String.fromCharCode(10) + '            if ( c == ' + String.fromCharCode(39) + '+' + String.fromCharCode(39) + ' ) { s = s.substr(1); return ' + String.fromCharCode(39) + '-' + String.fromCharCode(39) + ' + s }' + String.fromCharCode(10) + '            if ( c == ' + String.fromCharCode(39) + '-' + String.fromCharCode(39) + ' ) { s = s.substr(1); return ' + String.fromCharCode(39) + '+' + String.fromCharCode(39) + ' + s }' + String.fromCharCode(10) + '            if ( c.length && !c.match(/[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]/) ) {' + String.fromCharCode(10) + '                if ( s.trim().substr(0,1) == "-" ) { return 0 };' + String.fromCharCode(10) + '                return ' + String.fromCharCode(39) + '-0' + String.fromCharCode(39) + ';' + String.fromCharCode(10) + '            };' + String.fromCharCode(10) + '            return ' + String.fromCharCode(39) + '-' + String.fromCharCode(39) + ' + s' + String.fromCharCode(10) + '        };' + String.fromCharCode(10) + '        return -s1;' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    return -o;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5for = function(namespace, var_name, func, args, cont, label) {' + String.fromCharCode(10) + '    var _redo = false;' + String.fromCharCode(10) + '    var v_old = namespace[var_name];' + String.fromCharCode(10) + '    for(var i = 0; i < args.length; i++) {' + String.fromCharCode(10) + '        namespace[var_name] = args[i];' + String.fromCharCode(10) + '        try {' + String.fromCharCode(10) + '            func()' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        catch(err) {' + String.fromCharCode(10) + '            if (err instanceof p5_error && err.v == label) {' + String.fromCharCode(10) + '                if (err.type == ' + String.fromCharCode(39) + 'last' + String.fromCharCode(39) + ') { return }' + String.fromCharCode(10) + '                else if (err.type == ' + String.fromCharCode(39) + 'redo' + String.fromCharCode(39) + ') { i--; _redo = true }' + String.fromCharCode(10) + '                else if (err.type != ' + String.fromCharCode(39) + 'next' + String.fromCharCode(39) + ') { throw(err) }' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '            else {' + String.fromCharCode(10) + '                throw(err)' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        if (cont) {' + String.fromCharCode(10) + '            try {' + String.fromCharCode(10) + '                if (!_redo) { cont() }' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '            catch(err) {' + String.fromCharCode(10) + '                if (err instanceof p5_error && err.v == label) {' + String.fromCharCode(10) + '                    if (err.type == ' + String.fromCharCode(39) + 'last' + String.fromCharCode(39) + ') { return }' + String.fromCharCode(10) + '                    else if (err.type == ' + String.fromCharCode(39) + 'redo' + String.fromCharCode(39) + ') { _redo = true }' + String.fromCharCode(10) + '                    else if (err.type != ' + String.fromCharCode(39) + 'next' + String.fromCharCode(39) + ') { throw(err) }' + String.fromCharCode(10) + '                }            ' + String.fromCharCode(10) + '                else {' + String.fromCharCode(10) + '                    throw(err)' + String.fromCharCode(10) + '                }' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '       }' + String.fromCharCode(10) + '   }' + String.fromCharCode(10) + '    namespace[var_name] = v_old;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5for_lex = function(func, args, cont, label) {' + String.fromCharCode(10) + '    var _redo = false;' + String.fromCharCode(10) + '    for(var i = 0; i < args.length; i++) {' + String.fromCharCode(10) + '        try {' + String.fromCharCode(10) + '            func(args[i])' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        catch(err) {' + String.fromCharCode(10) + '            if (err instanceof p5_error && err.v == label) {' + String.fromCharCode(10) + '                if (err.type == ' + String.fromCharCode(39) + 'last' + String.fromCharCode(39) + ') { return }' + String.fromCharCode(10) + '                else if (err.type == ' + String.fromCharCode(39) + 'redo' + String.fromCharCode(39) + ') { i--; _redo = true }' + String.fromCharCode(10) + '                else if (err.type != ' + String.fromCharCode(39) + 'next' + String.fromCharCode(39) + ') { throw(err) }' + String.fromCharCode(10) + '            }            ' + String.fromCharCode(10) + '            else {' + String.fromCharCode(10) + '                throw(err)' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        if (cont) {' + String.fromCharCode(10) + '            try {' + String.fromCharCode(10) + '                if (!_redo) { cont() }' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '            catch(err) {' + String.fromCharCode(10) + '                if (err instanceof p5_error && err.v == label) {' + String.fromCharCode(10) + '                    if (err.type == ' + String.fromCharCode(39) + 'last' + String.fromCharCode(39) + ') { return }' + String.fromCharCode(10) + '                    else if (err.type == ' + String.fromCharCode(39) + 'redo' + String.fromCharCode(39) + ') { _redo = true }' + String.fromCharCode(10) + '                    else if (err.type != ' + String.fromCharCode(39) + 'next' + String.fromCharCode(39) + ') { throw(err) }' + String.fromCharCode(10) + '                }            ' + String.fromCharCode(10) + '                else {' + String.fromCharCode(10) + '                    throw(err)' + String.fromCharCode(10) + '                }' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5while = function(func, cond, cont, label) {' + String.fromCharCode(10) + '    var _redo = false;' + String.fromCharCode(10) + '    while (_redo || p5bool(cond())) {' + String.fromCharCode(10) + '        _redo = false;' + String.fromCharCode(10) + '        try {' + String.fromCharCode(10) + '            func()' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        catch(err) {' + String.fromCharCode(10) + '            if (err instanceof p5_error && err.v == label) {' + String.fromCharCode(10) + '                if (err.type == ' + String.fromCharCode(39) + 'last' + String.fromCharCode(39) + ') { return }' + String.fromCharCode(10) + '                else if (err.type == ' + String.fromCharCode(39) + 'redo' + String.fromCharCode(39) + ') { _redo = true }' + String.fromCharCode(10) + '                else if (err.type != ' + String.fromCharCode(39) + 'next' + String.fromCharCode(39) + ') { throw(err) }' + String.fromCharCode(10) + '            }            ' + String.fromCharCode(10) + '            else {' + String.fromCharCode(10) + '                throw(err)' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '        if (cont) {' + String.fromCharCode(10) + '            try {' + String.fromCharCode(10) + '                if (!_redo) { cont() }' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '            catch(err) {' + String.fromCharCode(10) + '                if (err instanceof p5_error && err.v == label) {' + String.fromCharCode(10) + '                    if (err.type == ' + String.fromCharCode(39) + 'last' + String.fromCharCode(39) + ') { return }' + String.fromCharCode(10) + '                    else if (err.type == ' + String.fromCharCode(39) + 'redo' + String.fromCharCode(39) + ') { _redo = true }' + String.fromCharCode(10) + '                    else if (err.type != ' + String.fromCharCode(39) + 'next' + String.fromCharCode(39) + ') { throw(err) }' + String.fromCharCode(10) + '                }            ' + String.fromCharCode(10) + '                else {' + String.fromCharCode(10) + '                    throw(err)' + String.fromCharCode(10) + '                }' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5map = function(namespace, func, args) {' + String.fromCharCode(10) + '    var v_old = namespace["v__"];' + String.fromCharCode(10) + '    var out = [];' + String.fromCharCode(10) + '    for(var i = 0; i < args.length; i++) {' + String.fromCharCode(10) + '        namespace["v__"] = args[i];' + String.fromCharCode(10) + '        var o = p5list_to_a(func(1));' + String.fromCharCode(10) + '        for(var j = 0; j < o.length; j++) {' + String.fromCharCode(10) + '            out.push(o[j]);' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    namespace["v__"] = v_old;' + String.fromCharCode(10) + '    return out;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5grep = function(namespace, func, args) {' + String.fromCharCode(10) + '    var v_old = namespace["v__"];' + String.fromCharCode(10) + '    var out = [];' + String.fromCharCode(10) + '    for(var i = 0; i < args.length; i++) {' + String.fromCharCode(10) + '        namespace["v__"] = args[i];' + String.fromCharCode(10) + '        if (p5bool(func(0))) {' + String.fromCharCode(10) + '            out.push(args[i])' + String.fromCharCode(10) + '        }' + String.fromCharCode(10) + '    }' + String.fromCharCode(10) + '    namespace["v__"] = v_old;' + String.fromCharCode(10) + '    return out;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10) + 'p5sort = function(namespace, func, args) {' + String.fromCharCode(10) + '    var a_old = namespace["v_a"];' + String.fromCharCode(10) + '    var b_old = namespace["v_b"];' + String.fromCharCode(10) + '    var out = ' + String.fromCharCode(10) + '        func == null' + String.fromCharCode(10) + '        ? args.sort()' + String.fromCharCode(10) + '        : args.sort(' + String.fromCharCode(10) + '            function(a, b) {' + String.fromCharCode(10) + '                namespace["v_a"] = a;' + String.fromCharCode(10) + '                namespace["v_b"] = b;' + String.fromCharCode(10) + '                return func(0);' + String.fromCharCode(10) + '            }' + String.fromCharCode(10) + '        );' + String.fromCharCode(10) + '    namespace["v_a"] = a_old;' + String.fromCharCode(10) + '    namespace["v_b"] = b_old;' + String.fromCharCode(10) + '    return out;' + String.fromCharCode(10) + '};' + String.fromCharCode(10) + String.fromCharCode(10)))], p5want));
		}, null));
		1;
	})()
;
	// use Perlito5::Javascript2::Runtime
;
	p5typeglob_set("Perlito5", "compile_p5_to_js", p5sub(function (List__, p5want) {
		var v_s;
		v_s = (List__.shift());
		p5make_package("Perlito5")["v_PKG_NAME"] = ('main');
		p5make_package("Perlito5")["v_PROTO"] = ((new p5HashRef({})));
		var v_ast;
		v_ast = (p5call(p5pkg["Perlito5::Grammar"], "exp_stmts", [v_s, 0], 0));
		return (p5pkg["Perlito5::AST::CompUnit"].emit_javascript2_program(p5list_to_a((new p5ArrayRef(p5list_to_a(p5call(p5pkg["Perlito5::AST::CompUnit"], "new", p5list_to_a('name', 'main', 'body', p5pkg["Perlito5::Match"].flat([v_ast], 1)), 1))))), p5want));
	}, null));
	1;
})()

